name:CI

on:
push:
branches:[main,master]
pull_request:
branches:["*"]

jobs:
setup-and-check:
runs-on:ubuntu-latest
services:
mongo:
image:mongo:7
ports:
-27017:27017
options:"--health-cmd='mongosh--eval\"db.runCommand({ping:1})\"'--health-interval=10s--health-timeout=5s--health-retries=5"
redis:
image:redis:7-alpine
ports:
-6379:6379
steps:
-name:Checkout
uses:actions/checkout@v4

-name:UseNode.js18
uses:actions/setup-node@v4
with:
node-version:'18'
cache:'npm'

-name:Cacherootnodemodules
uses:actions/cache@v4
with:
path:~/.npm
key:${{runner.os}}-node-${{hashFiles('**/package-lock.json')}}

-name:Installrootdependencies
run:npmci

-name:Backend:install&type-check
working-directory:./backend
run:|
npmci
#build(tsc)willrunvianpmrunbuildifpresent;keepexplicitcheck
npxtsc--noEmit

-name:Backend:runtests
working-directory:./backend
run:|
npmci
npmtest

-name:Frontend:install&build
working-directory:./frontend
run:|
npmci
npmrunbuild--if-present

-name:Lint(placeholder)
run:echo"Runlinthere(addeslintstep)"

-name:Rununittests(placeholder)
run:echo"Runbackend/unittestshere(jest/vitest)"

docker-builds:
runs-on:ubuntu-latest
needs:setup-and-check
steps:
-name:Checkout
uses:actions/checkout@v4

-name:SetupDockerBuildx
uses:docker/setup-buildx-action@v2

-name:Buildbackendimage(runtime)
run:dockerbuild-thafjet-backend:ci--targetruntime-fbackend/Dockerfilebackend

-name:Buildfrontendimage
run:dockerbuild-thafjet-frontend:ci-ffrontend/Dockerfilefrontend

-name:OptionallypublishtoGHCR(onlyonmain)
if:github.ref=='refs/heads/main'&&secrets.GHCR_TOKEN
env:
CR_PAT:${{secrets.GHCR_TOKEN}}
run:|
echo$CR_PAT|dockerloginghcr.io-u${{github.actor}}--password-stdin
dockertaghafjet-backend:cighcr.io/${{github.repository_owner}}/${{github.repository}}-backend:ci
dockertaghafjet-frontend:cighcr.io/${{github.repository_owner}}/${{github.repository}}-frontend:ci
dockerpushghcr.io/${{github.repository_owner}}/${{github.repository}}-backend:ci
dockerpushghcr.io/${{github.repository_owner}}/${{github.repository}}-frontend:ci



> hafjet-cloud-accounting-backend@1.0.0 test
> jest

PASS src/__tests__/posSyncScheduler.test.ts
  ΓùÅ Console

    console.log
      [dotenv@17.2.3] injecting env (25) from .env -- tip: ΓÜÖ∩╕Å  load multiple .env files with { path: ['.env.local', '.env'] }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

    console.error
      Γ¥î Configuration validation failed:

      77 |   const parsed = ConfigSchema.safeParse(process.env);
      78 |   if (!parsed.success) {
    > 79 |     console.error('Γ¥î Configuration validation failed:');
         |             ^
      80 |     for (const issue of parsed.error.issues) {
      81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
      82 |     }

      at loadConfig (src/config/config.ts:79:13)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/services/PosSyncScheduler.ts:3:1)
      at Object.<anonymous> (src/__tests__/posSyncScheduler.test.ts:2:1)

    console.error
       - JWT_SECRET: JWT_SECRET too short

      79 |     console.error('Γ¥î Configuration validation failed:');
      80 |     for (const issue of parsed.error.issues) {
    > 81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
         |               ^
      82 |     }
      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {

      at loadConfig (src/config/config.ts:81:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/services/PosSyncScheduler.ts:3:1)
      at Object.<anonymous> (src/__tests__/posSyncScheduler.test.ts:2:1)

    console.warn
      Running in test mode: falling back to config defaults.

      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {
    > 85 |       console.warn('Running in test mode: falling back to config defaults.');
         |               ^
      86 |       const defaults = ConfigSchema.parse({});
      87 |       // Merge a small set of test-specific overrides from process.env so tests can
      88 |       // control webhook secrets and rate limits without failing full schema validation

      at loadConfig (src/config/config.ts:85:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/services/PosSyncScheduler.ts:3:1)
      at Object.<anonymous> (src/__tests__/posSyncScheduler.test.ts:2:1)

PASS src/__tests__/telegramIngestion.test.ts
PASS src/__tests__/posSyncErrorAlert.test.ts
PASS src/__tests__/metrics.test.ts
PASS src/__tests__/ledgerPosting.test.ts
PASS src/__tests__/receiptPipeline.test.ts
PASS src/__tests__/posDailyPosting.test.ts
PASS src/__tests__/ready.test.js
PASS src/__tests__/posLoyverseService.test.ts
PASS src/__tests__/posIncrementalSync.test.ts
PASS src/__tests__/telegramAutoPipeline.test.ts
  ΓùÅ Console

    console.log
      [dotenv@17.2.3] injecting env (25) from .env -- tip: ≡ƒæÑ sync secrets across teammates & machines: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

    console.error
      Γ¥î Configuration validation failed:

      77 |   const parsed = ConfigSchema.safeParse(process.env);
      78 |   if (!parsed.success) {
    > 79 |     console.error('Γ¥î Configuration validation failed:');
         |             ^
      80 |     for (const issue of parsed.error.issues) {
      81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
      82 |     }

      at loadConfig (src/config/config.ts:79:13)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/middleware/auth.ts:3:1)
      at Object.<anonymous> (src/routes/telegram.ts:5:1)
      at Object.<anonymous> (src/__tests__/telegramAutoPipeline.test.ts:72:1)

    console.error
       - JWT_SECRET: JWT_SECRET too short

      79 |     console.error('Γ¥î Configuration validation failed:');
      80 |     for (const issue of parsed.error.issues) {
    > 81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
         |               ^
      82 |     }
      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {

      at loadConfig (src/config/config.ts:81:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/middleware/auth.ts:3:1)
      at Object.<anonymous> (src/routes/telegram.ts:5:1)
      at Object.<anonymous> (src/__tests__/telegramAutoPipeline.test.ts:72:1)

    console.warn
      Running in test mode: falling back to config defaults.

      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {
    > 85 |       console.warn('Running in test mode: falling back to config defaults.');
         |               ^
      86 |       const defaults = ConfigSchema.parse({});
      87 |       // Merge a small set of test-specific overrides from process.env so tests can
      88 |       // control webhook secrets and rate limits without failing full schema validation

      at loadConfig (src/config/config.ts:85:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/middleware/auth.ts:3:1)
      at Object.<anonymous> (src/routes/telegram.ts:5:1)
      at Object.<anonymous> (src/__tests__/telegramAutoPipeline.test.ts:72:1)

PASS src/__tests__/telegramWebhookAuth.test.ts
  ΓùÅ Console

    console.log
      [dotenv@17.2.3] injecting env (25) from .env -- tip: ≡ƒöä add secrets lifecycle management: https://dotenvx.com/ops

      at _log (../node_modules/dotenv/lib/main.js:142:11)

    console.error
      Γ¥î Configuration validation failed:

      77 |   const parsed = ConfigSchema.safeParse(process.env);
      78 |   if (!parsed.success) {
    > 79 |     console.error('Γ¥î Configuration validation failed:');
         |             ^
      80 |     for (const issue of parsed.error.issues) {
      81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
      82 |     }

      at loadConfig (src/config/config.ts:79:13)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/middleware/auth.ts:3:1)
      at Object.<anonymous> (src/routes/telegram.ts:5:1)
      at Object.<anonymous> (src/__tests__/telegramWebhookAuth.test.ts:54:1)

    console.error
       - JWT_SECRET: JWT_SECRET too short

      79 |     console.error('Γ¥î Configuration validation failed:');
      80 |     for (const issue of parsed.error.issues) {
    > 81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
         |               ^
      82 |     }
      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {

      at loadConfig (src/config/config.ts:81:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/middleware/auth.ts:3:1)
      at Object.<anonymous> (src/routes/telegram.ts:5:1)
      at Object.<anonymous> (src/__tests__/telegramWebhookAuth.test.ts:54:1)

    console.warn
      Running in test mode: falling back to config defaults.

      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {
    > 85 |       console.warn('Running in test mode: falling back to config defaults.');
         |               ^
      86 |       const defaults = ConfigSchema.parse({});
      87 |       // Merge a small set of test-specific overrides from process.env so tests can
      88 |       // control webhook secrets and rate limits without failing full schema validation

      at loadConfig (src/config/config.ts:85:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/middleware/auth.ts:3:1)
      at Object.<anonymous> (src/routes/telegram.ts:5:1)
      at Object.<anonymous> (src/__tests__/telegramWebhookAuth.test.ts:54:1)

PASS src/__tests__/telegramWebhookSecurity.test.ts
  ΓùÅ Console

    console.log
      [dotenv@17.2.3] injecting env (25) from .env -- tip: ≡ƒöÉ prevent building .env in docker: https://dotenvx.com/prebuild

      at _log (../node_modules/dotenv/lib/main.js:142:11)

    console.error
      Γ¥î Configuration validation failed:

      77 |   const parsed = ConfigSchema.safeParse(process.env);
      78 |   if (!parsed.success) {
    > 79 |     console.error('Γ¥î Configuration validation failed:');
         |             ^
      80 |     for (const issue of parsed.error.issues) {
      81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
      82 |     }

      at loadConfig (src/config/config.ts:79:13)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/middleware/auth.ts:3:1)
      at Object.<anonymous> (src/routes/telegram.ts:5:1)
      at Object.<anonymous> (src/__tests__/telegramWebhookSecurity.test.ts:42:1)

    console.error
       - JWT_SECRET: JWT_SECRET too short

      79 |     console.error('Γ¥î Configuration validation failed:');
      80 |     for (const issue of parsed.error.issues) {
    > 81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
         |               ^
      82 |     }
      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {

      at loadConfig (src/config/config.ts:81:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/middleware/auth.ts:3:1)
      at Object.<anonymous> (src/routes/telegram.ts:5:1)
      at Object.<anonymous> (src/__tests__/telegramWebhookSecurity.test.ts:42:1)

    console.warn
      Running in test mode: falling back to config defaults.

      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {
    > 85 |       console.warn('Running in test mode: falling back to config defaults.');
         |               ^
      86 |       const defaults = ConfigSchema.parse({});
      87 |       // Merge a small set of test-specific overrides from process.env so tests can
      88 |       // control webhook secrets and rate limits without failing full schema validation

      at loadConfig (src/config/config.ts:85:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/middleware/auth.ts:3:1)
      at Object.<anonymous> (src/routes/telegram.ts:5:1)
      at Object.<anonymous> (src/__tests__/telegramWebhookSecurity.test.ts:42:1)

PASS src/__tests__/routes/invoices.test.ts
  ΓùÅ Console

    console.log
      [dotenv@17.2.3] injecting env (25) from .env -- tip: ≡ƒöÉ prevent building .env in docker: https://dotenvx.com/prebuild

      at _log (../node_modules/dotenv/lib/main.js:142:11)

    console.error
      Γ¥î Configuration validation failed:

      77 |   const parsed = ConfigSchema.safeParse(process.env);
      78 |   if (!parsed.success) {
    > 79 |     console.error('Γ¥î Configuration validation failed:');
         |             ^
      80 |     for (const issue of parsed.error.issues) {
      81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
      82 |     }

      at loadConfig (src/config/config.ts:79:13)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/__tests__/routes/invoices.test.ts:10:1)

    console.error
       - JWT_SECRET: JWT_SECRET too short

      79 |     console.error('Γ¥î Configuration validation failed:');
      80 |     for (const issue of parsed.error.issues) {
    > 81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
         |               ^
      82 |     }
      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {

      at loadConfig (src/config/config.ts:81:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/__tests__/routes/invoices.test.ts:10:1)

    console.warn
      Running in test mode: falling back to config defaults.

      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {
    > 85 |       console.warn('Running in test mode: falling back to config defaults.');
         |               ^
      86 |       const defaults = ConfigSchema.parse({});
      87 |       // Merge a small set of test-specific overrides from process.env so tests can
      88 |       // control webhook secrets and rate limits without failing full schema validation

      at loadConfig (src/config/config.ts:85:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/__tests__/routes/invoices.test.ts:10:1)

PASS src/__tests__/routes/twoFactor.test.ts
  ΓùÅ Console

    console.log
      [dotenv@17.2.3] injecting env (25) from .env -- tip: ≡ƒöÉ prevent committing .env to code: https://dotenvx.com/precommit

      at _log (../node_modules/dotenv/lib/main.js:142:11)

    console.error
      Γ¥î Configuration validation failed:

      77 |   const parsed = ConfigSchema.safeParse(process.env);
      78 |   if (!parsed.success) {
    > 79 |     console.error('Γ¥î Configuration validation failed:');
         |             ^
      80 |     for (const issue of parsed.error.issues) {
      81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
      82 |     }

      at loadConfig (src/config/config.ts:79:13)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/__tests__/routes/twoFactor.test.ts:5:1)

    console.error
       - JWT_SECRET: JWT_SECRET too short

      79 |     console.error('Γ¥î Configuration validation failed:');
      80 |     for (const issue of parsed.error.issues) {
    > 81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
         |               ^
      82 |     }
      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {

      at loadConfig (src/config/config.ts:81:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/__tests__/routes/twoFactor.test.ts:5:1)

    console.warn
      Running in test mode: falling back to config defaults.

      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {
    > 85 |       console.warn('Running in test mode: falling back to config defaults.');
         |               ^
      86 |       const defaults = ConfigSchema.parse({});
      87 |       // Merge a small set of test-specific overrides from process.env so tests can
      88 |       // control webhook secrets and rate limits without failing full schema validation

      at loadConfig (src/config/config.ts:85:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/__tests__/routes/twoFactor.test.ts:5:1)

PASS src/__tests__/routes/userManagement.test.ts
  ΓùÅ Console

    console.log
      [dotenv@17.2.3] injecting env (25) from .env -- tip: ΓÜÖ∩╕Å  specify custom .env file path with { path: '/custom/path/.env' }

      at _log (../node_modules/dotenv/lib/main.js:142:11)

    console.error
      Γ¥î Configuration validation failed:

      77 |   const parsed = ConfigSchema.safeParse(process.env);
      78 |   if (!parsed.success) {
    > 79 |     console.error('Γ¥î Configuration validation failed:');
         |             ^
      80 |     for (const issue of parsed.error.issues) {
      81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
      82 |     }

      at loadConfig (src/config/config.ts:79:13)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/__tests__/routes/userManagement.test.ts:10:1)

    console.error
       - JWT_SECRET: JWT_SECRET too short

      79 |     console.error('Γ¥î Configuration validation failed:');
      80 |     for (const issue of parsed.error.issues) {
    > 81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
         |               ^
      82 |     }
      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {

      at loadConfig (src/config/config.ts:81:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/__tests__/routes/userManagement.test.ts:10:1)

    console.warn
      Running in test mode: falling back to config defaults.

      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {
    > 85 |       console.warn('Running in test mode: falling back to config defaults.');
         |               ^
      86 |       const defaults = ConfigSchema.parse({});
      87 |       // Merge a small set of test-specific overrides from process.env so tests can
      88 |       // control webhook secrets and rate limits without failing full schema validation

      at loadConfig (src/config/config.ts:85:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/__tests__/routes/userManagement.test.ts:10:1)

    console.log
      [INFO] 2025-10-19T01:19:28.725Z: Fetching users for company 507f1f77bcf86cd799439012

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.774Z: Creating new user: newuser@example.com for company 507f1f77bcf86cd799439012

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.806Z: Updating user 68f43ca0bb1a1e78e3b6d2b8 by 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.811Z: Updating user 68f43ca0bb1a1e78e3b6d2b9 by 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.816Z: Updating user 68f43ca0bb1a1e78e3b6d2ba by 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.819Z: Updating user 68f43ca0bb1a1e78e3b6d2bb by 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.824Z: Deleting user 68f43ca0bb1a1e78e3b6d2bd by 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.831Z: Deleting user 68f43ca0bb1a1e78e3b6d2be by 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.835Z: Password change requested for user 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.835Z: Password changed successfully for user 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.838Z: Password change requested for user 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.849Z: Password change requested for user 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.852Z: Password reset for user 68f43ca0bb1a1e78e3b6d2bf by admin 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.853Z: Password reset successfully for user 68f43ca0bb1a1e78e3b6d2bf

      at Object.info (src/utils/logger.ts:3:13)

    console.log
      [INFO] 2025-10-19T01:19:28.860Z: Password reset for user 68f43ca0bb1a1e78e3b6d2c1 by admin 507f1f77bcf86cd799439011

      at Object.info (src/utils/logger.ts:3:13)

PASS src/__tests__/metricsPrometheus.test.ts
  ΓùÅ Console

    console.log
      [INFO] 2025-10-19T01:19:30.302Z: [EINVOICE ROUTE] Loaded updated einvoice.ts at 2025-10-19T01:19:30.302Z

      at Object.info (src/utils/logger.ts:3:13)

    console.warn
      [WARN] 2025-10-19T01:19:30.496Z: NODE_ENV=test - skipping DB connection and server start in init()

       9 |   
      10 |   warn: (message: string, ...args: any[]) => {
    > 11 |     console.warn(`[WARN] ${new Date().toISOString()}: ${message}`, ...args);
         |             ^
      12 |   },
      13 |   
      14 |   debug: (message: string, ...args: any[]) => {

      at Object.warn (src/utils/logger.ts:11:13)
      at init (src/index.ts:345:14)
      at Object.<anonymous> (src/index.ts:374:1)
      at Object.<anonymous> (src/__tests__/metricsPrometheus.test.ts:25:1)

PASS src/__tests__/ready.test.ts
  ΓùÅ Console

    console.log
      [dotenv@17.2.3] injecting env (25) from .env -- tip: ≡ƒ¢á∩╕Å  run anywhere with `dotenvx run -- yourcommand`

      at _log (../node_modules/dotenv/lib/main.js:142:11)

    console.error
      Γ¥î Configuration validation failed:

      77 |   const parsed = ConfigSchema.safeParse(process.env);
      78 |   if (!parsed.success) {
    > 79 |     console.error('Γ¥î Configuration validation failed:');
         |             ^
      80 |     for (const issue of parsed.error.issues) {
      81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
      82 |     }

      at loadConfig (src/config/config.ts:79:13)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/index.ts:11:1)
      at Object.<anonymous> (src/__tests__/ready.test.ts:2:1)

    console.error
       - JWT_SECRET: JWT_SECRET too short

      79 |     console.error('Γ¥î Configuration validation failed:');
      80 |     for (const issue of parsed.error.issues) {
    > 81 |       console.error(` - ${issue.path.join('.')}: ${issue.message}`);
         |               ^
      82 |     }
      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {

      at loadConfig (src/config/config.ts:81:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/index.ts:11:1)
      at Object.<anonymous> (src/__tests__/ready.test.ts:2:1)

    console.warn
      Running in test mode: falling back to config defaults.

      83 |     // During test runs we prefer sensible defaults to hard-failing so test suites can run in CI
      84 |     if (process.env.NODE_ENV === 'test') {
    > 85 |       console.warn('Running in test mode: falling back to config defaults.');
         |               ^
      86 |       const defaults = ConfigSchema.parse({});
      87 |       // Merge a small set of test-specific overrides from process.env so tests can
      88 |       // control webhook secrets and rate limits without failing full schema validation

      at loadConfig (src/config/config.ts:85:15)
      at Object.<anonymous> (src/config/config.ts:106:23)
      at Object.<anonymous> (src/index.ts:11:1)
      at Object.<anonymous> (src/__tests__/ready.test.ts:2:1)

    console.log
      [INFO] 2025-10-19T01:19:30.303Z: [EINVOICE ROUTE] Loaded updated einvoice.ts at 2025-10-19T01:19:30.302Z

      at Object.info (src/utils/logger.ts:3:13)

    console.warn
      [WARN] 2025-10-19T01:19:30.496Z: NODE_ENV=test - skipping DB connection and server start in init()

       9 |   
      10 |   warn: (message: string, ...args: any[]) => {
    > 11 |     console.warn(`[WARN] ${new Date().toISOString()}: ${message}`, ...args);
         |             ^
      12 |   },
      13 |   
      14 |   debug: (message: string, ...args: any[]) => {

      at Object.warn (src/utils/logger.ts:11:13)
      at init (src/index.ts:345:14)
      at Object.<anonymous> (src/index.ts:374:1)
      at Object.<anonymous> (src/__tests__/ready.test.ts:2:1)


Test Suites: 1 skipped, 18 passed, 18 of 19 total
Tests:       2 skipped, 76 passed, 78 total
Snapshots:   0 total
Time:        5.588 s
Ran all test suites.

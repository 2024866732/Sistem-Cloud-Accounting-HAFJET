{"version":3,"file":"WorkflowAutomation-Bep797_F.js","names":["SmartExpenseCategorization: React.FC","mockCategories: ExpenseCategory[]","mockExpenses: ExpenseItem[]","mockRules: CategoryRule[]","newExpenses: ExpenseItem[]","AutoReconciliation: React.FC","mockMatches: MatchResult[]","mockSummary: ReconciliationSummary","WorkflowAutomation: React.FC","mockRules: AutomationRule[]","mockRecurring: RecurringInvoice[]"],"sources":["../../src/components/automation/SmartExpenseCategorization.tsx","../../src/components/automation/AutoReconciliation.tsx","../../src/pages/WorkflowAutomation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Brain, Zap, Settings, TrendingUp, AlertCircle, CheckCircle, Clock } from 'lucide-react';\r\n\r\ninterface ExpenseCategory {\r\n  id: string;\r\n  name: string;\r\n  keywords: string[];\r\n  taxRate: number;\r\n  color: string;\r\n}\r\n\r\ninterface ExpenseItem {\r\n  id: string;\r\n  description: string;\r\n  amount: number;\r\n  date: string;\r\n  category: string;\r\n  confidence: number;\r\n  status: 'auto' | 'manual' | 'reviewed';\r\n  vendor?: string;\r\n}\r\n\r\ninterface CategoryRule {\r\n  id: string;\r\n  name: string;\r\n  keywords: string[];\r\n  category: string;\r\n  taxRate: number;\r\n  confidence: number;\r\n  isActive: boolean;\r\n}\r\n\r\nconst SmartExpenseCategorization: React.FC = () => {\r\n  const [expenses, setExpenses] = useState<ExpenseItem[]>([]);\r\n  const [categories, setCategories] = useState<ExpenseCategory[]>([]);\r\n  const [rules, setRules] = useState<CategoryRule[]>([]);\r\n  const [activeTab, setActiveTab] = useState('expenses');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  // Mock data\r\n  useEffect(() => {\r\n    const mockCategories: ExpenseCategory[] = [\r\n      { id: 'office', name: 'Office Supplies', keywords: ['stationery', 'paper', 'pen'], taxRate: 0.06, color: 'blue' },\r\n      { id: 'transport', name: 'Transportation', keywords: ['petrol', 'toll', 'parking'], taxRate: 0.06, color: 'green' },\r\n      { id: 'meals', name: 'Meals & Entertainment', keywords: ['restaurant', 'lunch', 'dinner'], taxRate: 0.06, color: 'orange' },\r\n      { id: 'utilities', name: 'Utilities', keywords: ['electricity', 'water', 'internet'], taxRate: 0.00, color: 'purple' },\r\n      { id: 'rent', name: 'Rent & Premises', keywords: ['rent', 'office space'], taxRate: 0.00, color: 'red' },\r\n      { id: 'marketing', name: 'Marketing & Advertising', keywords: ['facebook ads', 'google ads'], taxRate: 0.06, color: 'pink' }\r\n    ];\r\n\r\n    const mockExpenses: ExpenseItem[] = [\r\n      {\r\n        id: 'exp_1',\r\n        description: 'Petrol station - Shell Bukit Bintang',\r\n        amount: 45.50,\r\n        date: '2024-10-01',\r\n        category: 'transport',\r\n        confidence: 0.95,\r\n        status: 'auto',\r\n        vendor: 'Shell Malaysia'\r\n      },\r\n      {\r\n        id: 'exp_2',\r\n        description: 'Office stationery purchase from Popular Bookstore',\r\n        amount: 127.80,\r\n        date: '2024-10-01',\r\n        category: 'office',\r\n        confidence: 0.89,\r\n        status: 'auto',\r\n        vendor: 'Popular Bookstore'\r\n      },\r\n      {\r\n        id: 'exp_3',\r\n        description: 'Facebook Ads campaign - October 2024',\r\n        amount: 250.00,\r\n        date: '2024-10-01',\r\n        category: 'marketing',\r\n        confidence: 0.98,\r\n        status: 'auto',\r\n        vendor: 'Meta Platforms'\r\n      },\r\n      {\r\n        id: 'exp_4',\r\n        description: 'Business lunch with client at KLCC',\r\n        amount: 89.50,\r\n        date: '2024-10-01',\r\n        category: 'meals',\r\n        confidence: 0.76,\r\n        status: 'manual',\r\n        vendor: 'Restaurant XYZ'\r\n      },\r\n      {\r\n        id: 'exp_5',\r\n        description: 'Unifi internet bill - September 2024',\r\n        amount: 199.00,\r\n        date: '2024-09-30',\r\n        category: 'utilities',\r\n        confidence: 0.92,\r\n        status: 'auto',\r\n        vendor: 'TM Unifi'\r\n      }\r\n    ];\r\n\r\n    const mockRules: CategoryRule[] = [\r\n      {\r\n        id: 'rule_1',\r\n        name: 'Petrol Station Recognition',\r\n        keywords: ['petrol', 'shell', 'petronas', 'esso', 'caltex'],\r\n        category: 'transport',\r\n        taxRate: 0.06,\r\n        confidence: 0.90,\r\n        isActive: true\r\n      },\r\n      {\r\n        id: 'rule_2',\r\n        name: 'Online Advertising',\r\n        keywords: ['facebook ads', 'google ads', 'instagram ads', 'campaign'],\r\n        category: 'marketing',\r\n        taxRate: 0.06,\r\n        confidence: 0.95,\r\n        isActive: true\r\n      },\r\n      {\r\n        id: 'rule_3',\r\n        name: 'Utilities Bills',\r\n        keywords: ['unifi', 'astro', 'electricity', 'water', 'bill'],\r\n        category: 'utilities',\r\n        taxRate: 0.00,\r\n        confidence: 0.85,\r\n        isActive: true\r\n      }\r\n    ];\r\n\r\n    setCategories(mockCategories);\r\n    setExpenses(mockExpenses);\r\n    setRules(mockRules);\r\n  }, []);\r\n\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 0.9) return 'text-green-600 bg-green-100';\r\n    if (confidence >= 0.7) return 'text-yellow-600 bg-yellow-100';\r\n    return 'text-red-600 bg-red-100';\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'auto': return <CheckCircle className=\"w-4 h-4 text-green-600\" />;\r\n      case 'manual': return <AlertCircle className=\"w-4 h-4 text-yellow-600\" />;\r\n      case 'reviewed': return <CheckCircle className=\"w-4 h-4 text-blue-600\" />;\r\n      default: return <Clock className=\"w-4 h-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getCategoryColor = (categoryId: string) => {\r\n    const category = categories.find(c => c.id === categoryId);\r\n    return category?.color || 'gray';\r\n  };\r\n\r\n  const processNewExpenses = async () => {\r\n    setIsProcessing(true);\r\n    // Simulate AI processing\r\n    setTimeout(() => {\r\n      setIsProcessing(false);\r\n      // Add some new processed expenses\r\n      const newExpenses: ExpenseItem[] = [\r\n        {\r\n          id: 'exp_new_1',\r\n          description: 'Touch n Go reload - PLUS Highway',\r\n          amount: 50.00,\r\n          date: '2024-10-02',\r\n          category: 'transport',\r\n          confidence: 0.88,\r\n          status: 'auto',\r\n          vendor: 'Touch n Go'\r\n        },\r\n        {\r\n          id: 'exp_new_2',\r\n          description: 'Zoom Pro subscription - October',\r\n          amount: 59.90,\r\n          date: '2024-10-02',\r\n          category: 'utilities',\r\n          confidence: 0.94,\r\n          status: 'auto',\r\n          vendor: 'Zoom Video Communications'\r\n        }\r\n      ];\r\n      setExpenses(prev => [...newExpenses, ...prev]);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center space-x-3 mb-2\">\r\n            <div className=\"p-3 bg-gradient-to-r from-purple-500 to-blue-600 rounded-full\">\r\n              <Brain className=\"w-8 h-8 text-white\" />\r\n            </div>\r\n            <div>\r\n              <h1 className=\"text-4xl font-bold text-gray-900\">Smart Expense Categorization</h1>\r\n              <p className=\"text-gray-600 text-lg\">AI-powered automatic expense categorization and tax classification</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n          <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Auto-Categorized</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">\r\n                  {expenses.filter(e => e.status === 'auto').length}\r\n                </p>\r\n              </div>\r\n              <CheckCircle className=\"w-8 h-8 text-green-600\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Manual Review</p>\r\n                <p className=\"text-2xl font-bold text-yellow-600\">\r\n                  {expenses.filter(e => e.status === 'manual').length}\r\n                </p>\r\n              </div>\r\n              <AlertCircle className=\"w-8 h-8 text-yellow-600\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Avg. Confidence</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">\r\n                  {Math.round(expenses.reduce((sum, e) => sum + e.confidence, 0) / expenses.length * 100)}%\r\n                </p>\r\n              </div>\r\n              <TrendingUp className=\"w-8 h-8 text-blue-600\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Active Rules</p>\r\n                <p className=\"text-2xl font-bold text-purple-600\">\r\n                  {rules.filter(r => r.isActive).length}\r\n                </p>\r\n              </div>\r\n              <Settings className=\"w-8 h-8 text-purple-600\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"bg-white/60 backdrop-blur-sm rounded-xl shadow-lg border border-white/20 mb-8\">\r\n          <div className=\"border-b border-gray-200\">\r\n            <nav className=\"flex space-x-8 px-6\">\r\n              {[\r\n                { id: 'expenses', label: 'Recent Expenses', icon: Brain },\r\n                { id: 'categories', label: 'Categories', icon: Settings },\r\n                { id: 'rules', label: 'Categorization Rules', icon: Zap }\r\n              ].map((tab) => {\r\n                const Icon = tab.icon;\r\n                return (\r\n                  <button\r\n                    key={tab.id}\r\n                    onClick={() => setActiveTab(tab.id)}\r\n                    className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm ${\r\n                      activeTab === tab.id\r\n                        ? 'border-blue-500 text-blue-600'\r\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                    }`}\r\n                  >\r\n                    <Icon className=\"w-4 h-4\" />\r\n                    <span>{tab.label}</span>\r\n                  </button>\r\n                );\r\n              })}\r\n            </nav>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            {activeTab === 'expenses' && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h3 className=\"text-xl font-semibold\">Recent Expenses</h3>\r\n                  <button\r\n                    onClick={processNewExpenses}\r\n                    disabled={isProcessing}\r\n                    className=\"bg-gradient-to-r from-purple-500 to-blue-600 text-white px-4 py-2 rounded-lg hover:shadow-lg transition-all disabled:opacity-50\"\r\n                  >\r\n                    {isProcessing ? (\r\n                      <>\r\n                        <div className=\"inline-block animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                        Processing...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Brain className=\"w-4 h-4 inline mr-2\" />\r\n                        Process New Expenses\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  {expenses.map((expense) => (\r\n                    <div key={expense.id} className=\"bg-white rounded-lg p-6 shadow-sm border\">\r\n                      <div className=\"flex items-center justify-between mb-4\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          {getStatusIcon(expense.status)}\r\n                          <div>\r\n                            <h4 className=\"font-medium\">{expense.description}</h4>\r\n                            <p className=\"text-sm text-gray-500\">\r\n                              {expense.vendor} • {expense.date}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                          <p className=\"text-xl font-bold\">RM {expense.amount.toFixed(2)}</p>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getConfidenceColor(expense.confidence)}`}>\r\n                            {Math.round(expense.confidence * 100)}% confidence\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <span className={`w-3 h-3 bg-${getCategoryColor(expense.category)}-500 rounded-full`}></span>\r\n                          <span className=\"text-sm font-medium capitalize\">\r\n                            {categories.find(c => c.id === expense.category)?.name}\r\n                          </span>\r\n                          <span className=\"text-xs text-gray-500\">\r\n                            • SST: {(categories.find(c => c.id === expense.category)?.taxRate || 0) * 100}%\r\n                          </span>\r\n                        </div>\r\n                        \r\n                        {expense.status === 'manual' && (\r\n                          <div className=\"flex space-x-2\">\r\n                            <button className=\"text-sm bg-green-100 text-green-700 px-3 py-1 rounded hover:bg-green-200\">\r\n                              Approve\r\n                            </button>\r\n                            <button className=\"text-sm bg-gray-100 text-gray-700 px-3 py-1 rounded hover:bg-gray-200\">\r\n                              Edit\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'categories' && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h3 className=\"text-xl font-semibold\">Expense Categories</h3>\r\n                  <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\">\r\n                    Add Category\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  {categories.map((category) => (\r\n                    <div key={category.id} className=\"bg-white rounded-lg p-6 shadow-sm border\">\r\n                      <div className=\"flex items-center space-x-3 mb-4\">\r\n                        <div className={`w-4 h-4 bg-${category.color}-500 rounded-full`}></div>\r\n                        <h4 className=\"font-medium\">{category.name}</h4>\r\n                      </div>\r\n                      \r\n                      <div className=\"space-y-2 text-sm\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">SST Rate:</span>\r\n                          <span className=\"font-medium\">{(category.taxRate * 100)}%</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"text-gray-600\">Keywords:</span>\r\n                          <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                            {category.keywords.slice(0, 3).map((keyword, idx) => (\r\n                              <span key={idx} className=\"bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs\">\r\n                                {keyword}\r\n                              </span>\r\n                            ))}\r\n                            {category.keywords.length > 3 && (\r\n                              <span className=\"text-gray-500 text-xs\">+{category.keywords.length - 3} more</span>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'rules' && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h3 className=\"text-xl font-semibold\">Categorization Rules</h3>\r\n                  <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\">\r\n                    Create Rule\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  {rules.map((rule) => (\r\n                    <div key={rule.id} className=\"bg-white rounded-lg p-6 shadow-sm border\">\r\n                      <div className=\"flex items-center justify-between mb-4\">\r\n                        <div>\r\n                          <h4 className=\"font-medium\">{rule.name}</h4>\r\n                          <p className=\"text-sm text-gray-500\">\r\n                            Target: {categories.find(c => c.id === rule.category)?.name}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                            rule.isActive ? 'text-green-600 bg-green-100' : 'text-gray-600 bg-gray-100'\r\n                          }`}>\r\n                            {rule.isActive ? 'Active' : 'Inactive'}\r\n                          </span>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getConfidenceColor(rule.confidence)}`}>\r\n                            {Math.round(rule.confidence * 100)}% accuracy\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {rule.keywords.map((keyword, idx) => (\r\n                          <span key={idx} className=\"bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm\">\r\n                            {keyword}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmartExpenseCategorization;","import React, { useState, useEffect } from 'react';\r\nimport { Zap, CheckCircle, AlertTriangle, Clock, Download, Upload, Settings, RefreshCw } from 'lucide-react';\r\n\r\ninterface BankTransaction {\r\n  id: string;\r\n  date: string;\r\n  description: string;\r\n  amount: number;\r\n  type: 'debit' | 'credit';\r\n  reference: string;\r\n  balance: number;\r\n}\r\n\r\ninterface SystemTransaction {\r\n  id: string;\r\n  date: string;\r\n  description: string;\r\n  amount: number;\r\n  type: 'expense' | 'income';\r\n  category: string;\r\n  reference?: string;\r\n}\r\n\r\ninterface MatchResult {\r\n  id: string;\r\n  bankTransaction: BankTransaction;\r\n  systemTransaction?: SystemTransaction;\r\n  matchScore: number;\r\n  status: 'matched' | 'unmatched' | 'disputed' | 'manual';\r\n  confidence: number;\r\n}\r\n\r\ninterface ReconciliationSummary {\r\n  totalBankTransactions: number;\r\n  totalSystemTransactions: number;\r\n  matched: number;\r\n  unmatched: number;\r\n  disputed: number;\r\n  variance: number;\r\n}\r\n\r\nconst AutoReconciliation: React.FC = () => {\r\n  const [matches, setMatches] = useState<MatchResult[]>([]);\r\n  const [summary, setSummary] = useState<ReconciliationSummary | null>(null);\r\n  const [selectedAccount, setSelectedAccount] = useState('maybank_current');\r\n  const [isReconciling, setIsReconciling] = useState(false);\r\n  const [reconciliationDate, setReconciliationDate] = useState('2024-10-01');\r\n\r\n  const accounts = [\r\n    { id: 'maybank_current', name: 'Maybank Current Account', number: '****1234' },\r\n    { id: 'cimb_savings', name: 'CIMB Savings Account', number: '****5678' },\r\n    { id: 'public_business', name: 'Public Bank Business Account', number: '****9012' }\r\n  ];\r\n\r\n  // Mock data\r\n  useEffect(() => {\r\n    const mockMatches: MatchResult[] = [\r\n      {\r\n        id: 'match_1',\r\n        bankTransaction: {\r\n          id: 'bank_1',\r\n          date: '2024-10-01',\r\n          description: 'ONLINE TRANSFER ABC TECHNOLOGIES SDN BHD',\r\n          amount: 2500.00,\r\n          type: 'credit',\r\n          reference: 'INV001234',\r\n          balance: 15750.00\r\n        },\r\n        systemTransaction: {\r\n          id: 'sys_1',\r\n          date: '2024-10-01',\r\n          description: 'Payment received from ABC Technologies Sdn Bhd',\r\n          amount: 2500.00,\r\n          type: 'income',\r\n          category: 'Sales Revenue',\r\n          reference: 'INV001234'\r\n        },\r\n        matchScore: 1.0,\r\n        status: 'matched',\r\n        confidence: 0.98\r\n      },\r\n      {\r\n        id: 'match_2',\r\n        bankTransaction: {\r\n          id: 'bank_2',\r\n          date: '2024-10-01',\r\n          description: 'PETROL STATION SHELL BUKIT BINTANG',\r\n          amount: -45.50,\r\n          type: 'debit',\r\n          reference: 'TXN789456',\r\n          balance: 13204.50\r\n        },\r\n        systemTransaction: {\r\n          id: 'sys_2',\r\n          date: '2024-10-01',\r\n          description: 'Petrol expense - Shell Bukit Bintang',\r\n          amount: 45.50,\r\n          type: 'expense',\r\n          category: 'Transportation'\r\n        },\r\n        matchScore: 0.92,\r\n        status: 'matched',\r\n        confidence: 0.88\r\n      },\r\n      {\r\n        id: 'match_3',\r\n        bankTransaction: {\r\n          id: 'bank_3',\r\n          date: '2024-10-01',\r\n          description: 'INTERBANK GIRO TM UNIFI BERHAD',\r\n          amount: -199.00,\r\n          type: 'debit',\r\n          reference: 'DG654321',\r\n          balance: 13005.50\r\n        },\r\n        systemTransaction: {\r\n          id: 'sys_3',\r\n          date: '2024-10-01',\r\n          description: 'Unifi internet bill - September 2024',\r\n          amount: 199.00,\r\n          type: 'expense',\r\n          category: 'Utilities'\r\n        },\r\n        matchScore: 0.95,\r\n        status: 'matched',\r\n        confidence: 0.94\r\n      },\r\n      {\r\n        id: 'match_4',\r\n        bankTransaction: {\r\n          id: 'bank_4',\r\n          date: '2024-10-01',\r\n          description: 'ATM WITHDRAWAL KLCC',\r\n          amount: -300.00,\r\n          type: 'debit',\r\n          reference: 'ATM123456',\r\n          balance: 12705.50\r\n        },\r\n        matchScore: 0.0,\r\n        status: 'unmatched',\r\n        confidence: 0.0\r\n      },\r\n      {\r\n        id: 'match_5',\r\n        bankTransaction: {\r\n          id: 'bank_5',\r\n          date: '2024-10-01',\r\n          description: 'ONLINE PURCHASE SHOPEE MALAYSIA',\r\n          amount: -127.80,\r\n          type: 'debit',\r\n          reference: 'SP789012',\r\n          balance: 12577.70\r\n        },\r\n        systemTransaction: {\r\n          id: 'sys_5',\r\n          date: '2024-10-01',\r\n          description: 'Office supplies from Popular Bookstore',\r\n          amount: 127.80,\r\n          type: 'expense',\r\n          category: 'Office Supplies'\r\n        },\r\n        matchScore: 0.65,\r\n        status: 'disputed',\r\n        confidence: 0.45\r\n      }\r\n    ];\r\n\r\n    const mockSummary: ReconciliationSummary = {\r\n      totalBankTransactions: 15,\r\n      totalSystemTransactions: 13,\r\n      matched: 11,\r\n      unmatched: 2,\r\n      disputed: 2,\r\n      variance: 173.80\r\n    };\r\n\r\n    setMatches(mockMatches);\r\n    setSummary(mockSummary);\r\n  }, [selectedAccount]);\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'matched': return 'text-green-600 bg-green-100';\r\n      case 'unmatched': return 'text-red-600 bg-red-100';\r\n      case 'disputed': return 'text-yellow-600 bg-yellow-100';\r\n      case 'manual': return 'text-blue-600 bg-blue-100';\r\n      default: return 'text-gray-600 bg-gray-100';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'matched': return <CheckCircle className=\"w-4 h-4 text-green-600\" />;\r\n      case 'unmatched': return <AlertTriangle className=\"w-4 h-4 text-red-600\" />;\r\n      case 'disputed': return <AlertTriangle className=\"w-4 h-4 text-yellow-600\" />;\r\n      case 'manual': return <Clock className=\"w-4 h-4 text-blue-600\" />;\r\n      default: return <Clock className=\"w-4 h-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const runReconciliation = async () => {\r\n    setIsReconciling(true);\r\n    // Simulate reconciliation process\r\n    setTimeout(() => {\r\n      setIsReconciling(false);\r\n      // Update some matches after reconciliation\r\n      setMatches(prev => prev.map(match => ({\r\n        ...match,\r\n        confidence: Math.min(match.confidence + 0.1, 1.0)\r\n      })));\r\n    }, 3000);\r\n  };\r\n\r\n  const approveMatch = (matchId: string) => {\r\n    setMatches(prev => prev.map(match => \r\n      match.id === matchId \r\n        ? { ...match, status: 'matched' as const, confidence: 1.0 }\r\n        : match\r\n    ));\r\n  };\r\n\r\n  const rejectMatch = (matchId: string) => {\r\n    setMatches(prev => prev.map(match => \r\n      match.id === matchId \r\n        ? { ...match, status: 'manual' as const }\r\n        : match\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center space-x-3 mb-2\">\r\n            <div className=\"p-3 bg-gradient-to-r from-blue-500 to-cyan-600 rounded-full\">\r\n              <Zap className=\"w-8 h-8 text-white\" />\r\n            </div>\r\n            <div>\r\n              <h1 className=\"text-4xl font-bold text-gray-900\">Auto Bank Reconciliation</h1>\r\n              <p className=\"text-gray-600 text-lg\">Intelligent matching of bank statements with system transactions</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Controls */}\r\n        <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20 mb-8\">\r\n          <div className=\"flex flex-wrap items-center justify-between gap-4\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Bank Account</label>\r\n                <select\r\n                  value={selectedAccount}\r\n                  onChange={(e) => setSelectedAccount(e.target.value)}\r\n                  className=\"border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  {accounts.map(account => (\r\n                    <option key={account.id} value={account.id}>\r\n                      {account.name} ({account.number})\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reconciliation Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={reconciliationDate}\r\n                  onChange={(e) => setReconciliationDate(e.target.value)}\r\n                  className=\"border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-3\">\r\n              <button className=\"flex items-center space-x-2 bg-gray-100 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-200 transition-colors\">\r\n                <Upload className=\"w-4 h-4\" />\r\n                <span>Import Statement</span>\r\n              </button>\r\n              \r\n              <button\r\n                onClick={runReconciliation}\r\n                disabled={isReconciling}\r\n                className=\"flex items-center space-x-2 bg-gradient-to-r from-blue-500 to-cyan-600 text-white px-4 py-2 rounded-lg hover:shadow-lg transition-all disabled:opacity-50\"\r\n              >\r\n                {isReconciling ? (\r\n                  <>\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n                    <span>Reconciling...</span>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <RefreshCw className=\"w-4 h-4\" />\r\n                    <span>Run Reconciliation</span>\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Summary Cards */}\r\n        {summary && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-6 mb-8\">\r\n            <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Bank Transactions</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">{summary.totalBankTransactions}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-sm font-medium text-gray-600\">System Transactions</p>\r\n                <p className=\"text-2xl font-bold text-purple-600\">{summary.totalSystemTransactions}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Matched</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">{summary.matched}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Unmatched</p>\r\n                <p className=\"text-2xl font-bold text-red-600\">{summary.unmatched}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Variance</p>\r\n                <p className=\"text-2xl font-bold text-orange-600\">RM {summary.variance.toFixed(2)}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Matching Results */}\r\n        <div className=\"bg-white/60 backdrop-blur-sm rounded-xl shadow-lg border border-white/20\">\r\n          <div className=\"p-6 border-b border-gray-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-xl font-semibold\">Transaction Matching Results</h3>\r\n              <div className=\"flex items-center space-x-3\">\r\n                <button className=\"flex items-center space-x-2 text-sm bg-blue-100 text-blue-700 px-3 py-1 rounded-lg hover:bg-blue-200 transition-colors\">\r\n                  <Download className=\"w-4 h-4\" />\r\n                  <span>Export Report</span>\r\n                </button>\r\n                <button className=\"flex items-center space-x-2 text-sm bg-gray-100 text-gray-700 px-3 py-1 rounded-lg hover:bg-gray-200 transition-colors\">\r\n                  <Settings className=\"w-4 h-4\" />\r\n                  <span>Settings</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            <div className=\"space-y-4\">\r\n              {matches.map((match) => (\r\n                <div key={match.id} className=\"bg-white rounded-lg p-6 shadow-sm border\">\r\n                  <div className=\"flex items-start justify-between mb-4\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      {getStatusIcon(match.status)}\r\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(match.status)}`}>\r\n                        {match.status.charAt(0).toUpperCase() + match.status.slice(1)}\r\n                      </span>\r\n                      {match.confidence > 0 && (\r\n                        <span className=\"text-xs text-gray-500\">\r\n                          {Math.round(match.confidence * 100)}% confidence\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    {match.status === 'disputed' && (\r\n                      <div className=\"flex space-x-2\">\r\n                        <button\r\n                          onClick={() => approveMatch(match.id)}\r\n                          className=\"text-sm bg-green-100 text-green-700 px-3 py-1 rounded hover:bg-green-200 transition-colors\"\r\n                        >\r\n                          Approve\r\n                        </button>\r\n                        <button\r\n                          onClick={() => rejectMatch(match.id)}\r\n                          className=\"text-sm bg-red-100 text-red-700 px-3 py-1 rounded hover:bg-red-200 transition-colors\"\r\n                        >\r\n                          Reject\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                    {/* Bank Transaction */}\r\n                    <div className=\"bg-blue-50 rounded-lg p-4\">\r\n                      <h4 className=\"font-medium text-blue-900 mb-2\">Bank Transaction</h4>\r\n                      <div className=\"space-y-2 text-sm\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Date:</span>\r\n                          <span>{match.bankTransaction.date}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Description:</span>\r\n                          <span className=\"text-right\">{match.bankTransaction.description}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Amount:</span>\r\n                          <span className={`font-bold ${match.bankTransaction.amount > 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                            RM {Math.abs(match.bankTransaction.amount).toFixed(2)}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Reference:</span>\r\n                          <span>{match.bankTransaction.reference}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* System Transaction */}\r\n                    <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                      <h4 className=\"font-medium text-gray-900 mb-2\">System Transaction</h4>\r\n                      {match.systemTransaction ? (\r\n                        <div className=\"space-y-2 text-sm\">\r\n                          <div className=\"flex justify-between\">\r\n                            <span className=\"text-gray-600\">Date:</span>\r\n                            <span>{match.systemTransaction.date}</span>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <span className=\"text-gray-600\">Description:</span>\r\n                            <span className=\"text-right\">{match.systemTransaction.description}</span>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <span className=\"text-gray-600\">Amount:</span>\r\n                            <span className=\"font-bold text-gray-900\">\r\n                              RM {match.systemTransaction.amount.toFixed(2)}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <span className=\"text-gray-600\">Category:</span>\r\n                            <span>{match.systemTransaction.category}</span>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"text-center py-8 text-gray-500\">\r\n                          <AlertTriangle className=\"w-8 h-8 mx-auto mb-2\" />\r\n                          <p>No matching system transaction found</p>\r\n                          <button className=\"mt-2 text-sm bg-blue-100 text-blue-700 px-3 py-1 rounded hover:bg-blue-200 transition-colors\">\r\n                            Create Manual Entry\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {match.matchScore > 0 && (\r\n                    <div className=\"mt-4 pt-4 border-t border-gray-200\">\r\n                      <div className=\"flex items-center justify-between text-xs text-gray-500\">\r\n                        <span>Match Score: {(match.matchScore * 100).toFixed(1)}%</span>\r\n                        <span>Last Updated: {new Date().toLocaleString()}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoReconciliation;","import React, { useState, useEffect } from 'react';\r\nimport { Calendar, Clock, Zap, Bell, RefreshCw, Brain, Settings, Play, Pause, Edit3 } from 'lucide-react';\r\nimport SmartExpenseCategorization from '../components/automation/SmartExpenseCategorization';\r\nimport AutoReconciliation from '../components/automation/AutoReconciliation';\r\n\r\ninterface AutomationRule {\r\n  id: string;\r\n  name: string;\r\n  type: 'invoice_reminder' | 'recurring_billing' | 'expense_categorization' | 'reconciliation';\r\n  status: 'active' | 'paused' | 'draft';\r\n  triggers: string[];\r\n  actions: string[];\r\n  lastRun: string;\r\n  nextRun: string;\r\n  executionCount: number;\r\n}\r\n\r\ninterface InvoiceTemplate {\r\n  service: string;\r\n  hours?: number;\r\n  plan?: string;\r\n  retainer?: boolean;\r\n}\r\n\r\ninterface RecurringInvoice {\r\n  id: string;\r\n  customerName: string;\r\n  amount: number;\r\n  frequency: 'weekly' | 'monthly' | 'quarterly' | 'yearly';\r\n  nextDue: string;\r\n  status: 'active' | 'paused';\r\n  template: InvoiceTemplate;\r\n}\r\n\r\nconst WorkflowAutomation: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [automationRules, setAutomationRules] = useState<AutomationRule[]>([]);\r\n  const [recurringInvoices, setRecurringInvoices] = useState<RecurringInvoice[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Mock data\r\n  useEffect(() => {\r\n    const mockRules: AutomationRule[] = [\r\n      {\r\n        id: 'rule_1',\r\n        name: 'Invoice Overdue Reminder',\r\n        type: 'invoice_reminder',\r\n        status: 'active',\r\n        triggers: ['Invoice 7 days overdue'],\r\n        actions: ['Send email reminder', 'Update invoice status'],\r\n        lastRun: '2024-10-01 14:30',\r\n        nextRun: '2024-10-02 09:00',\r\n        executionCount: 45\r\n      },\r\n      {\r\n        id: 'rule_2',\r\n        name: 'Auto Expense Categorization',\r\n        type: 'expense_categorization',\r\n        status: 'active',\r\n        triggers: ['New expense created'],\r\n        actions: ['Analyze description', 'Auto-assign category', 'Set tax rate'],\r\n        lastRun: '2024-10-01 16:15',\r\n        nextRun: 'Real-time',\r\n        executionCount: 234\r\n      },\r\n      {\r\n        id: 'rule_3',\r\n        name: 'Bank Reconciliation Check',\r\n        type: 'reconciliation',\r\n        status: 'active',\r\n        triggers: ['Daily at 6:00 AM'],\r\n        actions: ['Match transactions', 'Flag discrepancies', 'Generate report'],\r\n        lastRun: '2024-10-02 06:00',\r\n        nextRun: '2024-10-03 06:00',\r\n        executionCount: 28\r\n      },\r\n      {\r\n        id: 'rule_4',\r\n        name: 'Monthly Recurring Invoices',\r\n        type: 'recurring_billing',\r\n        status: 'active',\r\n        triggers: ['Monthly on 1st day'],\r\n        actions: ['Generate invoice', 'Send to customer', 'Update records'],\r\n        lastRun: '2024-10-01 00:00',\r\n        nextRun: '2024-11-01 00:00',\r\n        executionCount: 12\r\n      }\r\n    ];\r\n\r\n    const mockRecurring: RecurringInvoice[] = [\r\n      {\r\n        id: 'recurring_1',\r\n        customerName: 'ABC Technologies Sdn Bhd',\r\n        amount: 2500.00,\r\n        frequency: 'monthly',\r\n        nextDue: '2024-11-01',\r\n        status: 'active',\r\n        template: { service: 'Web Development', hours: 50 }\r\n      },\r\n      {\r\n        id: 'recurring_2',\r\n        customerName: 'XYZ Marketing Sdn Bhd',\r\n        amount: 1200.00,\r\n        frequency: 'monthly',\r\n        nextDue: '2024-11-15',\r\n        status: 'active',\r\n        template: { service: 'SEO Services', plan: 'Premium' }\r\n      },\r\n      {\r\n        id: 'recurring_3',\r\n        customerName: 'DEF Consulting',\r\n        amount: 5000.00,\r\n        frequency: 'quarterly',\r\n        nextDue: '2024-12-01',\r\n        status: 'active',\r\n        template: { service: 'Business Consultation', retainer: true }\r\n      }\r\n    ];\r\n\r\n    setTimeout(() => {\r\n      setAutomationRules(mockRules);\r\n      setRecurringInvoices(mockRecurring);\r\n      setIsLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'text-green-600 bg-green-100';\r\n      case 'paused': return 'text-yellow-600 bg-yellow-100';\r\n      case 'draft': return 'text-gray-600 bg-gray-100';\r\n      default: return 'text-gray-600 bg-gray-100';\r\n    }\r\n  };\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'invoice_reminder': return <Bell className=\"w-4 h-4\" />;\r\n      case 'recurring_billing': return <RefreshCw className=\"w-4 h-4\" />;\r\n      case 'expense_categorization': return <Brain className=\"w-4 h-4\" />;\r\n      case 'reconciliation': return <Zap className=\"w-4 h-4\" />;\r\n      default: return <Settings className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  const toggleRuleStatus = (ruleId: string) => {\r\n    setAutomationRules(rules =>\r\n      rules.map(rule =>\r\n        rule.id === ruleId\r\n          ? { ...rule, status: rule.status === 'active' ? 'paused' : 'active' }\r\n          : rule\r\n      )\r\n    );\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-6 flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">Workflow Automation</h1>\r\n          <p className=\"text-gray-600 text-lg\">Automate your accounting processes for maximum efficiency</p>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n          <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Active Rules</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">\r\n                  {automationRules.filter(r => r.status === 'active').length}\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-green-100 rounded-full\">\r\n                <Zap className=\"w-6 h-6 text-green-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Executions</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">\r\n                  {automationRules.reduce((sum, rule) => sum + rule.executionCount, 0)}\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-blue-100 rounded-full\">\r\n                <RefreshCw className=\"w-6 h-6 text-blue-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Recurring Invoices</p>\r\n                <p className=\"text-2xl font-bold text-purple-600\">{recurringInvoices.length}</p>\r\n              </div>\r\n              <div className=\"p-3 bg-purple-100 rounded-full\">\r\n                <Calendar className=\"w-6 h-6 text-purple-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-lg border border-white/20\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Time Saved</p>\r\n                <p className=\"text-2xl font-bold text-orange-600\">42h</p>\r\n              </div>\r\n              <div className=\"p-3 bg-orange-100 rounded-full\">\r\n                <Clock className=\"w-6 h-6 text-orange-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"bg-white/60 backdrop-blur-sm rounded-xl shadow-lg border border-white/20 mb-8\">\r\n          <div className=\"border-b border-gray-200\">\r\n            <nav className=\"flex space-x-8 px-6\">\r\n              {[\r\n                { id: 'overview', label: 'Overview', icon: Settings },\r\n                { id: 'rules', label: 'Automation Rules', icon: Zap },\r\n                { id: 'recurring', label: 'Recurring Billing', icon: RefreshCw },\r\n                { id: 'reminders', label: 'Invoice Reminders', icon: Bell },\r\n                { id: 'categorization', label: 'Smart Categorization', icon: Brain },\r\n                { id: 'reconciliation', label: 'Auto Reconciliation', icon: Zap }\r\n              ].map((tab) => {\r\n                const Icon = tab.icon;\r\n                return (\r\n                  <button\r\n                    key={tab.id}\r\n                    onClick={() => setActiveTab(tab.id)}\r\n                    className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm ${\r\n                      activeTab === tab.id\r\n                        ? 'border-blue-500 text-blue-600'\r\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                    }`}\r\n                  >\r\n                    <Icon className=\"w-4 h-4\" />\r\n                    <span>{tab.label}</span>\r\n                  </button>\r\n                );\r\n              })}\r\n            </nav>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            {activeTab === 'overview' && (\r\n              <div className=\"space-y-6\">\r\n                <h3 className=\"text-xl font-semibold mb-4\">Automation Overview</h3>\r\n                \r\n                {/* Quick Actions */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n                  <button className=\"p-4 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-lg hover:shadow-lg transition-all\">\r\n                    <Zap className=\"w-6 h-6 mb-2\" />\r\n                    <p className=\"font-medium\">Create New Rule</p>\r\n                  </button>\r\n                  <button className=\"p-4 bg-gradient-to-r from-green-500 to-teal-600 text-white rounded-lg hover:shadow-lg transition-all\">\r\n                    <RefreshCw className=\"w-6 h-6 mb-2\" />\r\n                    <p className=\"font-medium\">Setup Recurring Invoice</p>\r\n                  </button>\r\n                  <button className=\"p-4 bg-gradient-to-r from-orange-500 to-red-600 text-white rounded-lg hover:shadow-lg transition-all\">\r\n                    <Bell className=\"w-6 h-6 mb-2\" />\r\n                    <p className=\"font-medium\">Configure Reminders</p>\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Recent Activities */}\r\n                <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                  <h4 className=\"font-medium mb-3\">Recent Automation Activities</h4>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex items-center space-x-3 p-2 bg-white rounded\">\r\n                      <Bell className=\"w-4 h-4 text-blue-600\" />\r\n                      <span className=\"text-sm\">Sent 3 invoice reminders to overdue customers</span>\r\n                      <span className=\"text-xs text-gray-500 ml-auto\">2 hours ago</span>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-3 p-2 bg-white rounded\">\r\n                      <Brain className=\"w-4 h-4 text-purple-600\" />\r\n                      <span className=\"text-sm\">Auto-categorized 12 new expenses</span>\r\n                      <span className=\"text-xs text-gray-500 ml-auto\">5 hours ago</span>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-3 p-2 bg-white rounded\">\r\n                      <RefreshCw className=\"w-4 h-4 text-green-600\" />\r\n                      <span className=\"text-sm\">Generated 5 recurring invoices</span>\r\n                      <span className=\"text-xs text-gray-500 ml-auto\">1 day ago</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'rules' && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h3 className=\"text-xl font-semibold\">Automation Rules</h3>\r\n                  <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\">\r\n                    Create New Rule\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  {automationRules.map((rule) => (\r\n                    <div key={rule.id} className=\"bg-white rounded-lg p-6 shadow-sm border\">\r\n                      <div className=\"flex items-center justify-between mb-4\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <div className=\"p-2 bg-blue-100 rounded-full\">\r\n                            {getTypeIcon(rule.type)}\r\n                          </div>\r\n                          <div>\r\n                            <h4 className=\"font-medium\">{rule.name}</h4>\r\n                            <p className=\"text-sm text-gray-500 capitalize\">{rule.type.replace('_', ' ')}</p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(rule.status)}`}>\r\n                            {rule.status}\r\n                          </span>\r\n                          <button\r\n                            onClick={() => toggleRuleStatus(rule.id)}\r\n                            className=\"p-2 text-gray-400 hover:text-gray-600\"\r\n                          >\r\n                            {rule.status === 'active' ? <Pause className=\"w-4 h-4\" /> : <Play className=\"w-4 h-4\" />}\r\n                          </button>\r\n                          <button className=\"p-2 text-gray-400 hover:text-gray-600\">\r\n                            <Edit3 className=\"w-4 h-4\" />\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                        <div>\r\n                          <p className=\"font-medium text-gray-700 mb-1\">Triggers:</p>\r\n                          <ul className=\"text-gray-600 space-y-1\">\r\n                            {rule.triggers.map((trigger, idx) => (\r\n                              <li key={idx}>• {trigger}</li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"font-medium text-gray-700 mb-1\">Actions:</p>\r\n                          <ul className=\"text-gray-600 space-y-1\">\r\n                            {rule.actions.map((action, idx) => (\r\n                              <li key={idx}>• {action}</li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex justify-between text-xs text-gray-500 mt-4 pt-4 border-t\">\r\n                        <span>Last run: {rule.lastRun}</span>\r\n                        <span>Next run: {rule.nextRun}</span>\r\n                        <span>Executions: {rule.executionCount}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'recurring' && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h3 className=\"text-xl font-semibold\">Recurring Invoices</h3>\r\n                  <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\">\r\n                    Setup New Recurring Invoice\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  {recurringInvoices.map((invoice) => (\r\n                    <div key={invoice.id} className=\"bg-white rounded-lg p-6 shadow-sm border\">\r\n                      <div className=\"flex justify-between items-start mb-4\">\r\n                        <div>\r\n                          <h4 className=\"font-medium\">{invoice.customerName}</h4>\r\n                          <p className=\"text-2xl font-bold text-blue-600\">RM {invoice.amount.toFixed(2)}</p>\r\n                        </div>\r\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(invoice.status)}`}>\r\n                          {invoice.status}\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-2 text-sm\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Frequency:</span>\r\n                          <span className=\"font-medium capitalize\">{invoice.frequency}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Next Due:</span>\r\n                          <span className=\"font-medium\">{invoice.nextDue}</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex space-x-2 mt-4\">\r\n                        <button className=\"flex-1 bg-blue-100 text-blue-700 py-2 px-3 rounded text-sm hover:bg-blue-200 transition-colors\">\r\n                          Edit Template\r\n                        </button>\r\n                        <button className=\"flex-1 bg-gray-100 text-gray-700 py-2 px-3 rounded text-sm hover:bg-gray-200 transition-colors\">\r\n                          View History\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'reminders' && (\r\n              <div className=\"space-y-6\">\r\n                <h3 className=\"text-xl font-semibold\">Invoice Reminder Settings</h3>\r\n                \r\n                <div className=\"bg-white rounded-lg p-6 shadow-sm border\">\r\n                  <h4 className=\"font-medium mb-4\">Reminder Schedule</h4>\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\r\n                      <div>\r\n                        <p className=\"font-medium\">First Reminder</p>\r\n                        <p className=\"text-sm text-gray-600\">Send when invoice is 3 days overdue</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\r\n                      <div>\r\n                        <p className=\"font-medium\">Second Reminder</p>\r\n                        <p className=\"text-sm text-gray-600\">Send when invoice is 7 days overdue</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\r\n                      <div>\r\n                        <p className=\"font-medium\">Final Notice</p>\r\n                        <p className=\"text-sm text-gray-600\">Send when invoice is 14 days overdue</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"bg-white rounded-lg p-6 shadow-sm border\">\r\n                  <h4 className=\"font-medium mb-4\">Email Templates</h4>\r\n                  <div className=\"space-y-3\">\r\n                    <button className=\"w-full text-left p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\">\r\n                      <p className=\"font-medium\">Friendly Reminder Template</p>\r\n                      <p className=\"text-sm text-gray-600\">Professional but gentle reminder tone</p>\r\n                    </button>\r\n                    <button className=\"w-full text-left p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\">\r\n                      <p className=\"font-medium\">Urgent Notice Template</p>\r\n                      <p className=\"text-sm text-gray-600\">More formal and urgent language</p>\r\n                    </button>\r\n                    <button className=\"w-full text-left p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\">\r\n                      <p className=\"font-medium\">Final Warning Template</p>\r\n                      <p className=\"text-sm text-gray-600\">Last notice before collection action</p>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'categorization' && (\r\n              <SmartExpenseCategorization />\r\n            )}\r\n\r\n            {activeTab === 'reconciliation' && (\r\n              <AutoReconciliation />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkflowAutomation;"],"mappings":"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"}
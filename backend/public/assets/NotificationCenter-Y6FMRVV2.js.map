{"version":3,"file":"NotificationCenter-Y6FMRVV2.js","names":["NotificationCenter: React.FC","mockNotifications: Notification[]"],"sources":["../../src/pages/NotificationCenter.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { \r\n  Bell, X, Check, AlertTriangle, Info, Mail, \r\n  Smartphone, Settings, Filter, Archive, Star,\r\n  Clock, User, Building, Receipt, DollarSign,\r\n  FileText, Calendar, Send, Eye, MoreHorizontal\r\n} from 'lucide-react'\r\n\r\ninterface Notification {\r\n  id: string\r\n  type: 'invoice' | 'payment' | 'expense' | 'system' | 'reminder' | 'approval'\r\n  priority: 'low' | 'medium' | 'high' | 'urgent'\r\n  title: string\r\n  message: string\r\n  timestamp: Date\r\n  read: boolean\r\n  starred: boolean\r\n  actionUrl?: string\r\n  actionText?: string\r\n  metadata?: {\r\n    amount?: number\r\n    customerName?: string\r\n    invoiceNumber?: string\r\n    dueDate?: Date\r\n  }\r\n}\r\n\r\ninterface NotificationPreferences {\r\n  email: {\r\n    invoiceOverdue: boolean\r\n    paymentReceived: boolean\r\n    lowStock: boolean\r\n    systemUpdates: boolean\r\n    weeklyReports: boolean\r\n  }\r\n  inApp: {\r\n    realTimeUpdates: boolean\r\n    soundNotifications: boolean\r\n    desktopNotifications: boolean\r\n  }\r\n  sms: {\r\n    urgentOnly: boolean\r\n    paymentReminders: boolean\r\n    systemAlerts: boolean\r\n  }\r\n}\r\n\r\nconst NotificationCenter: React.FC = () => {\r\n  const [notifications, setNotifications] = useState<Notification[]>([])\r\n  const [preferences, setPreferences] = useState<NotificationPreferences | null>(null)\r\n  const [activeTab, setActiveTab] = useState<'all' | 'unread' | 'starred' | 'settings'>('all')\r\n  const [filterType, setFilterType] = useState<'all' | 'invoice' | 'payment' | 'system'>('all')\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      setLoading(true)\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n      \r\n      const mockNotifications: Notification[] = [\r\n        {\r\n          id: '1',\r\n          type: 'invoice',\r\n          priority: 'high',\r\n          title: 'Invoice Overdue',\r\n          message: 'Invoice INV-2025-001 from ACME Corp is 5 days overdue',\r\n          timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n          read: false,\r\n          starred: true,\r\n          actionUrl: '/invoices/INV-2025-001',\r\n          actionText: 'View Invoice',\r\n          metadata: {\r\n            amount: 15500.00,\r\n            customerName: 'ACME Corporation',\r\n            invoiceNumber: 'INV-2025-001',\r\n            dueDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000)\r\n          }\r\n        },\r\n        {\r\n          id: '2',\r\n          type: 'payment',\r\n          priority: 'medium',\r\n          title: 'Payment Received',\r\n          message: 'Payment of RM 8,750.00 received from Tech Solutions Sdn Bhd',\r\n          timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000),\r\n          read: false,\r\n          starred: false,\r\n          actionUrl: '/transactions',\r\n          actionText: 'View Transaction',\r\n          metadata: {\r\n            amount: 8750.00,\r\n            customerName: 'Tech Solutions Sdn Bhd'\r\n          }\r\n        },\r\n        {\r\n          id: '3',\r\n          type: 'system',\r\n          priority: 'urgent',\r\n          title: 'E-Invoice Submission Failed',\r\n          message: 'Failed to submit 3 invoices to LHDN MyInvois system',\r\n          timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000),\r\n          read: false,\r\n          starred: false,\r\n          actionUrl: '/reports/einvoice-compliance',\r\n          actionText: 'Check Status'\r\n        },\r\n        {\r\n          id: '4',\r\n          type: 'reminder',\r\n          priority: 'medium',\r\n          title: 'SST Return Due',\r\n          message: 'SST return for October 2025 is due in 3 days',\r\n          timestamp: new Date(Date.now() - 8 * 60 * 60 * 1000),\r\n          read: true,\r\n          starred: false,\r\n          actionUrl: '/reports/sst-report',\r\n          actionText: 'Prepare Return'\r\n        },\r\n        {\r\n          id: '5',\r\n          type: 'expense',\r\n          priority: 'low',\r\n          title: 'New Expense Categorized',\r\n          message: 'AI automatically categorized office supplies expense',\r\n          timestamp: new Date(Date.now() - 12 * 60 * 60 * 1000),\r\n          read: true,\r\n          starred: false,\r\n          actionUrl: '/transactions',\r\n          actionText: 'Review'\r\n        }\r\n      ]\r\n      \r\n      setNotifications(mockNotifications)\r\n      \r\n      setPreferences({\r\n        email: {\r\n          invoiceOverdue: true,\r\n          paymentReceived: true,\r\n          lowStock: false,\r\n          systemUpdates: true,\r\n          weeklyReports: true\r\n        },\r\n        inApp: {\r\n          realTimeUpdates: true,\r\n          soundNotifications: true,\r\n          desktopNotifications: false\r\n        },\r\n        sms: {\r\n          urgentOnly: true,\r\n          paymentReminders: false,\r\n          systemAlerts: true\r\n        }\r\n      })\r\n      \r\n      setLoading(false)\r\n    }\r\n\r\n    fetchNotifications()\r\n  }, [])\r\n\r\n  const formatMYR = (amount: number) => {\r\n    return `RM ${amount.toLocaleString('en-MY', { minimumFractionDigits: 2 })}`\r\n  }\r\n\r\n  const getTimeAgo = (date: Date) => {\r\n    const now = new Date()\r\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60))\r\n    \r\n    if (diffInMinutes < 60) {\r\n      return `${diffInMinutes} minutes ago`\r\n    } else if (diffInMinutes < 1440) {\r\n      return `${Math.floor(diffInMinutes / 60)} hours ago`\r\n    } else {\r\n      return `${Math.floor(diffInMinutes / 1440)} days ago`\r\n    }\r\n  }\r\n\r\n  const getPriorityColor = (priority: string) => {\r\n    switch (priority) {\r\n      case 'urgent': return 'text-red-400 bg-red-500/10 border-red-500/30'\r\n      case 'high': return 'text-orange-400 bg-orange-500/10 border-orange-500/30'\r\n      case 'medium': return 'text-yellow-400 bg-yellow-500/10 border-yellow-500/30'\r\n      case 'low': return 'text-green-400 bg-green-500/10 border-green-500/30'\r\n      default: return 'text-blue-400 bg-blue-500/10 border-blue-500/30'\r\n    }\r\n  }\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'invoice': return Receipt\r\n      case 'payment': return DollarSign\r\n      case 'expense': return FileText\r\n      case 'system': return Settings\r\n      case 'reminder': return Calendar\r\n      case 'approval': return Check\r\n      default: return Bell\r\n    }\r\n  }\r\n\r\n  const markAsRead = (id: string) => {\r\n    setNotifications(prev => \r\n      prev.map(notif => \r\n        notif.id === id ? { ...notif, read: true } : notif\r\n      )\r\n    )\r\n  }\r\n\r\n  const toggleStar = (id: string) => {\r\n    setNotifications(prev => \r\n      prev.map(notif => \r\n        notif.id === id ? { ...notif, starred: !notif.starred } : notif\r\n      )\r\n    )\r\n  }\r\n\r\n  const markAllAsRead = () => {\r\n    setNotifications(prev => prev.map(notif => ({ ...notif, read: true })))\r\n  }\r\n\r\n  const deleteNotification = (id: string) => {\r\n    setNotifications(prev => prev.filter(notif => notif.id !== id))\r\n  }\r\n\r\n  const filteredNotifications = notifications.filter(notif => {\r\n    if (activeTab === 'unread' && notif.read) return false\r\n    if (activeTab === 'starred' && !notif.starred) return false\r\n    if (filterType !== 'all' && notif.type !== filterType) return false\r\n    return true\r\n  })\r\n\r\n  const unreadCount = notifications.filter(n => !n.read).length\r\n\r\n  const renderNotificationSettings = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">ðŸ“§ Email Notifications</h3>\r\n        <div className=\"space-y-4\">\r\n          {Object.entries(preferences?.email || {}).map(([key, value]) => (\r\n            <div key={key} className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h4 className=\"text-white font-medium capitalize\">{key.replace(/([A-Z])/g, ' $1')}</h4>\r\n                <p className=\"text-white/60 text-sm\">Get notified via email for these events</p>\r\n              </div>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input \r\n                  type=\"checkbox\" \r\n                  checked={value}\r\n                  onChange={(e) => setPreferences(prev => prev ? {\r\n                    ...prev,\r\n                    email: { ...prev.email, [key]: e.target.checked }\r\n                  } : null)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-11 h-6 bg-white/20 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">ðŸ“± In-App Notifications</h3>\r\n        <div className=\"space-y-4\">\r\n          {Object.entries(preferences?.inApp || {}).map(([key, value]) => (\r\n            <div key={key} className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h4 className=\"text-white font-medium capitalize\">{key.replace(/([A-Z])/g, ' $1')}</h4>\r\n                <p className=\"text-white/60 text-sm\">Control in-app notification behavior</p>\r\n              </div>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input \r\n                  type=\"checkbox\" \r\n                  checked={value}\r\n                  onChange={(e) => setPreferences(prev => prev ? {\r\n                    ...prev,\r\n                    inApp: { ...prev.inApp, [key]: e.target.checked }\r\n                  } : null)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-11 h-6 bg-white/20 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">ðŸ“± SMS Notifications</h3>\r\n        <div className=\"space-y-4\">\r\n          {Object.entries(preferences?.sms || {}).map(([key, value]) => (\r\n            <div key={key} className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h4 className=\"text-white font-medium capitalize\">{key.replace(/([A-Z])/g, ' $1')}</h4>\r\n                <p className=\"text-white/60 text-sm\">SMS notifications for urgent matters</p>\r\n              </div>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input \r\n                  type=\"checkbox\" \r\n                  checked={value}\r\n                  onChange={(e) => setPreferences(prev => prev ? {\r\n                    ...prev,\r\n                    sms: { ...prev.sms, [key]: e.target.checked }\r\n                  } : null)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-11 h-6 bg-white/20 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderNotificationList = () => (\r\n    <div className=\"space-y-4\">\r\n      {filteredNotifications.map((notification) => {\r\n        const TypeIcon = getTypeIcon(notification.type)\r\n        return (\r\n          <div \r\n            key={notification.id}\r\n            className={`bg-white/20 backdrop-blur-sm rounded-2xl p-6 border transition-all duration-300 hover:shadow-lg ${\r\n              notification.read ? 'border-white/20' : 'border-blue-500/50 bg-blue-500/5'\r\n            }`}\r\n          >\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex items-start space-x-4 flex-1\">\r\n                <div className={`p-3 rounded-xl ${getPriorityColor(notification.priority)}`}>\r\n                  <TypeIcon className=\"h-5 w-5\" />\r\n                </div>\r\n                \r\n                <div className=\"flex-1 min-w-0\">\r\n                  <div className=\"flex items-center space-x-2 mb-2\">\r\n                    <h4 className=\"text-white font-semibold\">{notification.title}</h4>\r\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${getPriorityColor(notification.priority)}`}>\r\n                      {notification.priority.toUpperCase()}\r\n                    </span>\r\n                    {!notification.read && (\r\n                      <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse\"></div>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <p className=\"text-white/80 mb-3\">{notification.message}</p>\r\n                  \r\n                  {notification.metadata && (\r\n                    <div className=\"bg-white/10 rounded-xl p-3 mb-3 space-y-1\">\r\n                      {notification.metadata.amount && (\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span className=\"text-white/60\">Amount:</span>\r\n                          <span className=\"text-green-400 font-semibold\">{formatMYR(notification.metadata.amount)}</span>\r\n                        </div>\r\n                      )}\r\n                      {notification.metadata.customerName && (\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span className=\"text-white/60\">Customer:</span>\r\n                          <span className=\"text-white\">{notification.metadata.customerName}</span>\r\n                        </div>\r\n                      )}\r\n                      {notification.metadata.invoiceNumber && (\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span className=\"text-white/60\">Invoice:</span>\r\n                          <span className=\"text-white\">{notification.metadata.invoiceNumber}</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-2 text-white/60 text-sm\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      <span>{getTimeAgo(notification.timestamp)}</span>\r\n                    </div>\r\n                    \r\n                    {notification.actionUrl && (\r\n                      <button className=\"bg-blue-600 text-white px-4 py-2 rounded-xl text-sm font-medium hover:bg-blue-700 transition-colors\">\r\n                        {notification.actionText || 'View'}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center space-x-2 ml-4\">\r\n                <button\r\n                  onClick={() => toggleStar(notification.id)}\r\n                  className={`p-2 rounded-xl transition-colors ${\r\n                    notification.starred \r\n                      ? 'text-yellow-400 bg-yellow-500/20' \r\n                      : 'text-white/60 hover:text-yellow-400 hover:bg-yellow-500/10'\r\n                  }`}\r\n                >\r\n                  <Star className=\"h-4 w-4\" fill={notification.starred ? 'currentColor' : 'none'} />\r\n                </button>\r\n                \r\n                {!notification.read && (\r\n                  <button\r\n                    onClick={() => markAsRead(notification.id)}\r\n                    className=\"p-2 rounded-xl text-white/60 hover:text-green-400 hover:bg-green-500/10 transition-colors\"\r\n                  >\r\n                    <Eye className=\"h-4 w-4\" />\r\n                  </button>\r\n                )}\r\n                \r\n                <button\r\n                  onClick={() => deleteNotification(notification.id)}\r\n                  className=\"p-2 rounded-xl text-white/60 hover:text-red-400 hover:bg-red-500/10 transition-colors\"\r\n                >\r\n                  <X className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n      \r\n      {filteredNotifications.length === 0 && (\r\n        <div className=\"text-center py-12\">\r\n          <Bell className=\"h-16 w-16 text-white/40 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-semibold text-white/80 mb-2\">No notifications</h3>\r\n          <p className=\"text-white/60\">You're all caught up! No notifications to show.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 to-purple-900 p-6\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-white mb-2\">\r\n            ðŸ”” Notification Center\r\n          </h1>\r\n          <p className=\"text-white/80 text-lg\">\r\n            Stay updated with real-time notifications and manage your preferences\r\n          </p>\r\n        </div>\r\n\r\n        {/* Controls */}\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 mb-8\">\r\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\r\n            {/* Tabs */}\r\n            <div className=\"flex space-x-2\">\r\n              {[\r\n                { id: 'all', label: 'All', count: notifications.length },\r\n                { id: 'unread', label: 'Unread', count: unreadCount },\r\n                { id: 'starred', label: 'Starred', count: notifications.filter(n => n.starred).length },\r\n                { id: 'settings', label: 'Settings', count: 0 }\r\n              ].map(tab => (\r\n                <button\r\n                  key={tab.id}\r\n                  onClick={() => setActiveTab(tab.id as any)}\r\n                  className={`px-4 py-2 rounded-xl transition-all duration-300 ${\r\n                    activeTab === tab.id\r\n                      ? 'bg-white/30 text-white font-semibold'\r\n                      : 'text-white/70 hover:bg-white/20'\r\n                  }`}\r\n                >\r\n                  {tab.label}\r\n                  {tab.count > 0 && (\r\n                    <span className=\"ml-2 bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\r\n                      {tab.count}\r\n                    </span>\r\n                  )}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            {activeTab !== 'settings' && (\r\n              <div className=\"flex space-x-3\">\r\n                <select \r\n                  value={filterType}\r\n                  onChange={(e) => setFilterType(e.target.value as any)}\r\n                  className=\"bg-white/10 border border-white/30 rounded-xl px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"all\" className=\"bg-gray-800\">All Types</option>\r\n                  <option value=\"invoice\" className=\"bg-gray-800\">Invoices</option>\r\n                  <option value=\"payment\" className=\"bg-gray-800\">Payments</option>\r\n                  <option value=\"system\" className=\"bg-gray-800\">System</option>\r\n                </select>\r\n                \r\n                <button\r\n                  onClick={markAllAsRead}\r\n                  className=\"bg-green-600 text-white px-4 py-2 rounded-xl font-medium hover:bg-green-700 transition-colors\"\r\n                >\r\n                  <Check className=\"inline h-4 w-4 mr-2\" />\r\n                  Mark All Read\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"mb-8\">\r\n          {loading ? (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n              <div className=\"animate-spin h-12 w-12 border-4 border-white/30 border-t-white rounded-full\"></div>\r\n            </div>\r\n          ) : activeTab === 'settings' ? (\r\n            renderNotificationSettings()\r\n          ) : (\r\n            renderNotificationList()\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/30 text-center\">\r\n          <p className=\"text-white/60 text-sm\">\r\n            ðŸ”” Real-time notifications enabled | \r\n            ðŸ“§ Email notifications configured | \r\n            ðŸ”’ All notifications encrypted and secure\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotificationCenter"],"mappings":"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"}
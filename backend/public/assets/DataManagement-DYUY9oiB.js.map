{"version":3,"file":"DataManagement-DYUY9oiB.js","names":["DataManagement: React.FC","newJob: ImportJob","newBackup: BackupJob"],"sources":["../../src/pages/DataManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { \r\n  Download, Upload, FileText, FileSpreadsheet, Database,\r\n  Settings, RefreshCw, AlertCircle, Archive\r\n} from 'lucide-react'\r\n\r\ninterface ExportTemplate {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  type: 'excel' | 'csv' | 'pdf' | 'json'\r\n  category: 'transactions' | 'reports' | 'invoices' | 'customers' | 'all'\r\n  size: string\r\n  lastUsed?: Date\r\n  downloadCount: number\r\n}\r\n\r\ninterface ImportJob {\r\n  id: string\r\n  filename: string\r\n  type: 'excel' | 'csv' | 'json'\r\n  status: 'processing' | 'completed' | 'failed' | 'pending'\r\n  progress: number\r\n  recordsProcessed: number\r\n  totalRecords: number\r\n  errors: string[]\r\n  createdAt: Date\r\n  completedAt?: Date\r\n}\r\n\r\ninterface BackupJob {\r\n  id: string\r\n  name: string\r\n  type: 'full' | 'partial' | 'incremental'\r\n  status: 'running' | 'completed' | 'failed' | 'scheduled'\r\n  size: string\r\n  createdAt: Date\r\n  downloadUrl?: string\r\n  expiresAt?: Date\r\n}\r\n\r\nconst DataManagement: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<'export' | 'import' | 'backup' | 'templates'>('export')\r\n  const [exportTemplates, setExportTemplates] = useState<ExportTemplate[]>([])\r\n  const [importJobs, setImportJobs] = useState<ImportJob[]>([])\r\n  const [backupJobs, setBackupJobs] = useState<BackupJob[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [selectedTemplate, setSelectedTemplate] = useState<string>('')\r\n  const [dateRange, setDateRange] = useState({ start: '', end: '' })\r\n  const [exportFormat, setExportFormat] = useState<'excel' | 'csv' | 'pdf'>('excel')\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n\r\n      // Mock export templates\r\n      setExportTemplates([\r\n        {\r\n          id: '1',\r\n          name: 'Complete Financial Report',\r\n          description: 'Comprehensive financial data including P&L, balance sheet, and cash flow',\r\n          type: 'excel',\r\n          category: 'reports',\r\n          size: '2.5 MB',\r\n          lastUsed: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),\r\n          downloadCount: 45\r\n        },\r\n        {\r\n          id: '2',\r\n          name: 'Monthly Transactions',\r\n          description: 'All transaction records for specified month with categories',\r\n          type: 'csv',\r\n          category: 'transactions',\r\n          size: '1.2 MB',\r\n          lastUsed: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),\r\n          downloadCount: 28\r\n        },\r\n        {\r\n          id: '3',\r\n          name: 'Invoice Register',\r\n          description: 'Complete invoice listing with payment status and amounts',\r\n          type: 'excel',\r\n          category: 'invoices',\r\n          size: '3.1 MB',\r\n          lastUsed: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\r\n          downloadCount: 67\r\n        },\r\n        {\r\n          id: '4',\r\n          name: 'Customer Directory',\r\n          description: 'Customer contact information and payment history',\r\n          type: 'csv',\r\n          category: 'customers',\r\n          size: '0.8 MB',\r\n          lastUsed: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\r\n          downloadCount: 23\r\n        },\r\n        {\r\n          id: '5',\r\n          name: 'SST Compliance Report',\r\n          description: 'Malaysian SST report with tax calculations and summaries',\r\n          type: 'pdf',\r\n          category: 'reports',\r\n          size: '1.5 MB',\r\n          lastUsed: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),\r\n          downloadCount: 89\r\n        }\r\n      ])\r\n\r\n      // Mock import jobs\r\n      setImportJobs([\r\n        {\r\n          id: '1',\r\n          filename: 'transactions_january_2025.xlsx',\r\n          type: 'excel',\r\n          status: 'completed',\r\n          progress: 100,\r\n          recordsProcessed: 1247,\r\n          totalRecords: 1247,\r\n          errors: [],\r\n          createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n          completedAt: new Date(Date.now() - 1.5 * 60 * 60 * 1000)\r\n        },\r\n        {\r\n          id: '2',\r\n          filename: 'customers_import.csv',\r\n          type: 'csv',\r\n          status: 'processing',\r\n          progress: 67,\r\n          recordsProcessed: 334,\r\n          totalRecords: 500,\r\n          errors: ['Row 45: Invalid email format', 'Row 123: Missing required field'],\r\n          createdAt: new Date(Date.now() - 30 * 60 * 1000)\r\n        },\r\n        {\r\n          id: '3',\r\n          filename: 'invoice_data_backup.json',\r\n          type: 'json',\r\n          status: 'failed',\r\n          progress: 23,\r\n          recordsProcessed: 115,\r\n          totalRecords: 500,\r\n          errors: ['Invalid JSON format at line 45', 'Missing required field: invoice_number'],\r\n          createdAt: new Date(Date.now() - 4 * 60 * 60 * 1000)\r\n        }\r\n      ])\r\n\r\n      // Mock backup jobs\r\n      setBackupJobs([\r\n        {\r\n          id: '1',\r\n          name: 'Full System Backup - January 2025',\r\n          type: 'full',\r\n          status: 'completed',\r\n          size: '245 MB',\r\n          createdAt: new Date(Date.now() - 24 * 60 * 60 * 1000),\r\n          downloadUrl: '/api/backups/download/1',\r\n          expiresAt: new Date(Date.now() + 29 * 24 * 60 * 60 * 1000)\r\n        },\r\n        {\r\n          id: '2',\r\n          name: 'Weekly Incremental Backup',\r\n          type: 'incremental',\r\n          status: 'running',\r\n          size: '45 MB',\r\n          createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000)\r\n        },\r\n        {\r\n          id: '3',\r\n          name: 'Transaction Data Backup',\r\n          type: 'partial',\r\n          status: 'scheduled',\r\n          size: '89 MB',\r\n          createdAt: new Date(Date.now() + 6 * 60 * 60 * 1000)\r\n        }\r\n      ])\r\n\r\n      setLoading(false)\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleExport = async () => {\r\n    if (!selectedTemplate) {\r\n      alert('Please select a template to export')\r\n      return\r\n    }\r\n\r\n    // Simulate export process\r\n    const template = exportTemplates.find(t => t.id === selectedTemplate)\r\n    if (template) {\r\n      // Update download count\r\n      setExportTemplates(prev => prev.map(t => \r\n        t.id === selectedTemplate \r\n          ? { ...t, downloadCount: t.downloadCount + 1, lastUsed: new Date() }\r\n          : t\r\n      ))\r\n      \r\n      // Simulate file download\r\n      alert(`Exporting ${template.name} as ${exportFormat.toUpperCase()}...`)\r\n    }\r\n  }\r\n\r\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0]\r\n    if (file) {\r\n      const newJob: ImportJob = {\r\n        id: Date.now().toString(),\r\n        filename: file.name,\r\n        type: file.name.endsWith('.xlsx') ? 'excel' : file.name.endsWith('.csv') ? 'csv' : 'json',\r\n        status: 'processing',\r\n        progress: 0,\r\n        recordsProcessed: 0,\r\n        totalRecords: Math.floor(Math.random() * 1000) + 100,\r\n        errors: [],\r\n        createdAt: new Date()\r\n      }\r\n      \r\n      setImportJobs(prev => [newJob, ...prev])\r\n      \r\n      // Simulate processing\r\n      const interval = setInterval(() => {\r\n        setImportJobs(prev => prev.map(job => {\r\n          if (job.id === newJob.id && job.progress < 100) {\r\n            const newProgress = Math.min(job.progress + Math.random() * 15, 100)\r\n            const newRecordsProcessed = Math.floor((newProgress / 100) * job.totalRecords)\r\n            \r\n            if (newProgress >= 100) {\r\n              clearInterval(interval)\r\n              return {\r\n                ...job,\r\n                progress: 100,\r\n                recordsProcessed: job.totalRecords,\r\n                status: Math.random() > 0.2 ? 'completed' : 'failed',\r\n                completedAt: new Date(),\r\n                errors: Math.random() > 0.2 ? [] : ['Sample error: Invalid data format']\r\n              }\r\n            }\r\n            \r\n            return {\r\n              ...job,\r\n              progress: newProgress,\r\n              recordsProcessed: newRecordsProcessed\r\n            }\r\n          }\r\n          return job\r\n        }))\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  const startBackup = (type: 'full' | 'partial' | 'incremental') => {\r\n    const newBackup: BackupJob = {\r\n      id: Date.now().toString(),\r\n      name: `${type.charAt(0).toUpperCase() + type.slice(1)} Backup - ${new Date().toLocaleDateString()}`,\r\n      type,\r\n      status: 'running',\r\n      size: '0 MB',\r\n      createdAt: new Date()\r\n    }\r\n    \r\n    setBackupJobs(prev => [newBackup, ...prev])\r\n    \r\n    // Simulate backup process\r\n    setTimeout(() => {\r\n      setBackupJobs(prev => prev.map(backup =>\r\n        backup.id === newBackup.id\r\n          ? {\r\n              ...backup,\r\n              status: 'completed',\r\n              size: `${Math.floor(Math.random() * 200) + 50} MB`,\r\n              downloadUrl: `/api/backups/download/${backup.id}`,\r\n              expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)\r\n            }\r\n          : backup\r\n      ))\r\n    }, 3000)\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'completed': return 'text-green-400 bg-green-500/10'\r\n      case 'processing': \r\n      case 'running': return 'text-blue-400 bg-blue-500/10'\r\n      case 'failed': return 'text-red-400 bg-red-500/10'\r\n      case 'pending':\r\n      case 'scheduled': return 'text-yellow-400 bg-yellow-500/10'\r\n      default: return 'text-gray-400 bg-gray-500/10'\r\n    }\r\n  }\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'excel': return <FileSpreadsheet className=\"h-5 w-5 text-green-400\" />\r\n      case 'csv': return <FileText className=\"h-5 w-5 text-blue-400\" />\r\n      case 'pdf': return <FileText className=\"h-5 w-5 text-red-400\" />\r\n      case 'json': return <Database className=\"h-5 w-5 text-purple-400\" />\r\n      default: return <FileText className=\"h-5 w-5 text-gray-400\" />\r\n    }\r\n  }\r\n\r\n  const renderExportTools = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Export Configuration */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">📤 Data Export Configuration</h3>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6\">\r\n          <div>\r\n            <label className=\"block text-white/80 text-sm font-medium mb-2\">Export Template</label>\r\n            <select \r\n              value={selectedTemplate}\r\n              onChange={(e) => setSelectedTemplate(e.target.value)}\r\n              className=\"w-full bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\" className=\"bg-gray-800\">Select template...</option>\r\n              {exportTemplates.map(template => (\r\n                <option key={template.id} value={template.id} className=\"bg-gray-800\">\r\n                  {template.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-white/80 text-sm font-medium mb-2\">Export Format</label>\r\n            <select \r\n              value={exportFormat}\r\n              onChange={(e) => setExportFormat(e.target.value as 'excel' | 'csv' | 'pdf')}\r\n              className=\"w-full bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"excel\" className=\"bg-gray-800\">Excel (.xlsx)</option>\r\n              <option value=\"csv\" className=\"bg-gray-800\">CSV (.csv)</option>\r\n              <option value=\"pdf\" className=\"bg-gray-800\">PDF (.pdf)</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-white/80 text-sm font-medium mb-2\">Start Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={dateRange.start}\r\n              onChange={(e) => setDateRange(prev => ({ ...prev, start: e.target.value }))}\r\n              className=\"w-full bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-white/80 text-sm font-medium mb-2\">End Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={dateRange.end}\r\n              onChange={(e) => setDateRange(prev => ({ ...prev, end: e.target.value }))}\r\n              className=\"w-full bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <button\r\n          onClick={handleExport}\r\n          disabled={!selectedTemplate}\r\n          className=\"bg-gradient-to-r from-green-600 to-blue-600 text-white px-6 py-3 rounded-xl font-medium hover:shadow-lg transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          <Download className=\"inline h-5 w-5 mr-2\" />\r\n          Export Data\r\n        </button>\r\n      </div>\r\n\r\n      {/* Export Templates */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">📋 Available Export Templates</h3>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {exportTemplates.map((template) => (\r\n            <div \r\n              key={template.id} \r\n              className={`bg-white/10 rounded-xl p-4 border transition-all duration-300 cursor-pointer hover:shadow-lg ${\r\n                selectedTemplate === template.id \r\n                  ? 'border-blue-400 bg-blue-500/20' \r\n                  : 'border-white/20 hover:border-white/40'\r\n              }`}\r\n              onClick={() => setSelectedTemplate(template.id)}\r\n            >\r\n              <div className=\"flex items-start justify-between mb-3\">\r\n                {getTypeIcon(template.type)}\r\n                <span className={`px-2 py-1 rounded-lg text-xs font-medium ${\r\n                  template.category === 'reports' ? 'bg-purple-500/20 text-purple-400' :\r\n                  template.category === 'transactions' ? 'bg-green-500/20 text-green-400' :\r\n                  template.category === 'invoices' ? 'bg-blue-500/20 text-blue-400' :\r\n                  'bg-gray-500/20 text-gray-400'\r\n                }`}>\r\n                  {template.category}\r\n                </span>\r\n              </div>\r\n              \r\n              <h4 className=\"text-white font-semibold mb-2\">{template.name}</h4>\r\n              <p className=\"text-white/70 text-sm mb-3\">{template.description}</p>\r\n              \r\n              <div className=\"flex justify-between text-sm text-white/60\">\r\n                <span>Size: {template.size}</span>\r\n                <span>Downloads: {template.downloadCount}</span>\r\n              </div>\r\n              \r\n              {template.lastUsed && (\r\n                <div className=\"mt-2 text-xs text-white/50\">\r\n                  Last used: {template.lastUsed.toLocaleDateString()}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderImportTools = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* File Upload */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">📥 Data Import</h3>\r\n        \r\n        <div className=\"border-2 border-dashed border-white/30 rounded-xl p-8 text-center\">\r\n          <Upload className=\"h-16 w-16 text-white/40 mx-auto mb-4\" />\r\n          <h4 className=\"text-white font-semibold mb-2\">Drop files here or click to browse</h4>\r\n          <p className=\"text-white/60 mb-4\">Supports Excel (.xlsx), CSV (.csv), and JSON (.json) files</p>\r\n          \r\n          <input\r\n            type=\"file\"\r\n            accept=\".xlsx,.csv,.json\"\r\n            onChange={handleFileUpload}\r\n            className=\"hidden\"\r\n            id=\"file-upload\"\r\n          />\r\n          <label\r\n            htmlFor=\"file-upload\"\r\n            className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-3 rounded-xl font-medium hover:shadow-lg transition-all duration-300 cursor-pointer inline-block\"\r\n          >\r\n            Choose Files\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Import Jobs */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">📋 Import Progress</h3>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {importJobs.map((job) => (\r\n            <div key={job.id} className=\"bg-white/10 rounded-xl p-4 border border-white/20\">\r\n              <div className=\"flex items-center justify-between mb-3\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  {getTypeIcon(job.type)}\r\n                  <div>\r\n                    <h4 className=\"text-white font-semibold\">{job.filename}</h4>\r\n                    <p className=\"text-white/60 text-sm\">\r\n                      {job.recordsProcessed} / {job.totalRecords} records processed\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(job.status)}`}>\r\n                  {job.status.charAt(0).toUpperCase() + job.status.slice(1)}\r\n                </span>\r\n              </div>\r\n              \r\n              {/* Progress Bar */}\r\n              <div className=\"mb-3\">\r\n                <div className=\"flex justify-between text-sm text-white/70 mb-1\">\r\n                  <span>Progress</span>\r\n                  <span>{Math.round(job.progress)}%</span>\r\n                </div>\r\n                <div className=\"w-full bg-white/20 rounded-full h-2\">\r\n                  <div \r\n                    className=\"bg-gradient-to-r from-blue-500 to-purple-600 h-2 rounded-full transition-all duration-300\"\r\n                    style={{ width: `${job.progress}%` }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Errors */}\r\n              {job.errors.length > 0 && (\r\n                <div className=\"bg-red-500/10 border border-red-500/30 rounded-lg p-3\">\r\n                  <div className=\"flex items-center space-x-2 mb-2\">\r\n                    <AlertCircle className=\"h-4 w-4 text-red-400\" />\r\n                    <span className=\"text-red-400 font-medium\">Errors Found</span>\r\n                  </div>\r\n                  <ul className=\"text-red-300 text-sm space-y-1\">\r\n                    {job.errors.slice(0, 3).map((error, index) => (\r\n                      <li key={index}>• {error}</li>\r\n                    ))}\r\n                    {job.errors.length > 3 && (\r\n                      <li>• +{job.errors.length - 3} more errors...</li>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"flex justify-between text-xs text-white/50 mt-3\">\r\n                <span>Started: {job.createdAt.toLocaleString()}</span>\r\n                {job.completedAt && (\r\n                  <span>Completed: {job.completedAt.toLocaleString()}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderBackupTools = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Backup Actions */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">💾 Create Backup</h3>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <div className=\"bg-white/10 rounded-xl p-6 border border-white/20 text-center\">\r\n            <Database className=\"h-12 w-12 text-blue-400 mx-auto mb-4\" />\r\n            <h4 className=\"text-white font-semibold mb-2\">Full Backup</h4>\r\n            <p className=\"text-white/70 text-sm mb-4\">Complete system backup including all data and settings</p>\r\n            <button\r\n              onClick={() => startBackup('full')}\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-xl font-medium hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Start Full Backup\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"bg-white/10 rounded-xl p-6 border border-white/20 text-center\">\r\n            <Archive className=\"h-12 w-12 text-green-400 mx-auto mb-4\" />\r\n            <h4 className=\"text-white font-semibold mb-2\">Partial Backup</h4>\r\n            <p className=\"text-white/70 text-sm mb-4\">Backup specific data categories or date ranges</p>\r\n            <button\r\n              onClick={() => startBackup('partial')}\r\n              className=\"bg-green-600 text-white px-4 py-2 rounded-xl font-medium hover:bg-green-700 transition-colors\"\r\n            >\r\n              Start Partial Backup\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"bg-white/10 rounded-xl p-6 border border-white/20 text-center\">\r\n            <RefreshCw className=\"h-12 w-12 text-purple-400 mx-auto mb-4\" />\r\n            <h4 className=\"text-white font-semibold mb-2\">Incremental Backup</h4>\r\n            <p className=\"text-white/70 text-sm mb-4\">Backup only changes since last backup</p>\r\n            <button\r\n              onClick={() => startBackup('incremental')}\r\n              className=\"bg-purple-600 text-white px-4 py-2 rounded-xl font-medium hover:bg-purple-700 transition-colors\"\r\n            >\r\n              Start Incremental\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Backup History */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">📋 Backup History</h3>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {backupJobs.map((backup) => (\r\n            <div key={backup.id} className=\"bg-white/10 rounded-xl p-4 border border-white/20\">\r\n              <div className=\"flex items-center justify-between mb-3\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className={`p-2 rounded-xl ${\r\n                    backup.type === 'full' ? 'bg-blue-500/20' :\r\n                    backup.type === 'partial' ? 'bg-green-500/20' :\r\n                    'bg-purple-500/20'\r\n                  }`}>\r\n                    {backup.type === 'full' ? <Database className=\"h-5 w-5 text-blue-400\" /> :\r\n                     backup.type === 'partial' ? <Archive className=\"h-5 w-5 text-green-400\" /> :\r\n                     <RefreshCw className=\"h-5 w-5 text-purple-400\" />}\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <h4 className=\"text-white font-semibold\">{backup.name}</h4>\r\n                    <p className=\"text-white/60 text-sm\">\r\n                      {backup.type.charAt(0).toUpperCase() + backup.type.slice(1)} • {backup.size}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-3\">\r\n                  <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(backup.status)}`}>\r\n                    {backup.status.charAt(0).toUpperCase() + backup.status.slice(1)}\r\n                  </span>\r\n                  \r\n                  {backup.downloadUrl && backup.status === 'completed' && (\r\n                    <button className=\"p-2 text-white/60 hover:text-blue-400 hover:bg-blue-500/10 rounded-xl transition-colors\">\r\n                      <Download className=\"h-4 w-4\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex justify-between text-xs text-white/50\">\r\n                <span>Created: {backup.createdAt.toLocaleString()}</span>\r\n                {backup.expiresAt && (\r\n                  <span>Expires: {backup.expiresAt.toLocaleDateString()}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 to-purple-900 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-white mb-2\">\r\n            📊 Data Management Tools\r\n          </h1>\r\n          <p className=\"text-white/80 text-lg\">\r\n            💾 Comprehensive data export, import, and backup solutions\r\n          </p>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 mb-8\">\r\n          <div className=\"flex space-x-2\">\r\n            {[\r\n              { id: 'export', label: 'Export Data', icon: Download },\r\n              { id: 'import', label: 'Import Data', icon: Upload },\r\n              { id: 'backup', label: 'Backup & Restore', icon: Archive },\r\n              { id: 'templates', label: 'Templates', icon: Settings }\r\n            ].map(tab => {\r\n              const Icon = tab.icon\r\n              return (\r\n                <button\r\n                  key={tab.id}\r\n                  onClick={() => setActiveTab(tab.id as 'export' | 'import' | 'backup' | 'templates')}\r\n                  className={`flex items-center space-x-2 px-4 py-3 rounded-xl transition-all duration-300 ${\r\n                    activeTab === tab.id\r\n                      ? 'bg-white/30 text-white font-semibold shadow-lg'\r\n                      : 'text-white/70 hover:bg-white/20'\r\n                  }`}\r\n                >\r\n                  <Icon className=\"h-5 w-5\" />\r\n                  <span>{tab.label}</span>\r\n                </button>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"mb-8\">\r\n          {loading ? (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n              <div className=\"animate-spin h-12 w-12 border-4 border-white/30 border-t-white rounded-full\"></div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {activeTab === 'export' && renderExportTools()}\r\n              {activeTab === 'import' && renderImportTools()}\r\n              {activeTab === 'backup' && renderBackupTools()}\r\n              {activeTab === 'templates' && (\r\n                <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 text-center\">\r\n                  <Settings className=\"h-16 w-16 text-white/40 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-white/80 mb-2\">Template Management</h3>\r\n                  <p className=\"text-white/60\">Custom export templates and configurations coming soon.</p>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer Stats */}\r\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/30 text-center\">\r\n          <p className=\"text-white/60 text-sm\">\r\n            📤 {exportTemplates.reduce((sum, t) => sum + t.downloadCount, 0)} total exports | \r\n            📥 {importJobs.filter(j => j.status === 'completed').length} successful imports | \r\n            💾 {backupJobs.filter(b => b.status === 'completed').length} backups available\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataManagement"],"mappings":"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"}
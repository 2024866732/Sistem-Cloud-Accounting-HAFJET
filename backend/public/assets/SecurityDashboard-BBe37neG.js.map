{"version":3,"file":"SecurityDashboard-BBe37neG.js","names":["SecurityDashboard: React.FC"],"sources":["../../src/pages/SecurityDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { \r\n  Shield, Eye, AlertTriangle, UserCheck, Globe,\r\n  Smartphone, Key, Settings, Activity, CheckCircle,\r\n  XCircle, Clock, MapPin, Monitor, Database,\r\n  FileText, Search\r\n} from 'lucide-react'\r\n\r\ninterface SecurityEvent {\r\n  id: string\r\n  type: 'login_success' | 'login_failed' | 'password_change' | 'ip_blocked' | 'suspicious_activity' | '2fa_enabled' | 'data_access'\r\n  user: string\r\n  timestamp: Date\r\n  ipAddress: string\r\n  location: string\r\n  device: string\r\n  severity: 'low' | 'medium' | 'high' | 'critical'\r\n  details: string\r\n  status: 'resolved' | 'investigating' | 'open'\r\n}\r\n\r\ninterface SecurityPolicy {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  enabled: boolean\r\n  category: 'authentication' | 'access_control' | 'data_protection' | 'monitoring'\r\n  lastUpdated: Date\r\n  appliedTo: string[]\r\n}\r\n\r\ninterface ThreatAlert {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  severity: 'low' | 'medium' | 'high' | 'critical'\r\n  category: 'brute_force' | 'suspicious_login' | 'data_breach' | 'malware' | 'policy_violation'\r\n  timestamp: Date\r\n  affectedUsers: string[]\r\n  status: 'active' | 'resolved' | 'investigating'\r\n  recommendations: string[]\r\n}\r\n\r\ninterface SessionInfo {\r\n  id: string\r\n  userId: string\r\n  userName: string\r\n  ipAddress: string\r\n  location: string\r\n  device: string\r\n  browser: string\r\n  loginTime: Date\r\n  lastActivity: Date\r\n  status: 'active' | 'expired' | 'terminated'\r\n  is2FAEnabled: boolean\r\n}\r\n\r\nconst SecurityDashboard: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<'overview' | 'events' | 'policies' | 'threats' | 'sessions' | 'compliance'>('overview')\r\n  const [securityEvents, setSecurityEvents] = useState<SecurityEvent[]>([])\r\n  const [securityPolicies, setSecurityPolicies] = useState<SecurityPolicy[]>([])\r\n  const [threatAlerts, setThreatAlerts] = useState<ThreatAlert[]>([])\r\n  const [activeSessions, setActiveSessions] = useState<SessionInfo[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [filterSeverity, setFilterSeverity] = useState<string>('all')\r\n  const [filterTimeRange, setFilterTimeRange] = useState<string>('24h')\r\n\r\n  useEffect(() => {\r\n    const fetchSecurityData = async () => {\r\n      setLoading(true)\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n\r\n      // Mock security events\r\n      setSecurityEvents([\r\n        {\r\n          id: '1',\r\n          type: 'login_success',\r\n          user: 'Ahmad Rahman',\r\n          timestamp: new Date(Date.now() - 30 * 60 * 1000),\r\n          ipAddress: '192.168.1.100',\r\n          location: 'Kuala Lumpur, MY',\r\n          device: 'Windows 11 - Chrome',\r\n          severity: 'low',\r\n          details: 'Successful login with 2FA verification',\r\n          status: 'resolved'\r\n        },\r\n        {\r\n          id: '2',\r\n          type: 'login_failed',\r\n          user: 'Unknown',\r\n          timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n          ipAddress: '103.45.67.89',\r\n          location: 'Unknown, CN',\r\n          device: 'Unknown',\r\n          severity: 'high',\r\n          details: 'Multiple failed login attempts for admin@hafjet.com',\r\n          status: 'investigating'\r\n        },\r\n        {\r\n          id: '3',\r\n          type: 'suspicious_activity',\r\n          user: 'Siti Nurhaliza',\r\n          timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000),\r\n          ipAddress: '192.168.1.101',\r\n          location: 'Penang, MY',\r\n          device: 'iPhone 15 - Safari',\r\n          severity: 'medium',\r\n          details: 'Unusual data access pattern detected',\r\n          status: 'open'\r\n        },\r\n        {\r\n          id: '4',\r\n          type: '2fa_enabled',\r\n          user: 'David Tan',\r\n          timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000),\r\n          ipAddress: '192.168.1.102',\r\n          location: 'Johor Bahru, MY',\r\n          device: 'MacBook Pro - Safari',\r\n          severity: 'low',\r\n          details: 'Two-factor authentication enabled for account',\r\n          status: 'resolved'\r\n        },\r\n        {\r\n          id: '5',\r\n          type: 'ip_blocked',\r\n          user: 'System',\r\n          timestamp: new Date(Date.now() - 8 * 60 * 60 * 1000),\r\n          ipAddress: '45.67.89.123',\r\n          location: 'Unknown, RU',\r\n          device: 'Automated',\r\n          severity: 'critical',\r\n          details: 'IP address blocked due to repeated brute force attempts',\r\n          status: 'resolved'\r\n        }\r\n      ])\r\n\r\n      // Mock security policies\r\n      setSecurityPolicies([\r\n        {\r\n          id: '1',\r\n          name: 'Strong Password Policy',\r\n          description: 'Enforce minimum 12 characters with special characters and numbers',\r\n          enabled: true,\r\n          category: 'authentication',\r\n          lastUpdated: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\r\n          appliedTo: ['All Users']\r\n        },\r\n        {\r\n          id: '2',\r\n          name: 'Two-Factor Authentication',\r\n          description: 'Require 2FA for all administrative accounts',\r\n          enabled: true,\r\n          category: 'authentication',\r\n          lastUpdated: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000),\r\n          appliedTo: ['Administrators', 'Managers']\r\n        },\r\n        {\r\n          id: '3',\r\n          name: 'IP Whitelist Restriction',\r\n          description: 'Allow access only from approved IP addresses',\r\n          enabled: false,\r\n          category: 'access_control',\r\n          lastUpdated: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),\r\n          appliedTo: ['Finance Team']\r\n        },\r\n        {\r\n          id: '4',\r\n          name: 'Session Timeout',\r\n          description: 'Automatic logout after 30 minutes of inactivity',\r\n          enabled: true,\r\n          category: 'access_control',\r\n          lastUpdated: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\r\n          appliedTo: ['All Users']\r\n        },\r\n        {\r\n          id: '5',\r\n          name: 'Data Encryption',\r\n          description: 'Encrypt all sensitive data at rest and in transit',\r\n          enabled: true,\r\n          category: 'data_protection',\r\n          lastUpdated: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),\r\n          appliedTo: ['System Wide']\r\n        },\r\n        {\r\n          id: '6',\r\n          name: 'Audit Logging',\r\n          description: 'Log all user activities and system changes',\r\n          enabled: true,\r\n          category: 'monitoring',\r\n          lastUpdated: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),\r\n          appliedTo: ['All Users']\r\n        }\r\n      ])\r\n\r\n      // Mock threat alerts\r\n      setThreatAlerts([\r\n        {\r\n          id: '1',\r\n          title: 'Brute Force Attack Detected',\r\n          description: 'Multiple failed login attempts from IP 103.45.67.89',\r\n          severity: 'critical',\r\n          category: 'brute_force',\r\n          timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n          affectedUsers: ['admin@hafjet.com'],\r\n          status: 'investigating',\r\n          recommendations: [\r\n            'Block suspicious IP address',\r\n            'Enable account lockout policy',\r\n            'Review access logs for patterns'\r\n          ]\r\n        },\r\n        {\r\n          id: '2',\r\n          title: 'Unusual Data Access Pattern',\r\n          description: 'User accessing large amounts of financial data outside normal hours',\r\n          severity: 'medium',\r\n          category: 'suspicious_login',\r\n          timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000),\r\n          affectedUsers: ['siti.nurhaliza@hafjet.com'],\r\n          status: 'investigating',\r\n          recommendations: [\r\n            'Contact user to verify legitimate access',\r\n            'Review data access permissions',\r\n            'Monitor future activities'\r\n          ]\r\n        },\r\n        {\r\n          id: '3',\r\n          title: 'Weak Password Policy Violation',\r\n          description: '5 users still using passwords that do not meet security requirements',\r\n          severity: 'medium',\r\n          category: 'policy_violation',\r\n          timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000),\r\n          affectedUsers: ['user1@hafjet.com', 'user2@hafjet.com', 'user3@hafjet.com'],\r\n          status: 'active',\r\n          recommendations: [\r\n            'Force password reset for affected users',\r\n            'Send security awareness training',\r\n            'Implement stricter password validation'\r\n          ]\r\n        }\r\n      ])\r\n\r\n      // Mock active sessions\r\n      setActiveSessions([\r\n        {\r\n          id: '1',\r\n          userId: '1',\r\n          userName: 'Ahmad Rahman',\r\n          ipAddress: '192.168.1.100',\r\n          location: 'Kuala Lumpur, MY',\r\n          device: 'Windows 11',\r\n          browser: 'Chrome 118.0',\r\n          loginTime: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n          lastActivity: new Date(Date.now() - 5 * 60 * 1000),\r\n          status: 'active',\r\n          is2FAEnabled: true\r\n        },\r\n        {\r\n          id: '2',\r\n          userId: '2',\r\n          userName: 'Siti Nurhaliza',\r\n          ipAddress: '192.168.1.101',\r\n          location: 'Penang, MY',\r\n          device: 'iPhone 15',\r\n          browser: 'Safari 17.0',\r\n          loginTime: new Date(Date.now() - 4 * 60 * 60 * 1000),\r\n          lastActivity: new Date(Date.now() - 15 * 60 * 1000),\r\n          status: 'active',\r\n          is2FAEnabled: true\r\n        },\r\n        {\r\n          id: '3',\r\n          userId: '3',\r\n          userName: 'Lim Wei Ming',\r\n          ipAddress: '192.168.1.102',\r\n          location: 'Johor Bahru, MY',\r\n          device: 'MacBook Pro',\r\n          browser: 'Safari 17.0',\r\n          loginTime: new Date(Date.now() - 6 * 60 * 60 * 1000),\r\n          lastActivity: new Date(Date.now() - 45 * 60 * 1000),\r\n          status: 'active',\r\n          is2FAEnabled: false\r\n        }\r\n      ])\r\n\r\n      setLoading(false)\r\n    }\r\n\r\n    fetchSecurityData()\r\n  }, [])\r\n\r\n  const getEventIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'login_success': return <CheckCircle className=\"h-5 w-5 text-green-400\" />\r\n      case 'login_failed': return <XCircle className=\"h-5 w-5 text-red-400\" />\r\n      case 'password_change': return <Key className=\"h-5 w-5 text-blue-400\" />\r\n      case 'ip_blocked': return <Shield className=\"h-5 w-5 text-red-400\" />\r\n      case 'suspicious_activity': return <AlertTriangle className=\"h-5 w-5 text-yellow-400\" />\r\n      case '2fa_enabled': return <Smartphone className=\"h-5 w-5 text-green-400\" />\r\n      case 'data_access': return <Database className=\"h-5 w-5 text-blue-400\" />\r\n      default: return <Activity className=\"h-5 w-5 text-gray-400\" />\r\n    }\r\n  }\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'critical': return 'text-red-400 bg-red-500/10 border-red-500/30'\r\n      case 'high': return 'text-orange-400 bg-orange-500/10 border-orange-500/30'\r\n      case 'medium': return 'text-yellow-400 bg-yellow-500/10 border-yellow-500/30'\r\n      case 'low': return 'text-green-400 bg-green-500/10 border-green-500/30'\r\n      default: return 'text-gray-400 bg-gray-500/10 border-gray-500/30'\r\n    }\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'text-red-400 bg-red-500/10'\r\n      case 'resolved': return 'text-green-400 bg-green-500/10'\r\n      case 'investigating': return 'text-yellow-400 bg-yellow-500/10'\r\n      case 'open': return 'text-blue-400 bg-blue-500/10'\r\n      default: return 'text-gray-400 bg-gray-500/10'\r\n    }\r\n  }\r\n\r\n  const togglePolicy = (policyId: string) => {\r\n    setSecurityPolicies(prev => prev.map(policy =>\r\n      policy.id === policyId\r\n        ? { ...policy, enabled: !policy.enabled, lastUpdated: new Date() }\r\n        : policy\r\n    ))\r\n  }\r\n\r\n  const terminateSession = (sessionId: string) => {\r\n    setActiveSessions(prev => prev.map(session =>\r\n      session.id === sessionId\r\n        ? { ...session, status: 'terminated' }\r\n        : session\r\n    ))\r\n  }\r\n\r\n  const renderOverview = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Security Metrics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-white/80 text-sm\">Threat Level</p>\r\n              <p className=\"text-2xl font-bold text-yellow-400\">Medium</p>\r\n            </div>\r\n            <div className=\"p-3 bg-yellow-500/20 rounded-xl\">\r\n              <AlertTriangle className=\"h-8 w-8 text-yellow-400\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-white/80 text-sm\">Active Sessions</p>\r\n              <p className=\"text-2xl font-bold text-green-400\">{activeSessions.filter(s => s.status === 'active').length}</p>\r\n            </div>\r\n            <div className=\"p-3 bg-green-500/20 rounded-xl\">\r\n              <UserCheck className=\"h-8 w-8 text-green-400\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-white/80 text-sm\">Security Events (24h)</p>\r\n              <p className=\"text-2xl font-bold text-blue-400\">{securityEvents.length}</p>\r\n            </div>\r\n            <div className=\"p-3 bg-blue-500/20 rounded-xl\">\r\n              <Activity className=\"h-8 w-8 text-blue-400\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-white/80 text-sm\">Security Policies</p>\r\n              <p className=\"text-2xl font-bold text-purple-400\">{securityPolicies.filter(p => p.enabled).length}/{securityPolicies.length}</p>\r\n            </div>\r\n            <div className=\"p-3 bg-purple-500/20 rounded-xl\">\r\n              <Shield className=\"h-8 w-8 text-purple-400\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Active Threats */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">🚨 Active Security Threats</h3>\r\n        <div className=\"space-y-4\">\r\n          {threatAlerts.filter(alert => alert.status === 'active' || alert.status === 'investigating').slice(0, 3).map((alert) => (\r\n            <div key={alert.id} className={`p-4 rounded-xl border ${getSeverityColor(alert.severity)}`}>\r\n              <div className=\"flex items-start justify-between mb-3\">\r\n                <div>\r\n                  <h4 className=\"font-semibold text-white mb-1\">{alert.title}</h4>\r\n                  <p className=\"text-white/70 text-sm\">{alert.description}</p>\r\n                </div>\r\n                <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(alert.status)}`}>\r\n                  {alert.status.charAt(0).toUpperCase() + alert.status.slice(1)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-white/60 text-sm\">\r\n                  {alert.timestamp.toLocaleString()}\r\n                </span>\r\n                <button className=\"text-blue-400 hover:text-blue-300 text-sm font-medium\">\r\n                  Investigate →\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recent Security Events */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">📋 Recent Security Events</h3>\r\n        <div className=\"space-y-4\">\r\n          {securityEvents.slice(0, 5).map((event) => (\r\n            <div key={event.id} className=\"bg-white/10 rounded-xl p-4 border border-white/20\">\r\n              <div className=\"flex items-start space-x-4\">\r\n                {getEventIcon(event.type)}\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <h4 className=\"text-white font-semibold\">{event.user}</h4>\r\n                    <span className={`px-2 py-1 rounded-lg text-xs font-medium ${getSeverityColor(event.severity)}`}>\r\n                      {event.severity.toUpperCase()}\r\n                    </span>\r\n                  </div>\r\n                  <p className=\"text-white/70 text-sm mb-2\">{event.details}</p>\r\n                  <div className=\"flex items-center space-x-4 text-xs text-white/60\">\r\n                    <span>📍 {event.location}</span>\r\n                    <span>🌐 {event.ipAddress}</span>\r\n                    <span>⏰ {event.timestamp.toLocaleString()}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderSecurityEvents = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Filters */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\r\n          <div className=\"relative flex-1\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/60 h-4 w-4\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search events...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10 pr-4 py-2 bg-white/10 border border-white/30 rounded-xl text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-blue-500 w-full\"\r\n            />\r\n          </div>\r\n          \r\n          <select \r\n            value={filterSeverity}\r\n            onChange={(e) => setFilterSeverity(e.target.value)}\r\n            className=\"bg-white/10 border border-white/30 rounded-xl px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"all\" className=\"bg-gray-800\">All Severity</option>\r\n            <option value=\"critical\" className=\"bg-gray-800\">Critical</option>\r\n            <option value=\"high\" className=\"bg-gray-800\">High</option>\r\n            <option value=\"medium\" className=\"bg-gray-800\">Medium</option>\r\n            <option value=\"low\" className=\"bg-gray-800\">Low</option>\r\n          </select>\r\n\r\n          <select \r\n            value={filterTimeRange}\r\n            onChange={(e) => setFilterTimeRange(e.target.value)}\r\n            className=\"bg-white/10 border border-white/30 rounded-xl px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"1h\" className=\"bg-gray-800\">Last Hour</option>\r\n            <option value=\"24h\" className=\"bg-gray-800\">Last 24 Hours</option>\r\n            <option value=\"7d\" className=\"bg-gray-800\">Last 7 Days</option>\r\n            <option value=\"30d\" className=\"bg-gray-800\">Last 30 Days</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Events List */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">Security Events Log</h3>\r\n        <div className=\"space-y-4\">\r\n          {securityEvents.map((event) => (\r\n            <div key={event.id} className=\"bg-white/10 rounded-xl p-4 border border-white/20 hover:bg-white/15 transition-colors\">\r\n              <div className=\"flex items-start space-x-4\">\r\n                {getEventIcon(event.type)}\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <h4 className=\"text-white font-semibold\">{event.user}</h4>\r\n                      <span className={`px-2 py-1 rounded-lg text-xs font-medium ${getSeverityColor(event.severity)}`}>\r\n                        {event.severity.toUpperCase()}\r\n                      </span>\r\n                      <span className={`px-2 py-1 rounded-lg text-xs font-medium ${getStatusColor(event.status)}`}>\r\n                        {event.status.charAt(0).toUpperCase() + event.status.slice(1)}\r\n                      </span>\r\n                    </div>\r\n                    <button className=\"p-2 text-white/60 hover:text-blue-400 hover:bg-blue-500/10 rounded-xl transition-colors\">\r\n                      <Eye className=\"h-4 w-4\" />\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <p className=\"text-white/70 text-sm mb-3\">{event.details}</p>\r\n                  \r\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-xs text-white/60\">\r\n                    <div className=\"flex items-center space-x-1\">\r\n                      <MapPin className=\"h-3 w-3\" />\r\n                      <span>{event.location}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-1\">\r\n                      <Globe className=\"h-3 w-3\" />\r\n                      <span>{event.ipAddress}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-1\">\r\n                      <Monitor className=\"h-3 w-3\" />\r\n                      <span>{event.device}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-1\">\r\n                      <Clock className=\"h-3 w-3\" />\r\n                      <span>{event.timestamp.toLocaleString()}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderSecurityPolicies = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-xl font-bold text-white\">Security Policies Configuration</h3>\r\n          <button className=\"bg-gradient-to-r from-purple-600 to-blue-600 text-white px-4 py-2 rounded-xl font-medium hover:shadow-lg transition-all duration-300\">\r\n            <Settings className=\"inline h-4 w-4 mr-2\" />\r\n            Configure\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {securityPolicies.map((policy) => (\r\n            <div key={policy.id} className=\"bg-white/10 rounded-xl p-6 border border-white/20\">\r\n              <div className=\"flex items-start justify-between mb-4\">\r\n                <div className=\"flex-1\">\r\n                  <h4 className=\"text-white font-semibold mb-2\">{policy.name}</h4>\r\n                  <p className=\"text-white/70 text-sm mb-3\">{policy.description}</p>\r\n                  \r\n                  <div className=\"flex items-center space-x-4 text-xs text-white/60\">\r\n                    <span>Category: {policy.category.replace('_', ' ')}</span>\r\n                    <span>Updated: {policy.lastUpdated.toLocaleDateString()}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <button\r\n                  onClick={() => togglePolicy(policy.id)}\r\n                  className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                    policy.enabled ? 'bg-green-600' : 'bg-gray-600'\r\n                  }`}\r\n                >\r\n                  <span\r\n                    className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                      policy.enabled ? 'translate-x-6' : 'translate-x-1'\r\n                    }`}\r\n                  />\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <h5 className=\"text-white/80 text-sm font-medium\">Applied to:</h5>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {policy.appliedTo.map((target, index) => (\r\n                    <span key={index} className=\"px-2 py-1 bg-blue-500/20 text-blue-400 text-xs rounded-lg\">\r\n                      {target}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderActiveSessions = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">Active User Sessions</h3>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {activeSessions.filter(session => session.status === 'active').map((session) => (\r\n            <div key={session.id} className=\"bg-white/10 rounded-xl p-4 border border-white/20\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className=\"h-12 w-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold\">\r\n                    {session.userName.charAt(0)}\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <h4 className=\"text-white font-semibold\">{session.userName}</h4>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-2 text-sm text-white/70 mt-1\">\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <MapPin className=\"h-3 w-3\" />\r\n                        <span>{session.location}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <Globe className=\"h-3 w-3\" />\r\n                        <span>{session.ipAddress}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <Monitor className=\"h-3 w-3\" />\r\n                        <span>{session.device}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className=\"text-right\">\r\n                    <div className=\"flex items-center space-x-2 mb-1\">\r\n                      {session.is2FAEnabled ? (\r\n                        <Shield className=\"h-4 w-4 text-green-400\" />\r\n                      ) : (\r\n                        <AlertTriangle className=\"h-4 w-4 text-yellow-400\" />\r\n                      )}\r\n                      <span className=\"text-sm text-white/80\">\r\n                        {session.is2FAEnabled ? '2FA Enabled' : '2FA Disabled'}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"text-xs text-white/60\">\r\n                      Last activity: {Math.floor((Date.now() - session.lastActivity.getTime()) / (1000 * 60))} min ago\r\n                    </p>\r\n                  </div>\r\n                  \r\n                  <button\r\n                    onClick={() => terminateSession(session.id)}\r\n                    className=\"bg-red-600 text-white px-3 py-2 rounded-xl text-sm font-medium hover:bg-red-700 transition-colors\"\r\n                  >\r\n                    Terminate\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 to-purple-900 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-white mb-2\">\r\n            🛡️ Security Dashboard\r\n          </h1>\r\n          <p className=\"text-white/80 text-lg\">\r\n            🔒 Advanced security monitoring and threat protection for HAFJET Cloud Accounting System\r\n          </p>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 mb-8\">\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {[\r\n              { id: 'overview', label: 'Security Overview', icon: Shield },\r\n              { id: 'events', label: 'Security Events', icon: Activity },\r\n              { id: 'policies', label: 'Security Policies', icon: Settings },\r\n              { id: 'threats', label: 'Threat Alerts', icon: AlertTriangle },\r\n              { id: 'sessions', label: 'Active Sessions', icon: UserCheck },\r\n              { id: 'compliance', label: 'Compliance', icon: FileText }\r\n            ].map(tab => {\r\n              const Icon = tab.icon\r\n              return (\r\n                <button\r\n                  key={tab.id}\r\n                  onClick={() => setActiveTab(tab.id as 'overview' | 'events' | 'policies' | 'threats' | 'sessions' | 'compliance')}\r\n                  className={`flex items-center space-x-2 px-4 py-3 rounded-xl transition-all duration-300 ${\r\n                    activeTab === tab.id\r\n                      ? 'bg-white/30 text-white font-semibold shadow-lg'\r\n                      : 'text-white/70 hover:bg-white/20'\r\n                  }`}\r\n                >\r\n                  <Icon className=\"h-5 w-5\" />\r\n                  <span>{tab.label}</span>\r\n                </button>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"mb-8\">\r\n          {loading ? (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n              <div className=\"animate-spin h-12 w-12 border-4 border-white/30 border-t-white rounded-full\"></div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {activeTab === 'overview' && renderOverview()}\r\n              {activeTab === 'events' && renderSecurityEvents()}\r\n              {activeTab === 'policies' && renderSecurityPolicies()}\r\n              {activeTab === 'threats' && (\r\n                <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 text-center\">\r\n                  <AlertTriangle className=\"h-16 w-16 text-white/40 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-white/80 mb-2\">Threat Intelligence</h3>\r\n                  <p className=\"text-white/60\">Advanced threat detection and response system coming soon.</p>\r\n                </div>\r\n              )}\r\n              {activeTab === 'sessions' && renderActiveSessions()}\r\n              {activeTab === 'compliance' && (\r\n                <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 text-center\">\r\n                  <FileText className=\"h-16 w-16 text-white/40 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-white/80 mb-2\">Compliance Monitoring</h3>\r\n                  <p className=\"text-white/60\">Malaysian regulatory compliance tracking and reporting.</p>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/30 text-center\">\r\n          <p className=\"text-white/60 text-sm\">\r\n            🛡️ Security Level: Medium | \r\n            🔍 {securityEvents.length} events monitored | \r\n            🚨 {threatAlerts.filter(a => a.status === 'active').length} active threats | \r\n            👥 {activeSessions.filter(s => s.status === 'active').length} active sessions\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SecurityDashboard"],"mappings":"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"}
{"version":3,"file":"IPAccessControl-AcPPB7pf.js","names":["IPAccessControl: React.FC","rule: IPRule"],"sources":["../../src/pages/IPAccessControl.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { \r\n  Globe, Shield, Plus, Trash2, Edit3, X,\r\n  MapPin, Clock, Activity, AlertTriangle, CheckCircle,\r\n  Search, Download, Upload, Settings\r\n} from 'lucide-react'\r\n\r\ninterface IPRule {\r\n  id: string\r\n  name: string\r\n  ipAddress: string\r\n  type: 'allow' | 'block'\r\n  category: 'whitelist' | 'blacklist' | 'geofence'\r\n  description: string\r\n  createdAt: Date\r\n  lastMatched?: Date\r\n  enabled: boolean\r\n  appliedTo: string[]\r\n  priority: number\r\n}\r\n\r\ninterface AccessAttempt {\r\n  id: string\r\n  ipAddress: string\r\n  location: string\r\n  timestamp: Date\r\n  status: 'allowed' | 'blocked' | 'flagged'\r\n  userAgent: string\r\n  username?: string\r\n  reason: string\r\n  ruleId?: string\r\n}\r\n\r\ninterface GeoLocation {\r\n  country: string\r\n  region: string\r\n  city: string\r\n  countryCode: string\r\n  blocked: boolean\r\n  allowedUsers: string[]\r\n}\r\n\r\nconst IPAccessControl: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<'rules' | 'attempts' | 'geo' | 'settings'>('rules')\r\n  const [ipRules, setIPRules] = useState<IPRule[]>([])\r\n  const [accessAttempts, setAccessAttempts] = useState<AccessAttempt[]>([])\r\n  const [geoLocations, setGeoLocations] = useState<GeoLocation[]>([])\r\n  const [showAddRule, setShowAddRule] = useState(false)\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [filterType, setFilterType] = useState<string>('all')\r\n  const [filterStatus, setFilterStatus] = useState<string>('all')\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const [newRule, setNewRule] = useState({\r\n    name: '',\r\n    ipAddress: '',\r\n    type: 'allow' as 'allow' | 'block',\r\n    category: 'whitelist' as 'whitelist' | 'blacklist' | 'geofence',\r\n    description: '',\r\n    appliedTo: [] as string[],\r\n    priority: 1\r\n  })\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n\r\n      // Mock IP rules\r\n      setIPRules([\r\n        {\r\n          id: '1',\r\n          name: 'Office Network',\r\n          ipAddress: '192.168.1.0/24',\r\n          type: 'allow',\r\n          category: 'whitelist',\r\n          description: 'Main office network range',\r\n          createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),\r\n          lastMatched: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n          enabled: true,\r\n          appliedTo: ['All Users'],\r\n          priority: 1\r\n        },\r\n        {\r\n          id: '2',\r\n          name: 'Admin Home Office',\r\n          ipAddress: '203.45.67.89',\r\n          type: 'allow',\r\n          category: 'whitelist',\r\n          description: 'Administrator home office IP',\r\n          createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000),\r\n          lastMatched: new Date(Date.now() - 4 * 60 * 60 * 1000),\r\n          enabled: true,\r\n          appliedTo: ['Administrators'],\r\n          priority: 2\r\n        },\r\n        {\r\n          id: '3',\r\n          name: 'Suspicious China IP Range',\r\n          ipAddress: '103.45.0.0/16',\r\n          type: 'block',\r\n          category: 'blacklist',\r\n          description: 'Known malicious IP range from threat intelligence',\r\n          createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\r\n          lastMatched: new Date(Date.now() - 6 * 60 * 60 * 1000),\r\n          enabled: true,\r\n          appliedTo: ['All Users'],\r\n          priority: 1\r\n        },\r\n        {\r\n          id: '4',\r\n          name: 'VPN Exit Nodes',\r\n          ipAddress: '45.67.89.0/24',\r\n          type: 'block',\r\n          category: 'blacklist',\r\n          description: 'Block known VPN exit nodes',\r\n          createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),\r\n          enabled: false,\r\n          appliedTo: ['Finance Team'],\r\n          priority: 3\r\n        },\r\n        {\r\n          id: '5',\r\n          name: 'Malaysia Only Access',\r\n          ipAddress: 'MY',\r\n          type: 'allow',\r\n          category: 'geofence',\r\n          description: 'Allow access only from Malaysia',\r\n          createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\r\n          enabled: true,\r\n          appliedTo: ['Finance Team', 'Accounting'],\r\n          priority: 2\r\n        }\r\n      ])\r\n\r\n      // Mock access attempts\r\n      setAccessAttempts([\r\n        {\r\n          id: '1',\r\n          ipAddress: '192.168.1.100',\r\n          location: 'Kuala Lumpur, MY',\r\n          timestamp: new Date(Date.now() - 30 * 60 * 1000),\r\n          status: 'allowed',\r\n          userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\r\n          username: 'ahmad.rahman@hafjet.com',\r\n          reason: 'Matched whitelist rule: Office Network'\r\n        },\r\n        {\r\n          id: '2',\r\n          ipAddress: '103.45.67.89',\r\n          location: 'Unknown, CN',\r\n          timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n          status: 'blocked',\r\n          userAgent: 'curl/7.68.0',\r\n          reason: 'Matched blacklist rule: Suspicious China IP Range',\r\n          ruleId: '3'\r\n        },\r\n        {\r\n          id: '3',\r\n          ipAddress: '203.45.67.89',\r\n          location: 'Petaling Jaya, MY',\r\n          timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000),\r\n          status: 'allowed',\r\n          userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',\r\n          username: 'siti.nurhaliza@hafjet.com',\r\n          reason: 'Matched whitelist rule: Admin Home Office',\r\n          ruleId: '2'\r\n        },\r\n        {\r\n          id: '4',\r\n          ipAddress: '45.67.89.123',\r\n          location: 'Unknown, RU',\r\n          timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000),\r\n          status: 'blocked',\r\n          userAgent: 'python-requests/2.25.1',\r\n          reason: 'No matching allow rule found',\r\n          ruleId: '4'\r\n        },\r\n        {\r\n          id: '5',\r\n          ipAddress: '172.16.1.50',\r\n          location: 'Johor Bahru, MY',\r\n          timestamp: new Date(Date.now() - 8 * 60 * 60 * 1000),\r\n          status: 'flagged',\r\n          userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X)',\r\n          username: 'lim.weiming@hafjet.com',\r\n          reason: 'Access from new location'\r\n        }\r\n      ])\r\n\r\n      // Mock geo locations\r\n      setGeoLocations([\r\n        {\r\n          country: 'Malaysia',\r\n          region: 'Southeast Asia',\r\n          city: 'Kuala Lumpur',\r\n          countryCode: 'MY',\r\n          blocked: false,\r\n          allowedUsers: ['All Users']\r\n        },\r\n        {\r\n          country: 'Singapore',\r\n          region: 'Southeast Asia',\r\n          city: 'Singapore',\r\n          countryCode: 'SG',\r\n          blocked: false,\r\n          allowedUsers: ['Administrators']\r\n        },\r\n        {\r\n          country: 'China',\r\n          region: 'East Asia',\r\n          city: 'Various',\r\n          countryCode: 'CN',\r\n          blocked: true,\r\n          allowedUsers: []\r\n        },\r\n        {\r\n          country: 'Russia',\r\n          region: 'Eastern Europe',\r\n          city: 'Various',\r\n          countryCode: 'RU',\r\n          blocked: true,\r\n          allowedUsers: []\r\n        }\r\n      ])\r\n\r\n      setLoading(false)\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleAddRule = () => {\r\n    if (!newRule.name || !newRule.ipAddress) return\r\n\r\n    const rule: IPRule = {\r\n      id: Date.now().toString(),\r\n      ...newRule,\r\n      createdAt: new Date(),\r\n      enabled: true\r\n    }\r\n\r\n    setIPRules(prev => [rule, ...prev])\r\n    setNewRule({\r\n      name: '',\r\n      ipAddress: '',\r\n      type: 'allow',\r\n      category: 'whitelist',\r\n      description: '',\r\n      appliedTo: [],\r\n      priority: 1\r\n    })\r\n    setShowAddRule(false)\r\n  }\r\n\r\n  const handleDeleteRule = (ruleId: string) => {\r\n    setIPRules(prev => prev.filter(rule => rule.id !== ruleId))\r\n  }\r\n\r\n  const toggleRule = (ruleId: string) => {\r\n    setIPRules(prev => prev.map(rule =>\r\n      rule.id === ruleId\r\n        ? { ...rule, enabled: !rule.enabled }\r\n        : rule\r\n    ))\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'allowed': return 'text-green-400 bg-green-500/10'\r\n      case 'blocked': return 'text-red-400 bg-red-500/10'\r\n      case 'flagged': return 'text-yellow-400 bg-yellow-500/10'\r\n      default: return 'text-gray-400 bg-gray-500/10'\r\n    }\r\n  }\r\n\r\n  const getRuleTypeColor = (type: string) => {\r\n    switch (type) {\r\n      case 'allow': return 'text-green-400 bg-green-500/10'\r\n      case 'block': return 'text-red-400 bg-red-500/10'\r\n      default: return 'text-gray-400 bg-gray-500/10'\r\n    }\r\n  }\r\n\r\n  const getCategoryIcon = (category: string) => {\r\n    switch (category) {\r\n      case 'whitelist': return <CheckCircle className=\"h-4 w-4 text-green-400\" />\r\n      case 'blacklist': return <X className=\"h-4 w-4 text-red-400\" />\r\n      case 'geofence': return <MapPin className=\"h-4 w-4 text-blue-400\" />\r\n      default: return <Shield className=\"h-4 w-4 text-gray-400\" />\r\n    }\r\n  }\r\n\r\n  const filteredRules = ipRules.filter(rule => {\r\n    const matchesSearch = rule.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         rule.ipAddress.toLowerCase().includes(searchTerm.toLowerCase())\r\n    const matchesType = filterType === 'all' || rule.type === filterType\r\n    return matchesSearch && matchesType\r\n  })\r\n\r\n  const filteredAttempts = accessAttempts.filter(attempt => {\r\n    const matchesSearch = attempt.ipAddress.includes(searchTerm) ||\r\n                         attempt.location.toLowerCase().includes(searchTerm.toLowerCase())\r\n    const matchesStatus = filterStatus === 'all' || attempt.status === filterStatus\r\n    return matchesSearch && matchesStatus\r\n  })\r\n\r\n  const renderIPRules = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Controls */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\r\n          <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/60 h-4 w-4\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search rules...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 bg-white/10 border border-white/30 rounded-xl text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            \r\n            <select \r\n              value={filterType}\r\n              onChange={(e) => setFilterType(e.target.value)}\r\n              className=\"bg-white/10 border border-white/30 rounded-xl px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"all\" className=\"bg-gray-800\">All Types</option>\r\n              <option value=\"allow\" className=\"bg-gray-800\">Allow Rules</option>\r\n              <option value=\"block\" className=\"bg-gray-800\">Block Rules</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3\">\r\n            <button className=\"bg-blue-600 text-white px-4 py-2 rounded-xl font-medium hover:bg-blue-700 transition-colors\">\r\n              <Upload className=\"inline h-4 w-4 mr-2\" />\r\n              Import\r\n            </button>\r\n            <button className=\"bg-green-600 text-white px-4 py-2 rounded-xl font-medium hover:bg-green-700 transition-colors\">\r\n              <Download className=\"inline h-4 w-4 mr-2\" />\r\n              Export\r\n            </button>\r\n            <button \r\n              onClick={() => setShowAddRule(true)}\r\n              className=\"bg-gradient-to-r from-purple-600 to-blue-600 text-white px-4 py-2 rounded-xl font-medium hover:shadow-lg transition-all duration-300\"\r\n            >\r\n              <Plus className=\"inline h-4 w-4 mr-2\" />\r\n              Add Rule\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add Rule Modal */}\r\n      {showAddRule && (\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n          <h3 className=\"text-xl font-bold text-white mb-6\">Add New IP Rule</h3>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label className=\"block text-white/80 text-sm font-medium mb-2\">Rule Name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newRule.name}\r\n                onChange={(e) => setNewRule(prev => ({ ...prev, name: e.target.value }))}\r\n                placeholder=\"Enter rule name\"\r\n                className=\"w-full bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-white/80 text-sm font-medium mb-2\">IP Address/Range</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newRule.ipAddress}\r\n                onChange={(e) => setNewRule(prev => ({ ...prev, ipAddress: e.target.value }))}\r\n                placeholder=\"192.168.1.0/24 or 203.45.67.89\"\r\n                className=\"w-full bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-white/80 text-sm font-medium mb-2\">Action</label>\r\n              <select \r\n                value={newRule.type}\r\n                onChange={(e) => setNewRule(prev => ({ ...prev, type: e.target.value as 'allow' | 'block' }))}\r\n                className=\"w-full bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"allow\" className=\"bg-gray-800\">Allow</option>\r\n                <option value=\"block\" className=\"bg-gray-800\">Block</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-white/80 text-sm font-medium mb-2\">Category</label>\r\n              <select \r\n                value={newRule.category}\r\n                onChange={(e) => setNewRule(prev => ({ ...prev, category: e.target.value as 'whitelist' | 'blacklist' | 'geofence' }))}\r\n                className=\"w-full bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"whitelist\" className=\"bg-gray-800\">Whitelist</option>\r\n                <option value=\"blacklist\" className=\"bg-gray-800\">Blacklist</option>\r\n                <option value=\"geofence\" className=\"bg-gray-800\">Geo-fence</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mt-6\">\r\n            <label className=\"block text-white/80 text-sm font-medium mb-2\">Description</label>\r\n            <textarea\r\n              value={newRule.description}\r\n              onChange={(e) => setNewRule(prev => ({ ...prev, description: e.target.value }))}\r\n              placeholder=\"Enter rule description\"\r\n              rows={3}\r\n              className=\"w-full bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex space-x-3 mt-6\">\r\n            <button\r\n              onClick={() => setShowAddRule(false)}\r\n              className=\"flex-1 bg-gray-600 text-white py-3 rounded-xl font-medium hover:bg-gray-700 transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={handleAddRule}\r\n              className=\"flex-1 bg-green-600 text-white py-3 rounded-xl font-medium hover:bg-green-700 transition-colors\"\r\n            >\r\n              Add Rule\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Rules List */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">IP Access Rules</h3>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {filteredRules.map((rule) => (\r\n            <div key={rule.id} className=\"bg-white/10 rounded-xl p-4 border border-white/20\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {getCategoryIcon(rule.category)}\r\n                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${getRuleTypeColor(rule.type)}`}>\r\n                      {rule.type.toUpperCase()}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <h4 className=\"text-white font-semibold\">{rule.name}</h4>\r\n                    <div className=\"flex items-center space-x-4 text-sm text-white/70 mt-1\">\r\n                      <span className=\"flex items-center space-x-1\">\r\n                        <Globe className=\"h-3 w-3\" />\r\n                        <span>{rule.ipAddress}</span>\r\n                      </span>\r\n                      <span className=\"flex items-center space-x-1\">\r\n                        <Clock className=\"h-3 w-3\" />\r\n                        <span>Created {rule.createdAt.toLocaleDateString()}</span>\r\n                      </span>\r\n                      {rule.lastMatched && (\r\n                        <span className=\"flex items-center space-x-1\">\r\n                          <Activity className=\"h-3 w-3\" />\r\n                          <span>Last match {rule.lastMatched.toLocaleString()}</span>\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    {rule.description && (\r\n                      <p className=\"text-white/60 text-sm mt-1\">{rule.description}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-3\">\r\n                  <button\r\n                    onClick={() => toggleRule(rule.id)}\r\n                    className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                      rule.enabled ? 'bg-green-600' : 'bg-gray-600'\r\n                    }`}\r\n                  >\r\n                    <span\r\n                      className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                        rule.enabled ? 'translate-x-6' : 'translate-x-1'\r\n                      }`}\r\n                    />\r\n                  </button>\r\n                  \r\n                  <button className=\"p-2 text-white/60 hover:text-blue-400 hover:bg-blue-500/10 rounded-xl transition-colors\">\r\n                    <Edit3 className=\"h-4 w-4\" />\r\n                  </button>\r\n                  \r\n                  <button \r\n                    onClick={() => handleDeleteRule(rule.id)}\r\n                    className=\"p-2 text-white/60 hover:text-red-400 hover:bg-red-500/10 rounded-xl transition-colors\"\r\n                  >\r\n                    <Trash2 className=\"h-4 w-4\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"mt-3 pt-3 border-t border-white/20\">\r\n                <div className=\"flex justify-between text-sm\">\r\n                  <span className=\"text-white/60\">Applied to:</span>\r\n                  <div className=\"flex flex-wrap gap-1\">\r\n                    {rule.appliedTo.map((target, index) => (\r\n                      <span key={index} className=\"px-2 py-1 bg-blue-500/20 text-blue-400 text-xs rounded-lg\">\r\n                        {target}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderAccessAttempts = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Filters */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\r\n          <div className=\"relative flex-1\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/60 h-4 w-4\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search attempts...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10 pr-4 py-2 bg-white/10 border border-white/30 rounded-xl text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-blue-500 w-full\"\r\n            />\r\n          </div>\r\n          \r\n          <select \r\n            value={filterStatus}\r\n            onChange={(e) => setFilterStatus(e.target.value)}\r\n            className=\"bg-white/10 border border-white/30 rounded-xl px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"all\" className=\"bg-gray-800\">All Status</option>\r\n            <option value=\"allowed\" className=\"bg-gray-800\">Allowed</option>\r\n            <option value=\"blocked\" className=\"bg-gray-800\">Blocked</option>\r\n            <option value=\"flagged\" className=\"bg-gray-800\">Flagged</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Attempts List */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">Access Attempts Log</h3>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {filteredAttempts.map((attempt) => (\r\n            <div key={attempt.id} className=\"bg-white/10 rounded-xl p-4 border border-white/20\">\r\n              <div className=\"flex items-start justify-between\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center space-x-3 mb-2\">\r\n                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(attempt.status)}`}>\r\n                      {attempt.status.toUpperCase()}\r\n                    </span>\r\n                    <span className=\"text-white font-semibold\">{attempt.ipAddress}</span>\r\n                    <span className=\"text-white/60 text-sm\">{attempt.location}</span>\r\n                  </div>\r\n                  \r\n                  {attempt.username && (\r\n                    <p className=\"text-white/80 text-sm mb-1\">User: {attempt.username}</p>\r\n                  )}\r\n                  \r\n                  <p className=\"text-white/70 text-sm mb-2\">{attempt.reason}</p>\r\n                  \r\n                  <div className=\"flex items-center space-x-4 text-xs text-white/60\">\r\n                    <span>📅 {attempt.timestamp.toLocaleString()}</span>\r\n                    <span>🌐 {attempt.userAgent.slice(0, 50)}...</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <button className=\"p-2 text-white/60 hover:text-blue-400 hover:bg-blue-500/10 rounded-xl transition-colors\">\r\n                  <Settings className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 to-purple-900 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-white mb-2\">\r\n            🌐 IP Access Control\r\n          </h1>\r\n          <p className=\"text-white/80 text-lg\">\r\n            🔒 Manage IP restrictions and geographic access controls\r\n          </p>\r\n        </div>\r\n\r\n        {/* Stats */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n          <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-white/80 text-sm\">Active Rules</p>\r\n                <p className=\"text-2xl font-bold text-blue-400\">{ipRules.filter(r => r.enabled).length}</p>\r\n              </div>\r\n              <Shield className=\"h-8 w-8 text-blue-400\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-white/80 text-sm\">Blocked Today</p>\r\n                <p className=\"text-2xl font-bold text-red-400\">{accessAttempts.filter(a => a.status === 'blocked').length}</p>\r\n              </div>\r\n              <X className=\"h-8 w-8 text-red-400\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-white/80 text-sm\">Allowed Today</p>\r\n                <p className=\"text-2xl font-bold text-green-400\">{accessAttempts.filter(a => a.status === 'allowed').length}</p>\r\n              </div>\r\n              <CheckCircle className=\"h-8 w-8 text-green-400\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-white/80 text-sm\">Flagged</p>\r\n                <p className=\"text-2xl font-bold text-yellow-400\">{accessAttempts.filter(a => a.status === 'flagged').length}</p>\r\n              </div>\r\n              <AlertTriangle className=\"h-8 w-8 text-yellow-400\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 mb-8\">\r\n          <div className=\"flex space-x-2\">\r\n            {[\r\n              { id: 'rules', label: 'IP Rules', icon: Shield },\r\n              { id: 'attempts', label: 'Access Attempts', icon: Activity },\r\n              { id: 'geo', label: 'Geographic Control', icon: MapPin },\r\n              { id: 'settings', label: 'Settings', icon: Settings }\r\n            ].map(tab => {\r\n              const Icon = tab.icon\r\n              return (\r\n                <button\r\n                  key={tab.id}\r\n                  onClick={() => setActiveTab(tab.id as 'rules' | 'attempts' | 'geo' | 'settings')}\r\n                  className={`flex items-center space-x-2 px-4 py-3 rounded-xl transition-all duration-300 ${\r\n                    activeTab === tab.id\r\n                      ? 'bg-white/30 text-white font-semibold shadow-lg'\r\n                      : 'text-white/70 hover:bg-white/20'\r\n                  }`}\r\n                >\r\n                  <Icon className=\"h-5 w-5\" />\r\n                  <span>{tab.label}</span>\r\n                </button>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"mb-8\">\r\n          {loading ? (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n              <div className=\"animate-spin h-12 w-12 border-4 border-white/30 border-t-white rounded-full\"></div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {activeTab === 'rules' && renderIPRules()}\r\n              {activeTab === 'attempts' && renderAccessAttempts()}\r\n              {activeTab === 'geo' && (\r\n                <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 text-center\">\r\n                  <MapPin className=\"h-16 w-16 text-white/40 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-white/80 mb-2\">Geographic Controls</h3>\r\n                  <p className=\"text-white/60\">Country and region-based access controls coming soon.</p>\r\n                </div>\r\n              )}\r\n              {activeTab === 'settings' && (\r\n                <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 text-center\">\r\n                  <Settings className=\"h-16 w-16 text-white/40 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-white/80 mb-2\">Access Control Settings</h3>\r\n                  <p className=\"text-white/60\">Advanced configuration options for IP access control.</p>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/30 text-center\">\r\n          <p className=\"text-white/60 text-sm\">\r\n            🛡️ {ipRules.filter(r => r.enabled).length} active rules | \r\n            🚫 {accessAttempts.filter(a => a.status === 'blocked').length} blocked attempts | \r\n            ✅ {accessAttempts.filter(a => a.status === 'allowed').length} allowed connections | \r\n            📍 {geoLocations.filter(g => !g.blocked).length} allowed countries\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IPAccessControl"],"mappings":"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"}
{"version":3,"file":"TwoFactorAuth-Cmty12jY.js","names":["TwoFactorAuth: React.FC"],"sources":["../../src/pages/TwoFactorAuth.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { \r\n  Smartphone, Shield, Key, QrCode, Copy, Check,\r\n  AlertCircle, CheckCircle, Download,\r\n  Mail, MessageSquare\r\n} from 'lucide-react'\r\n\r\ninterface TwoFactorMethod {\r\n  id: string\r\n  name: string\r\n  type: 'authenticator' | 'sms' | 'email' | 'backup_codes'\r\n  description: string\r\n  icon: React.ReactNode\r\n  enabled: boolean\r\n  lastUsed?: Date\r\n  setupRequired: boolean\r\n}\r\n\r\ninterface BackupCode {\r\n  code: string\r\n  used: boolean\r\n  usedAt?: Date\r\n}\r\n\r\nconst TwoFactorAuth: React.FC = () => {\r\n  const [activeMethod, setActiveMethod] = useState<string>('authenticator')\r\n  const [setupStep, setSetupStep] = useState<'select' | 'setup' | 'verify' | 'complete'>('select')\r\n  const [secretKey, setSecretKey] = useState<string>('')\r\n  const [verificationCode, setVerificationCode] = useState<string>('')\r\n  const [backupCodes, setBackupCodes] = useState<BackupCode[]>([])\r\n  const [isVerifying, setIsVerifying] = useState(false)\r\n  const [copied, setCopied] = useState<string>('')\r\n  const [methods, setMethods] = useState<TwoFactorMethod[]>([])\r\n\r\n  useEffect(() => {\r\n    // Initialize 2FA methods\r\n    setMethods([\r\n      {\r\n        id: 'authenticator',\r\n        name: 'Authenticator App',\r\n        type: 'authenticator',\r\n        description: 'Use Google Authenticator, Authy, or similar apps',\r\n        icon: <Smartphone className=\"h-6 w-6\" />,\r\n        enabled: false,\r\n        setupRequired: true\r\n      },\r\n      {\r\n        id: 'sms',\r\n        name: 'SMS Text Message',\r\n        type: 'sms',\r\n        description: 'Receive codes via SMS to your phone',\r\n        icon: <MessageSquare className=\"h-6 w-6\" />,\r\n        enabled: false,\r\n        setupRequired: true\r\n      },\r\n      {\r\n        id: 'email',\r\n        name: 'Email Verification',\r\n        type: 'email',\r\n        description: 'Receive codes via email',\r\n        icon: <Mail className=\"h-6 w-6\" />,\r\n        enabled: true,\r\n        lastUsed: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n        setupRequired: false\r\n      },\r\n      {\r\n        id: 'backup_codes',\r\n        name: 'Backup Codes',\r\n        type: 'backup_codes',\r\n        description: 'One-time use codes for emergency access',\r\n        icon: <Key className=\"h-6 w-6\" />,\r\n        enabled: false,\r\n        setupRequired: true\r\n      }\r\n    ])\r\n\r\n    // Generate mock secret\r\n    setSecretKey('JBSWY3DPEHPK3PXP')\r\n\r\n    // Generate backup codes\r\n    setBackupCodes([\r\n      { code: '98765432', used: false },\r\n      { code: '87654321', used: false },\r\n      { code: '76543210', used: false },\r\n      { code: '65432109', used: false },\r\n      { code: '54321098', used: false },\r\n      { code: '43210987', used: true, usedAt: new Date(Date.now() - 24 * 60 * 60 * 1000) },\r\n      { code: '32109876', used: false },\r\n      { code: '21098765', used: false },\r\n      { code: '10987654', used: false },\r\n      { code: '09876543', used: false }\r\n    ])\r\n  }, [])\r\n\r\n  const copyToClipboard = async (text: string, type: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text)\r\n      setCopied(type)\r\n      setTimeout(() => setCopied(''), 2000)\r\n    } catch (err) {\r\n      console.error('Failed to copy:', err)\r\n    }\r\n  }\r\n\r\n  const handleSetupMethod = (methodId: string) => {\r\n    setActiveMethod(methodId)\r\n    setSetupStep('setup')\r\n  }\r\n\r\n  const handleVerifyCode = async () => {\r\n    if (verificationCode.length !== 6) return\r\n\r\n    setIsVerifying(true)\r\n    // Simulate verification\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n    \r\n    // Update method as enabled\r\n    setMethods(prev => prev.map(method =>\r\n      method.id === activeMethod\r\n        ? { ...method, enabled: true, setupRequired: false, lastUsed: new Date() }\r\n        : method\r\n    ))\r\n    \r\n    setIsVerifying(false)\r\n    setSetupStep('complete')\r\n  }\r\n\r\n  const generateNewBackupCodes = () => {\r\n    const newCodes = Array.from({ length: 10 }, () => ({\r\n      code: Math.random().toString().slice(2, 10),\r\n      used: false\r\n    }))\r\n    setBackupCodes(newCodes)\r\n  }\r\n\r\n  const downloadBackupCodes = () => {\r\n    const codesText = backupCodes\r\n      .map(backup => `${backup.code}${backup.used ? ' (USED)' : ''}`)\r\n      .join('\\n')\r\n    \r\n    const blob = new Blob([`HAFJET Cloud Accounting System Backup Codes\\n\\n${codesText}\\n\\nKeep these codes safe and secure!`], {\r\n      type: 'text/plain'\r\n    })\r\n    \r\n    const url = URL.createObjectURL(blob)\r\n    const a = document.createElement('a')\r\n    a.href = url\r\n    a.download = 'hafjet-bukku-backup-codes.txt'\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n    URL.revokeObjectURL(url)\r\n  }\r\n\r\n  const toggleMethod = (methodId: string) => {\r\n    setMethods(prev => prev.map(method =>\r\n      method.id === methodId\r\n        ? { ...method, enabled: !method.enabled }\r\n        : method\r\n    ))\r\n  }\r\n\r\n  const renderMethodSelection = () => (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n      {methods.map((method) => (\r\n        <div key={method.id} className=\"bg-white/10 rounded-xl p-6 border border-white/20\">\r\n          <div className=\"flex items-start justify-between mb-4\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"p-3 bg-blue-500/20 rounded-xl text-blue-400\">\r\n                {method.icon}\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-white font-semibold\">{method.name}</h3>\r\n                <p className=\"text-white/70 text-sm\">{method.description}</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center space-x-2\">\r\n              {method.enabled ? (\r\n                <span className=\"flex items-center space-x-1 text-green-400 text-sm\">\r\n                  <CheckCircle className=\"h-4 w-4\" />\r\n                  <span>Enabled</span>\r\n                </span>\r\n              ) : (\r\n                <span className=\"text-gray-400 text-sm\">Disabled</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {method.lastUsed && (\r\n            <p className=\"text-white/60 text-xs mb-4\">\r\n              Last used: {method.lastUsed.toLocaleString()}\r\n            </p>\r\n          )}\r\n          \r\n          <div className=\"flex space-x-3\">\r\n            {method.setupRequired ? (\r\n              <button\r\n                onClick={() => handleSetupMethod(method.id)}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-xl text-sm font-medium hover:bg-blue-700 transition-colors\"\r\n              >\r\n                Set Up\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={() => toggleMethod(method.id)}\r\n                className={`px-4 py-2 rounded-xl text-sm font-medium transition-colors ${\r\n                  method.enabled\r\n                    ? 'bg-red-600 text-white hover:bg-red-700'\r\n                    : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                {method.enabled ? 'Disable' : 'Enable'}\r\n              </button>\r\n            )}\r\n            \r\n            {method.type === 'backup_codes' && (\r\n              <button\r\n                onClick={downloadBackupCodes}\r\n                className=\"bg-purple-600 text-white px-4 py-2 rounded-xl text-sm font-medium hover:bg-purple-700 transition-colors\"\r\n              >\r\n                <Download className=\"inline h-4 w-4 mr-1\" />\r\n                Download\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n\r\n  const renderAuthenticatorSetup = () => (\r\n    <div className=\"max-w-2xl mx-auto\">\r\n      <div className=\"bg-white/10 rounded-xl p-8 border border-white/20\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6 text-center\">\r\n          Set up Authenticator App\r\n        </h3>\r\n        \r\n        <div className=\"space-y-6\">\r\n          <div className=\"text-center\">\r\n            <div className=\"bg-white p-4 rounded-xl inline-block mb-4\">\r\n              <QrCode className=\"h-32 w-32 text-gray-800\" />\r\n            </div>\r\n            <p className=\"text-white/80 text-sm\">\r\n              Scan this QR code with your authenticator app\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-white/80 text-sm font-medium mb-2\">\r\n                Or enter this key manually:\r\n              </label>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={secretKey}\r\n                  readOnly\r\n                  className=\"flex-1 bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white focus:outline-none\"\r\n                />\r\n                <button\r\n                  onClick={() => copyToClipboard(secretKey, 'secret')}\r\n                  className=\"p-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors\"\r\n                >\r\n                  {copied === 'secret' ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-white/80 text-sm font-medium mb-2\">\r\n                Enter verification code:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={verificationCode}\r\n                onChange={(e) => setVerificationCode(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n                placeholder=\"000000\"\r\n                className=\"w-full bg-white/10 border border-white/30 rounded-xl px-4 py-3 text-white text-center text-lg tracking-widest focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex space-x-4\">\r\n            <button\r\n              onClick={() => setSetupStep('select')}\r\n              className=\"flex-1 bg-gray-600 text-white py-3 rounded-xl font-medium hover:bg-gray-700 transition-colors\"\r\n            >\r\n              Back\r\n            </button>\r\n            <button\r\n              onClick={handleVerifyCode}\r\n              disabled={verificationCode.length !== 6 || isVerifying}\r\n              className=\"flex-1 bg-green-600 text-white py-3 rounded-xl font-medium hover:bg-green-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isVerifying ? (\r\n                <div className=\"flex items-center justify-center space-x-2\">\r\n                  <div className=\"animate-spin h-4 w-4 border-2 border-white/30 border-t-white rounded-full\"></div>\r\n                  <span>Verifying...</span>\r\n                </div>\r\n              ) : (\r\n                'Verify & Enable'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderComplete = () => (\r\n    <div className=\"max-w-md mx-auto text-center\">\r\n      <div className=\"bg-green-500/20 border border-green-500/30 rounded-xl p-8\">\r\n        <CheckCircle className=\"h-16 w-16 text-green-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-xl font-bold text-white mb-2\">Setup Complete!</h3>\r\n        <p className=\"text-white/80 mb-6\">\r\n          Two-factor authentication has been enabled for your account.\r\n        </p>\r\n        \r\n        <div className=\"space-y-4\">\r\n          <button\r\n            onClick={generateNewBackupCodes}\r\n            className=\"w-full bg-blue-600 text-white py-3 rounded-xl font-medium hover:bg-blue-700 transition-colors\"\r\n          >\r\n            Generate Backup Codes\r\n          </button>\r\n          \r\n          <button\r\n            onClick={() => setSetupStep('select')}\r\n            className=\"w-full bg-gray-600 text-white py-3 rounded-xl font-medium hover:bg-gray-700 transition-colors\"\r\n          >\r\n            Back to Settings\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderBackupCodes = () => (\r\n    <div className=\"max-w-2xl mx-auto\">\r\n      <div className=\"bg-white/10 rounded-xl p-6 border border-white/20\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-xl font-bold text-white\">Backup Codes</h3>\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              onClick={generateNewBackupCodes}\r\n              className=\"bg-yellow-600 text-white px-4 py-2 rounded-xl text-sm font-medium hover:bg-yellow-700 transition-colors\"\r\n            >\r\n              Generate New\r\n            </button>\r\n            <button\r\n              onClick={downloadBackupCodes}\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-xl text-sm font-medium hover:bg-blue-700 transition-colors\"\r\n            >\r\n              <Download className=\"inline h-4 w-4 mr-1\" />\r\n              Download\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"bg-yellow-500/10 border border-yellow-500/30 rounded-xl p-4 mb-6\">\r\n          <div className=\"flex items-start space-x-3\">\r\n            <AlertCircle className=\"h-5 w-5 text-yellow-400 mt-0.5\" />\r\n            <div>\r\n              <p className=\"text-yellow-400 font-medium text-sm\">Important:</p>\r\n              <p className=\"text-yellow-300 text-sm\">\r\n                Each backup code can only be used once. Store them securely and don't share them.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          {backupCodes.map((backup, index) => (\r\n            <div\r\n              key={index}\r\n              className={`p-3 rounded-xl border font-mono text-center ${\r\n                backup.used\r\n                  ? 'bg-red-500/10 border-red-500/30 text-red-400 line-through'\r\n                  : 'bg-green-500/10 border-green-500/30 text-green-400'\r\n              }`}\r\n            >\r\n              {backup.code}\r\n              {backup.used && backup.usedAt && (\r\n                <p className=\"text-xs text-red-300 mt-1\">\r\n                  Used {backup.usedAt.toLocaleDateString()}\r\n                </p>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        <div className=\"mt-6 text-center\">\r\n          <p className=\"text-white/60 text-sm\">\r\n            {backupCodes.filter(b => !b.used).length} of {backupCodes.length} codes remaining\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 to-purple-900 p-6\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-white mb-2\">\r\n            🔐 Two-Factor Authentication\r\n          </h1>\r\n          <p className=\"text-white/80 text-lg\">\r\n            🛡️ Enhance your account security with additional verification methods\r\n          </p>\r\n        </div>\r\n\r\n        {/* Security Status */}\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 mb-8\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"p-3 bg-green-500/20 rounded-xl\">\r\n                <Shield className=\"h-8 w-8 text-green-400\" />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-white font-semibold\">Security Status</h3>\r\n                <p className=\"text-white/70\">\r\n                  {methods.filter(m => m.enabled).length} of {methods.length} methods enabled\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"text-right\">\r\n                <p className=\"text-white font-semibold\">\r\n                  {methods.some(m => m.enabled) ? 'Protected' : 'Vulnerable'}\r\n                </p>\r\n                <p className=\"text-white/60 text-sm\">Account Security</p>\r\n              </div>\r\n              \r\n              <div className={`h-3 w-3 rounded-full ${\r\n                methods.filter(m => m.enabled).length >= 2 ? 'bg-green-400' :\r\n                methods.some(m => m.enabled) ? 'bg-yellow-400' : 'bg-red-400'\r\n              }`}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-8 border border-white/30\">\r\n          {setupStep === 'select' && (\r\n            <div>\r\n              <h2 className=\"text-2xl font-bold text-white mb-6\">Choose Authentication Methods</h2>\r\n              {renderMethodSelection()}\r\n            </div>\r\n          )}\r\n          \r\n          {setupStep === 'setup' && activeMethod === 'authenticator' && renderAuthenticatorSetup()}\r\n          {setupStep === 'complete' && renderComplete()}\r\n          \r\n          {activeMethod === 'backup_codes' && setupStep === 'select' && renderBackupCodes()}\r\n        </div>\r\n\r\n        {/* Quick Actions */}\r\n        {setupStep === 'select' && (\r\n          <div className=\"mt-8 bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/30 text-center\">\r\n            <p className=\"text-white/60 text-sm\">\r\n              🔒 Enable at least 2 methods for optimal security | \r\n              📱 Authenticator apps are recommended | \r\n              💾 Always keep backup codes safe\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TwoFactorAuth"],"mappings":"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"}
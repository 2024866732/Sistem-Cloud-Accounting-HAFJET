{"version":3,"mappings":"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","names":["mainNavItems: NavItem[]","adminNavItems: NavItem[]"],"ignoreList":[],"sources":["../../src/utils/performance.ts","../../src/services/api.ts","../../src/stores/authStore.ts","../../src/components/Layout.tsx","../../src/hooks/useNotifications.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["// Performance optimization utilities\r\nimport type { ComponentType } from 'react';\r\nimport { lazy } from 'react';\r\n\r\n// Preload function for better UX\r\nexport const preloadComponent = (importFunc: () => Promise<{ default: ComponentType }>) => {\r\n  return importFunc();\r\n};\r\n\r\n// Simple lazy component factory\r\nexport const createLazyComponent = (importFunc: () => Promise<{ default: ComponentType }>) => {\r\n  return lazy(importFunc);\r\n};\r\n\r\n// Performance metrics tracking\r\nexport const trackLoadTime = (componentName: string) => {\r\n  const startTime = performance.now();\r\n  \r\n  return () => {\r\n    const endTime = performance.now();\r\n    const loadTime = endTime - startTime;\r\n    \r\n    console.log(`🚀 ${componentName} loaded in ${loadTime.toFixed(2)}ms`);\r\n    \r\n    // Store metrics for analysis\r\n    if (typeof window !== 'undefined') {\r\n      const metrics = JSON.parse(localStorage.getItem('performance_metrics') || '[]');\r\n      metrics.push({\r\n        component: componentName,\r\n        loadTime,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n      \r\n      // Keep only last 100 entries\r\n      if (metrics.length > 100) {\r\n        metrics.splice(0, metrics.length - 100);\r\n      }\r\n      \r\n      localStorage.setItem('performance_metrics', JSON.stringify(metrics));\r\n    }\r\n  };\r\n};\r\n\r\n// Performance monitoring hook\r\nexport const useLazyLoad = () => {\r\n  const preload = (importFunc: () => Promise<{ default: ComponentType }>) => {\r\n    return importFunc();\r\n  };\r\n\r\n  return { preload };\r\n};\r\n\r\n// Bundle size tracking\r\nexport const trackBundleSize = (bundleName: string, size: number) => {\r\n  if (typeof window !== 'undefined') {\r\n    const sizes = JSON.parse(localStorage.getItem('bundle_sizes') || '{}');\r\n    sizes[bundleName] = {\r\n      size,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    localStorage.setItem('bundle_sizes', JSON.stringify(sizes));\r\n  }\r\n};\r\n\r\n// Get performance metrics\r\nexport const getPerformanceMetrics = () => {\r\n  if (typeof window === 'undefined') return [];\r\n  return JSON.parse(localStorage.getItem('performance_metrics') || '[]');\r\n};\r\n\r\n// Clear performance data\r\nexport const clearPerformanceData = () => {\r\n  if (typeof window !== 'undefined') {\r\n    localStorage.removeItem('performance_metrics');\r\n    localStorage.removeItem('bundle_sizes');\r\n  }\r\n};","import axios from 'axios'\r\nimport type { AxiosResponse } from 'axios'\r\nimport type { ApiResponse } from '../types'\r\n\r\n// Auto-detect environment and set correct API URL\r\nconst getApiUrl = () => {\r\n  // If running on Railway production, use production API URL\r\n  if (typeof window !== 'undefined' && window.location.hostname.includes('railway.app')) {\r\n    return 'https://hafjet-cloud-accounting-system-production.up.railway.app/api';\r\n  }\r\n  // Otherwise use environment variable or default to localhost\r\n  return import.meta.env.VITE_API_URL || 'http://localhost:3001/api';\r\n};\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: getApiUrl(),\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n})\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken')\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`\r\n    }\r\n    return config\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response: AxiosResponse<ApiResponse>) => {\r\n    return response\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Clear auth token and redirect to login\r\n      localStorage.removeItem('authToken')\r\n      window.location.href = '/login'\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Auth service\r\nexport const authService = {\r\n  login: async (email: string, password: string) => {\r\n    const response = await api.post<ApiResponse<{ token: string; user: unknown }>>('/auth/login', {\r\n      email,\r\n      password,\r\n    })\r\n    return response.data\r\n  },\r\n\r\n  register: async (userData: {\r\n    name: string\r\n    email: string\r\n    password: string\r\n    companyName: string\r\n  }) => {\r\n    const response = await api.post<ApiResponse<{ token: string; user: unknown }>>('/auth/register', userData)\r\n    return response.data\r\n  },\r\n\r\n  logout: async () => {\r\n    const response = await api.post<ApiResponse>('/auth/logout')\r\n    localStorage.removeItem('authToken')\r\n    return response.data\r\n  },\r\n\r\n  getCurrentUser: async () => {\r\n    const response = await api.get<ApiResponse<unknown>>('/auth/me')\r\n    return response.data\r\n  },\r\n}\r\n\r\n// Company service\r\nexport const companyService = {\r\n  getProfile: async () => {\r\n    const response = await api.get<ApiResponse<unknown>>('/companies/profile')\r\n    return response.data\r\n  },\r\n\r\n  updateProfile: async (companyData: unknown) => {\r\n    const response = await api.put<ApiResponse<unknown>>('/companies/profile', companyData)\r\n    return response.data\r\n  },\r\n}\r\n\r\n// Transaction service\r\nexport const transactionService = {\r\n  getTransactions: async (params?: {\r\n    page?: number\r\n    limit?: number\r\n    type?: string\r\n    startDate?: string\r\n    endDate?: string\r\n  }) => {\r\n    const response = await api.get<ApiResponse<unknown>>('/transactions', { params })\r\n    return response.data\r\n  },\r\n\r\n  createTransaction: async (transactionData: unknown) => {\r\n    const response = await api.post<ApiResponse<unknown>>('/transactions', transactionData)\r\n    return response.data\r\n  },\r\n\r\n  updateTransaction: async (id: string, transactionData: unknown) => {\r\n    const response = await api.put<ApiResponse<unknown>>(`/transactions/${id}`, transactionData)\r\n    return response.data\r\n  },\r\n\r\n  deleteTransaction: async (id: string) => {\r\n    const response = await api.delete<ApiResponse>(`/transactions/${id}`)\r\n    return response.data\r\n  },\r\n}\r\n\r\n// Invoice service\r\nexport const invoiceService = {\r\n  getInvoices: async (params?: {\r\n    page?: number\r\n    limit?: number\r\n    status?: string\r\n    startDate?: string\r\n    endDate?: string\r\n  }) => {\r\n    const response = await api.get<ApiResponse<unknown>>('/invoices', { params })\r\n    return response.data\r\n  },\r\n\r\n  createInvoice: async (invoiceData: unknown) => {\r\n    const response = await api.post<ApiResponse<unknown>>('/invoices', invoiceData)\r\n    return response.data\r\n  },\r\n\r\n  updateInvoice: async (id: string, invoiceData: unknown) => {\r\n    const response = await api.put<ApiResponse<unknown>>(`/invoices/${id}`, invoiceData)\r\n    return response.data\r\n  },\r\n\r\n  deleteInvoice: async (id: string) => {\r\n    const response = await api.delete<ApiResponse>(`/invoices/${id}`)\r\n    return response.data\r\n  },\r\n\r\n  sendInvoice: async (id: string, method: 'email' | 'whatsapp') => {\r\n    const response = await api.post<ApiResponse>(`/invoices/${id}/send`, { method })\r\n    return response.data\r\n  },\r\n\r\n  generatePDF: async (id: string) => {\r\n    const response = await api.get(`/invoices/${id}/pdf`, {\r\n      responseType: 'blob',\r\n    })\r\n    return response.data\r\n  },\r\n}\r\n\r\n// E-Invoice service\r\nexport const einvoiceService = {\r\n  submitToLHDN: async (invoiceId: string) => {\r\n    const response = await api.post<ApiResponse<unknown>>(`/einvoice/submit/${invoiceId}`)\r\n    return response.data\r\n  },\r\n\r\n  getStatus: async (invoiceId: string) => {\r\n    const response = await api.get<ApiResponse<unknown>>(`/einvoice/status/${invoiceId}`)\r\n    return response.data\r\n  },\r\n\r\n  cancelEInvoice: async (invoiceId: string, reason: string) => {\r\n    const response = await api.post<ApiResponse>(`/einvoice/cancel/${invoiceId}`, { reason })\r\n    return response.data\r\n  },\r\n}\r\n\r\n// Report service\r\nexport const reportService = {\r\n  getProfitLoss: async (startDate: string, endDate: string) => {\r\n    const response = await api.get<ApiResponse<unknown>>('/reports/profit-loss', {\r\n      params: { startDate, endDate },\r\n    })\r\n    return response.data\r\n  },\r\n\r\n  getBalanceSheet: async (date: string) => {\r\n    const response = await api.get<ApiResponse<unknown>>('/reports/balance-sheet', {\r\n      params: { date },\r\n    })\r\n    return response.data\r\n  },\r\n\r\n  getCashFlow: async (startDate: string, endDate: string) => {\r\n    const response = await api.get<ApiResponse<unknown>>('/reports/cash-flow', {\r\n      params: { startDate, endDate },\r\n    })\r\n    return response.data\r\n  },\r\n\r\n  getTrialBalance: async (date: string) => {\r\n    const response = await api.get<ApiResponse<unknown>>('/reports/trial-balance', {\r\n      params: { date },\r\n    })\r\n    return response.data\r\n  },\r\n\r\n  getAgedReceivables: async (date: string) => {\r\n    const response = await api.get<ApiResponse<unknown>>('/reports/aged-receivables', {\r\n      params: { date },\r\n    })\r\n    return response.data\r\n  },\r\n\r\n  getAgedPayables: async (date: string) => {\r\n    const response = await api.get<ApiResponse<unknown>>('/reports/aged-payables', {\r\n      params: { date },\r\n    })\r\n    return response.data\r\n  },\r\n}\r\n\r\n// Tax service\r\nexport const taxService = {\r\n  calculateSST: async (amount: number) => {\r\n    const response = await api.post<ApiResponse<{ taxAmount: number }>>('/tax/calculate-sst', { amount })\r\n    return response.data\r\n  },\r\n\r\n  getTaxRates: async () => {\r\n    const response = await api.get<ApiResponse<unknown>>('/tax/rates')\r\n    return response.data\r\n  },\r\n\r\n  updateTaxSettings: async (settings: unknown) => {\r\n    const response = await api.put<ApiResponse<unknown>>('/tax/settings', settings)\r\n    return response.data\r\n  },\r\n}\r\n\r\n// Settings service\r\nexport const settingsService = {\r\n  // Company settings\r\n  getCompanySettings: async () => {\r\n    const response = await api.get<ApiResponse<unknown>>('/settings/company')\r\n    return response.data\r\n  },\r\n\r\n  updateCompanySettings: async (settings: unknown) => {\r\n    const response = await api.put<ApiResponse<unknown>>('/settings/company', settings)\r\n    return response.data\r\n  },\r\n\r\n  // Tax settings\r\n  getTaxSettings: async () => {\r\n    const response = await api.get<ApiResponse<unknown>>('/settings/tax')\r\n    return response.data\r\n  },\r\n\r\n  updateTaxSettings: async (settings: unknown) => {\r\n    const response = await api.put<ApiResponse<unknown>>('/settings/tax', settings)\r\n    return response.data\r\n  },\r\n\r\n  // System settings\r\n  getSystemSettings: async () => {\r\n    const response = await api.get<ApiResponse<unknown>>('/settings/system')\r\n    return response.data\r\n  },\r\n\r\n  updateSystemSettings: async (settings: unknown) => {\r\n    const response = await api.put<ApiResponse<unknown>>('/settings/system', settings)\r\n    return response.data\r\n  },\r\n\r\n  // User management\r\n  getUsers: async () => {\r\n    const response = await api.get<ApiResponse<unknown>>('/settings/users')\r\n    return response.data\r\n  },\r\n\r\n  createUser: async (userData: unknown) => {\r\n    const response = await api.post<ApiResponse<unknown>>('/settings/users', userData)\r\n    return response.data\r\n  },\r\n\r\n  updateUser: async (id: string, userData: unknown) => {\r\n    const response = await api.put<ApiResponse<unknown>>(`/settings/users/${id}`, userData)\r\n    return response.data\r\n  },\r\n\r\n  deleteUser: async (id: string) => {\r\n    const response = await api.delete<ApiResponse<unknown>>(`/settings/users/${id}`)\r\n    return response.data\r\n  },\r\n  // 2FA endpoints\r\n  setup2FA: async () => {\r\n    const response = await api.post<ApiResponse<unknown>>('/settings/users/2fa/setup')\r\n    return response.data\r\n  },\r\n\r\n  verify2FA: async (payload: { token: string }) => {\r\n    const response = await api.post<ApiResponse<unknown>>('/settings/users/2fa/verify', payload)\r\n    return response.data\r\n  },\r\n\r\n  disable2FA: async () => {\r\n    const response = await api.post<ApiResponse<unknown>>('/settings/users/2fa/disable')\r\n    return response.data\r\n  },\r\n}\r\n\r\n// Dashboard service\r\nexport const dashboardService = {\r\n  getStats: async (startDate?: string, endDate?: string) => {\r\n    const response = await api.get<ApiResponse<unknown>>('/dashboard/stats', {\r\n      params: { startDate, endDate },\r\n    })\r\n    return response.data\r\n  },\r\n\r\n  getChartData: async (type: string, startDate?: string, endDate?: string) => {\r\n    const response = await api.get<ApiResponse<unknown>>(`/dashboard/charts/${type}`, {\r\n      params: { startDate, endDate },\r\n    })\r\n    return response.data\r\n  },\r\n}\r\n\r\nexport default api","import { create } from 'zustand'\r\nimport { persist } from 'zustand/middleware'\r\nimport { authService } from '../services/api'\r\nimport type { User } from '../types'\r\n\r\ninterface AuthState {\r\n  user: User | null\r\n  token: string | null\r\n  isAuthenticated: boolean\r\n  isLoading: boolean\r\n  login: (email: string, password: string) => Promise<void>\r\n  register: (userData: { name: string; email: string; password: string; companyName: string }) => Promise<void>\r\n  logout: () => void\r\n  checkAuth: () => Promise<void>\r\n  setUser: (user: User) => void\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>()(\r\n  persist(\r\n    (set, get) => ({\r\n      user: null,\r\n      token: null,\r\n      isAuthenticated: false,\r\n      isLoading: false,\r\n\r\n      login: async (email: string, password: string) => {\r\n        set({ isLoading: true })\r\n        try {\r\n          const response = await authService.login(email, password)\r\n          if (response.success && response.data) {\r\n            const { token, user } = response.data as { token: string; user: User }\r\n            localStorage.setItem('authToken', token)\r\n            set({\r\n              user,\r\n              token,\r\n              isAuthenticated: true,\r\n              isLoading: false,\r\n            })\r\n          } else {\r\n            throw new Error(response.message || 'Login failed')\r\n          }\r\n        } catch (error) {\r\n          set({ isLoading: false })\r\n          console.error('Login error:', error)\r\n          throw error\r\n        }\r\n      },\r\n\r\n      register: async (userData) => {\r\n        set({ isLoading: true })\r\n        try {\r\n          const response = await authService.register(userData)\r\n          if (response.success && response.data) {\r\n            const { token, user } = response.data as { token: string; user: User }\r\n            localStorage.setItem('authToken', token)\r\n            set({\r\n              user,\r\n              token,\r\n              isAuthenticated: true,\r\n              isLoading: false,\r\n            })\r\n          } else {\r\n            throw new Error(response.message || 'Registration failed')\r\n          }\r\n        } catch (error) {\r\n          set({ isLoading: false })\r\n          console.error('Registration error:', error)\r\n          throw error\r\n        }\r\n      },\r\n\r\n      logout: () => {\r\n        localStorage.removeItem('authToken')\r\n        set({\r\n          user: null,\r\n          token: null,\r\n          isAuthenticated: false,\r\n          isLoading: false,\r\n        })\r\n      },\r\n\r\n      checkAuth: async () => {\r\n        const token = localStorage.getItem('authToken')\r\n        const userString = localStorage.getItem('user')\r\n        \r\n        if (!token || !userString) {\r\n          set({ isAuthenticated: false, isLoading: false })\r\n          return\r\n        }\r\n\r\n        set({ isLoading: true })\r\n        try {\r\n          // Use mock data from localStorage instead of API call\r\n          const user = JSON.parse(userString) as User\r\n          set({\r\n            user,\r\n            token,\r\n            isAuthenticated: true,\r\n            isLoading: false,\r\n          })\r\n        } catch (error) {\r\n          console.error('Auth check error:', error)\r\n          // Clear invalid data and set loading to false\r\n          localStorage.removeItem('authToken')\r\n          localStorage.removeItem('user')\r\n          set({ \r\n            user: null, \r\n            token: null, \r\n            isAuthenticated: false, \r\n            isLoading: false \r\n          })\r\n        }\r\n      },\r\n\r\n      setUser: (user: User) => {\r\n        set({ \r\n          user, \r\n          isAuthenticated: true,\r\n          token: localStorage.getItem('authToken') || null\r\n        })\r\n      },\r\n    }),\r\n    {\r\n      name: 'auth-storage',\r\n      partialize: (state) => ({\r\n        user: state.user,\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n      }),\r\n    }\r\n  )\r\n)","import { ReactNode, useState, useEffect } from 'react'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { useAuthStore } from '../stores/authStore'\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode\r\n}\r\n\r\ninterface NavItem {\r\n  path: string\r\n  label: string\r\n  icon: string\r\n}\r\n\r\nconst mainNavItems: NavItem[] = [\r\n  { path: '/dashboard', label: 'Dashboard', icon: '📊' },\r\n  { path: '/companies', label: 'Companies', icon: '🏢' },\r\n  { path: '/analytics', label: 'Analytics', icon: '📈' },\r\n  { path: '/automation', label: 'Automation', icon: '🤖' },\r\n  { path: '/banking', label: 'Banking', icon: '🏦' },\r\n  { path: '/invoices', label: 'Invoices', icon: '📄' },\r\n  { path: '/einvoice', label: 'E-Invoice', icon: '⚡' },\r\n  { path: '/transactions', label: 'Transactions', icon: '💳' },\r\n  { path: '/inventory', label: 'Inventory', icon: '📦' },\r\n  { path: '/digital-shoebox', label: 'Digital Shoebox', icon: '🗂️' },\r\n  { path: '/reports', label: 'Reports', icon: '📊' },\r\n]\r\n\r\nconst adminNavItems: NavItem[] = [\r\n  { path: '/users', label: 'Users', icon: '👥' },\r\n  { path: '/data', label: 'Data Management', icon: '💾' },\r\n  { path: '/security', label: 'Security', icon: '🔒' },\r\n  { path: '/performance', label: 'Performance', icon: '⚡' },\r\n  { path: '/notifications', label: 'Notifications', icon: '🔔' },\r\n  { path: '/settings', label: 'Settings', icon: '⚙️' },\r\n]\r\n\r\nfunction Layout({ children }: LayoutProps) {\r\n  const location = useLocation()\r\n  const navigate = useNavigate()\r\n  const { logout } = useAuthStore()\r\n  const [isCollapsed, setIsCollapsed] = useState(false)\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\r\n\r\n  // Load sidebar collapsed state from localStorage\r\n  useEffect(() => {\r\n    const collapsed = localStorage.getItem('hafjet_sidebar_collapsed') === 'true'\r\n    setIsCollapsed(collapsed)\r\n  }, [])\r\n\r\n  // Save sidebar state to localStorage\r\n  const toggleSidebar = () => {\r\n    const newState = !isCollapsed\r\n    setIsCollapsed(newState)\r\n    localStorage.setItem('hafjet_sidebar_collapsed', String(newState))\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    logout()\r\n    navigate('/login')\r\n  }\r\n\r\n  const isActivePath = (path: string) => {\r\n    return location.pathname === path || location.pathname.startsWith(`${path}/`)\r\n  }\r\n\r\n  const renderNavItem = (item: NavItem) => (\r\n    <Link\r\n      key={item.path}\r\n      to={item.path}\r\n      aria-current={isActivePath(item.path) ? 'page' : undefined}\r\n      className={`flex items-center px-4 py-3 rounded-lg transition-colors ${\r\n        isActivePath(item.path)\r\n          ? 'bg-blue-100 text-blue-700 font-semibold'\r\n          : 'text-gray-700 hover:bg-gray-100'\r\n      }`}\r\n      onClick={() => setIsMobileMenuOpen(false)}\r\n    >\r\n      <span className=\"text-xl mr-3\">{item.icon}</span>\r\n      {!isCollapsed && <span>{item.label}</span>}\r\n    </Link>\r\n  )\r\n\r\n  return (\r\n    <div className=\"flex h-screen overflow-hidden bg-gray-50\">\r\n      {/* Sidebar */}\r\n      <aside\r\n        aria-label=\"Sidebar utama\"\r\n        className={`${\r\n          isCollapsed ? 'w-20' : 'w-64'\r\n        } bg-white shadow-xl border-r border-gray-200 transition-all duration-300 ease-in-out hidden lg:flex flex-col`}\r\n      >\r\n        {/* Logo */}\r\n        <div className=\"p-4 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"w-10 h-10 bg-gradient-to-br from-blue-600 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold text-xl\">\r\n                H\r\n              </div>\r\n              {!isCollapsed && (\r\n                <div className=\"flex flex-col\">\r\n                  <span className=\"font-bold text-gray-900 text-sm\">HAFJET Cloud</span>\r\n                  <span className=\"text-xs text-gray-600\">Accounting System</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navigation */}\r\n        <nav className=\"flex-1 overflow-y-auto p-4 space-y-1\">\r\n          <div className=\"mb-6\">\r\n            <h3 className={`text-xs font-semibold text-gray-500 mb-2 ${isCollapsed ? 'text-center' : ''}`}>\r\n              {isCollapsed ? '◆' : 'Main Features'}\r\n            </h3>\r\n            <div className=\"space-y-1\">\r\n              {mainNavItems.map(renderNavItem)}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-6\">\r\n            <h3 className={`text-xs font-semibold text-gray-500 mb-2 ${isCollapsed ? 'text-center' : ''}`}>\r\n              {isCollapsed ? '◇' : 'Administration'}\r\n            </h3>\r\n            <div className=\"space-y-1\">\r\n              {adminNavItems.map(renderNavItem)}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        {/* Footer with collapse button and logout */}\r\n        <div className=\"p-4 border-t border-gray-200\">\r\n          <button\r\n            onClick={toggleSidebar}\r\n            aria-label={isCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\r\n            className=\"w-full flex items-center justify-center px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors mb-2\"\r\n          >\r\n            <span className=\"text-xl\">{isCollapsed ? '→' : '←'}</span>\r\n            {!isCollapsed && <span className=\"ml-2\">Collapse</span>}\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"w-full flex items-center justify-center px-4 py-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors\"\r\n          >\r\n            <span className=\"text-xl\">{isCollapsed ? '🚪' : '🚪'}</span>\r\n            {!isCollapsed && <span className=\"ml-2\">Log Keluar</span>}\r\n          </button>\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Mobile Menu */}\r\n      <div className=\"lg:hidden\">\r\n        {/* Mobile Header */}\r\n        <div className=\"fixed top-0 left-0 right-0 bg-white shadow-md z-40 px-4 py-3 flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-8 h-8 bg-gradient-to-br from-blue-600 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold\">\r\n              H\r\n            </div>\r\n            <span className=\"font-bold text-gray-900\">HAFJET</span>\r\n          </div>\r\n          <button\r\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\r\n            aria-label={isMobileMenuOpen ? 'Close navigation menu' : 'Open navigation menu'}\r\n            className=\"p-2 text-gray-600 hover:bg-gray-100 rounded-lg\"\r\n          >\r\n            <span className=\"text-2xl\">{isMobileMenuOpen ? '✕' : '☰'}</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Mobile Menu Backdrop */}\r\n        {isMobileMenuOpen && (\r\n          <button\r\n            onClick={() => setIsMobileMenuOpen(false)}\r\n            aria-label=\"Close navigation menu\"\r\n            className=\"fixed inset-0 bg-black/50 z-40\"\r\n          />\r\n        )}\r\n\r\n        {/* Mobile Menu Panel */}\r\n        <aside\r\n          className={`fixed top-0 left-0 bottom-0 w-64 bg-white shadow-xl z-50 transform transition-transform duration-300 ${\r\n            isMobileMenuOpen ? 'translate-x-0' : '-translate-x-full'\r\n          }`}\r\n        >\r\n          <div className=\"p-4 border-b border-gray-200\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"w-10 h-10 bg-gradient-to-br from-blue-600 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold text-xl\">\r\n                H\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <span className=\"font-bold text-gray-900 text-sm\">HAFJET Cloud</span>\r\n                <span className=\"text-xs text-gray-600\">Accounting System</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <nav className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n            <div>\r\n              <h3 className=\"text-xs font-semibold text-gray-500 mb-2\">Main Features</h3>\r\n              <div className=\"space-y-1\">\r\n                {mainNavItems.map(renderNavItem)}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-xs font-semibold text-gray-500 mb-2\">Administration</h3>\r\n              <div className=\"space-y-1\">\r\n                {adminNavItems.map(renderNavItem)}\r\n              </div>\r\n            </div>\r\n          </nav>\r\n\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"w-full flex items-center justify-center px-4 py-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors\"\r\n            >\r\n              <span className=\"text-xl\">🚪</span>\r\n              <span className=\"ml-2\">Log Keluar</span>\r\n            </button>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"flex-1 overflow-y-auto lg:pt-0 pt-16\">\r\n        {children}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import { createContext, useEffect, useState, type ReactNode } from 'react'\r\nimport { io, Socket } from 'socket.io-client'\r\nimport { useAuthStore } from '../stores/authStore'\r\nimport toast from 'react-hot-toast'\r\n\r\nexport interface Notification {\r\n  id: string\r\n  type:\r\n    | 'invoice_payment'\r\n    | 'einvoice_approved'\r\n    | 'sst_update'\r\n    | 'system_alert'\r\n    | 'payment_received'\r\n    | 'document_uploaded'\r\n    | 'receipt_uploaded'\r\n    | 'receipt_ocr_processed'\r\n    | 'receipt_classified'\r\n    | 'receipt_ready_review'\r\n    | 'receipt_approved'\r\n  title: string\r\n  message: string\r\n  data?: unknown\r\n  timestamp: Date\r\n  priority: 'low' | 'medium' | 'high' | 'urgent'\r\n  companyId: string\r\n  userId?: string\r\n  read?: boolean\r\n}\r\n\r\ninterface NotificationContextType {\r\n  socket: Socket | null\r\n  notifications: Notification[]\r\n  unreadCount: number\r\n  isConnected: boolean\r\n  markAsRead: (id: string) => void\r\n  markAllAsRead: () => void\r\n  sendTestNotification: () => void\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined)\r\n\r\nexport { NotificationContext }\r\n\r\ninterface NotificationProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport function NotificationProvider({ children }: NotificationProviderProps) {\r\n  const [socket, setSocket] = useState<Socket | null>(null)\r\n  const [notifications, setNotifications] = useState<Notification[]>([])\r\n  const [isConnected, setIsConnected] = useState(false)\r\n  const { token, user } = useAuthStore()\r\n\r\n  const unreadCount = notifications.filter(n => !n.read).length\r\n\r\n  // Initialize socket connection\r\n  useEffect(() => {\r\n    // Do not initialize socket in test mode or when notifications are disabled via env\r\n    const disableNotifications = (import.meta.env.VITE_DISABLE_NOTIFICATIONS || 'false') === 'true' || import.meta.env.MODE === 'test' || (typeof process !== 'undefined' && process.env.NODE_ENV === 'test');\r\n    if (disableNotifications) {\r\n      console.log('🔕 Notifications disabled by environment, skipping socket initialization')\r\n      return\r\n    }\r\n\r\n    if (token && user) {\r\n      console.log('🔌 Connecting to notification service...')\r\n      \r\n      // Auto-detect environment and use correct server URL\r\n      const isProduction = typeof window !== 'undefined' && window.location.hostname.includes('railway.app');\r\n      const serverUrl = isProduction \r\n        ? 'https://hafjet-cloud-accounting-system-production.up.railway.app'\r\n        : (import.meta.env.VITE_API_URL?.replace('/api', '') || 'http://localhost:3001');\r\n      console.log('🌐 Connecting to:', serverUrl)\r\n      \r\n      const newSocket = io(serverUrl, {\r\n        auth: {\r\n          token: token,\r\n          userId: user.id,\r\n          userEmail: user.email\r\n        },\r\n        // Prefer websocket first to avoid CORS/polling transport XHR issues in some dev setups\r\n        transports: ['websocket', 'polling'],\r\n        // Ensure cookies/credentials are sent if server requires them for CORS\r\n        withCredentials: true,\r\n        timeout: 20000,\r\n        retries: 3,\r\n        autoConnect: true,\r\n        forceNew: false\r\n      })\r\n\r\n      newSocket.on('connect', () => {\r\n        console.log('✅ Connected to notification service')\r\n        setIsConnected(true)\r\n        toast.success('Real-time notifications connected')\r\n        \r\n        // Send test notification to verify connection\r\n        setTimeout(() => {\r\n          newSocket.emit('test_notification')\r\n        }, 1000)\r\n      })\r\n\r\n      newSocket.on('disconnect', (reason) => {\r\n        console.log('❌ Disconnected from notification service:', reason)\r\n        setIsConnected(false)\r\n        \r\n        // Only show error for unexpected disconnects\r\n        if (reason !== 'io client disconnect') {\r\n          toast.error('Real-time notifications disconnected')\r\n        }\r\n        \r\n        // Auto-reconnect if server disconnected\r\n        if (reason === 'io server disconnect') {\r\n          setTimeout(() => {\r\n            console.log('🔄 Attempting to reconnect...')\r\n            newSocket.connect()\r\n          }, 2000)\r\n        }\r\n      })\r\n\r\n      newSocket.on('connect_error', (error) => {\r\n        // Surface error details for easier debugging (CORS, auth, network)\r\n        console.error('🔴 Connection error (socket.io):', error, '\\n', {\r\n          message: (error as any)?.message,\r\n          stack: (error as any)?.stack,\r\n          transportError: (error as any)?.transport\r\n        })\r\n        setIsConnected(false)\r\n\r\n        // If websocket transport failed due to environment/CORS, fall back to polling\r\n        const msg = (error && error.message) ? String(error.message).toLowerCase() : ''\r\n        if (msg.includes('websocket') || msg.includes('transport') || msg.includes('xhr') || msg.includes('poll')) {\r\n          console.log('🔄 WebSocket/polling issue detected, falling back to polling transport and retrying...')\r\n          try {\r\n            newSocket.io.opts.transports = ['polling']\r\n            setTimeout(() => {\r\n              newSocket.connect()\r\n            }, 1000)\r\n          } catch (e) {\r\n            console.error('Failed to switch transport:', e)\r\n            toast.error(`Failed to connect to notification service: ${(error as any)?.message || (e as any)?.message}`)\r\n          }\r\n        } else {\r\n          toast.error(`Failed to connect to notification service: ${error?.message || 'Unknown error'}`)\r\n        }\r\n      })\r\n\r\n      newSocket.on('reconnect', (attemptNumber) => {\r\n        console.log(`🔄 Reconnected after ${attemptNumber} attempts`)\r\n        setIsConnected(true)\r\n        toast.success('Notifications reconnected')\r\n      })\r\n\r\n      newSocket.on('reconnect_error', (error) => {\r\n        console.error('❌ Reconnection failed:', error.message)\r\n      })\r\n\r\n      // Listen for incoming notifications\r\n      newSocket.on('notification', (notification: Notification) => {\r\n        console.log('🔔 New notification:', notification)\r\n        \r\n        setNotifications(prev => [notification, ...prev])\r\n        \r\n        // Show toast notification based on priority\r\n        const toastOptions = {\r\n          duration: notification.priority === 'urgent' ? 8000 : \r\n                   notification.priority === 'high' ? 6000 : 4000,\r\n          icon: getNotificationIcon(notification.type)\r\n        }\r\n\r\n        if (notification.priority === 'urgent') {\r\n          toast.error(`${notification.title}: ${notification.message}`, toastOptions)\r\n        } else if (notification.priority === 'high') {\r\n          toast.success(`${notification.title}: ${notification.message}`, toastOptions)\r\n        } else {\r\n          toast(`${notification.title}: ${notification.message}`, toastOptions)\r\n        }\r\n\r\n        // Play notification sound for important notifications\r\n        if (notification.priority === 'urgent' || notification.priority === 'high') {\r\n          playNotificationSound()\r\n        }\r\n      })\r\n\r\n      // Listen for system notifications\r\n      newSocket.on('system_notification', (notification: Notification) => {\r\n        console.log('🚨 System notification:', notification)\r\n        \r\n        setNotifications(prev => [notification, ...prev])\r\n        toast.error(`System Alert: ${notification.message}`, {\r\n          duration: 10000,\r\n          icon: '🚨'\r\n        })\r\n        playNotificationSound()\r\n      })\r\n\r\n      // Load initial notifications\r\n      newSocket.on('notifications_loaded', (data: { notifications: Notification[], unreadCount: number }) => {\r\n        console.log('📬 Loaded notifications:', data)\r\n        setNotifications(data.notifications || [])\r\n      })\r\n\r\n      setSocket(newSocket)\r\n\r\n      return () => {\r\n        console.log('🔌 Cleaning up socket connection')\r\n        newSocket.disconnect()\r\n      }\r\n    }\r\n  }, [token, user])\r\n\r\n  const markAsRead = (id: string) => {\r\n    setNotifications(prev => \r\n      prev.map(notification => \r\n        notification.id === id \r\n          ? { ...notification, read: true }\r\n          : notification\r\n      )\r\n    )\r\n\r\n    if (socket) {\r\n      socket.emit('mark_notification_read', id)\r\n    }\r\n  }\r\n\r\n  const markAllAsRead = () => {\r\n    setNotifications(prev => \r\n      prev.map(notification => ({ ...notification, read: true }))\r\n    )\r\n\r\n    notifications.forEach(notification => {\r\n      if (socket && !notification.read) {\r\n        socket.emit('mark_notification_read', notification.id)\r\n      }\r\n    })\r\n  }\r\n\r\n  const sendTestNotification = () => {\r\n    if (socket && isConnected) {\r\n      // Send test via socket\r\n      socket.emit('test_notification')\r\n      toast.success('Test notification sent via Socket.IO!')\r\n    } else {\r\n      // Fallback: send via API\r\n      fetch('http://localhost:3001/api/test-notification', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userId: user?.id || '1',\r\n          message: 'Test notification from frontend!'\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          toast.success('Test notification sent via API!')\r\n        } else {\r\n          toast.error('Failed to send test notification')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('Failed to send test notification:', err)\r\n        toast.error('Failed to send test notification')\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{\r\n      socket,\r\n      notifications,\r\n      unreadCount,\r\n      isConnected,\r\n      markAsRead,\r\n      markAllAsRead,\r\n      sendTestNotification\r\n    }}>\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  )\r\n}\r\n\r\nfunction getNotificationIcon(type: Notification['type']): string {\r\n  switch (type) {\r\n    case 'invoice_payment':\r\n      return '💰'\r\n    case 'einvoice_approved':\r\n      return '✅'\r\n    case 'sst_update':\r\n      return '📋'\r\n    case 'system_alert':\r\n      return '🚨'\r\n    case 'payment_received':\r\n      return '💳'\r\n    case 'document_uploaded':\r\n      return '📄'\r\n    case 'receipt_uploaded':\r\n      return '🧾'\r\n    case 'receipt_ocr_processed':\r\n      return '🔍'\r\n    case 'receipt_classified':\r\n      return '🤖'\r\n    case 'receipt_ready_review':\r\n      return '📝'\r\n    case 'receipt_approved':\r\n      return '✅'\r\n    default:\r\n      return '🔔'\r\n  }\r\n}\r\n\r\nfunction playNotificationSound() {\r\n  try {\r\n    // Create audio context for notification sound\r\n    const audioContext = new (window.AudioContext || (window as unknown as { webkitAudioContext: typeof AudioContext }).webkitAudioContext)()\r\n    const oscillator = audioContext.createOscillator()\r\n    const gainNode = audioContext.createGain()\r\n\r\n    oscillator.connect(gainNode)\r\n    gainNode.connect(audioContext.destination)\r\n\r\n    oscillator.frequency.setValueAtTime(800, audioContext.currentTime)\r\n    oscillator.frequency.setValueAtTime(600, audioContext.currentTime + 0.1)\r\n    \r\n    gainNode.gain.setValueAtTime(0.3, audioContext.currentTime)\r\n    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3)\r\n\r\n    oscillator.start(audioContext.currentTime)\r\n    oscillator.stop(audioContext.currentTime + 0.3)\r\n  } catch (error) {\r\n    console.log('Could not play notification sound:', error)\r\n  }\r\n}\r\n\r\nexport default NotificationProvider","import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'\r\nimport { Toaster } from 'react-hot-toast'\r\nimport { useEffect, useState, Suspense } from 'react'\r\nimport { createLazyComponent } from './utils/performance'\r\nimport Layout from './components/Layout'\r\nimport { useAuthStore } from './stores/authStore'\r\nimport { NotificationProvider } from './hooks/useNotifications'\r\n\r\n// Lazy load all pages for better performance\r\nconst Dashboard = createLazyComponent(() => import('./pages/Dashboard'))\r\nconst Login = createLazyComponent(() => import('./pages/Login'))\r\nconst Register = createLazyComponent(() => import('./pages/Register'))\r\nconst Invoices = createLazyComponent(() => import('./pages/Invoices'))\r\nconst EInvoice = createLazyComponent(() => import('./pages/EInvoice'))\r\nconst Transactions = createLazyComponent(() => import('./pages/Transactions'))\r\nconst Reports = createLazyComponent(() => import('./pages/Reports'))\r\nconst Settings = createLazyComponent(() => import('./pages/Settings'))\r\nconst Inventory = createLazyComponent(() => import('./pages/Inventory'))\r\nconst Banking = createLazyComponent(() => import('./pages/Banking'))\r\nconst DigitalShoebox = createLazyComponent(() => import('./pages/DigitalShoebox'))\r\nconst AdvancedAnalytics = createLazyComponent(() => import('./pages/AdvancedAnalytics'))\r\nconst WorkflowAutomation = createLazyComponent(() => import('./pages/WorkflowAutomation'))\r\nconst MultiCompanyManagement = createLazyComponent(() => import('./pages/MultiCompanyManagement'))\r\nconst UserManagement = createLazyComponent(() => import('./pages/UserManagement'))\r\nconst DataManagement = createLazyComponent(() => import('./pages/DataManagement'))\r\nconst SecurityDashboard = createLazyComponent(() => import('./pages/SecurityDashboard'))\r\nconst TwoFactorAuth = createLazyComponent(() => import('./pages/TwoFactorAuth'))\r\nconst IPAccessControl = createLazyComponent(() => import('./pages/IPAccessControl'))\r\nconst NotificationCenter = createLazyComponent(() => import('./pages/NotificationCenter'))\r\nconst PerformanceMonitoring = createLazyComponent(() => import('./pages/PerformanceMonitoring'))\r\n\r\n// Loading component for lazy loaded pages\r\nconst PageLoadingSpinner = () => (\r\n  <div className=\"flex items-center justify-center min-h-[60vh]\">\r\n    <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600\"></div>\r\n    <span className=\"ml-3 text-lg text-gray-600\">Loading...</span>\r\n  </div>\r\n)\r\n\r\nfunction App() {\r\n  const { isAuthenticated, checkAuth, isLoading } = useAuthStore()\r\n  const [initComplete, setInitComplete] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        await checkAuth()\r\n      } catch (error) {\r\n        console.error('Auth initialization error:', error)\r\n      } finally {\r\n        setInitComplete(true)\r\n      }\r\n    }\r\n    \r\n    init()\r\n    \r\n    // Fallback timeout to prevent infinite loading\r\n    const timeout = setTimeout(() => {\r\n      setInitComplete(true)\r\n    }, 3000)\r\n    \r\n    return () => clearTimeout(timeout)\r\n  }, [checkAuth])\r\n\r\n  // Show loading during auth check\r\n  if (isLoading || !initComplete) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-900 to-purple-900 flex items-center justify-center\">\r\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-3xl p-8 text-center\">\r\n          <div className=\"animate-spin h-12 w-12 border-4 border-white/30 border-t-white rounded-full mx-auto mb-4\"></div>\r\n          <h2 className=\"text-xl font-bold text-white mb-2\">Loading HAFJET Cloud Accounting System...</h2>\r\n          <p className=\"text-white/80\">🇲🇾 Initializing Malaysian Cloud Accounting System</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <Router>\r\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\r\n          <Suspense fallback={<PageLoadingSpinner />}>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path=\"/register\" element={<Register />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\r\n            </Routes>\r\n          </Suspense>\r\n          <Toaster position=\"top-right\" />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <NotificationProvider>\r\n      <Router>\r\n        <Layout>\r\n          <Suspense fallback={<PageLoadingSpinner />}>\r\n            <Routes>\r\n              <Route path=\"/\" element={<Dashboard />} />\r\n              <Route path=\"/dashboard\" element={<Dashboard />} />\r\n              <Route path=\"/analytics\" element={<AdvancedAnalytics />} />\r\n              <Route path=\"/automation\" element={<WorkflowAutomation />} />\r\n              <Route path=\"/companies\" element={<MultiCompanyManagement />} />\r\n              <Route path=\"/banking\" element={<Banking />} />\r\n              <Route path=\"/invoices\" element={<Invoices />} />\r\n              <Route path=\"/invoices/new\" element={<Invoices />} />\r\n              <Route path=\"/invoices/:id\" element={<Invoices />} />\r\n              <Route path=\"/einvoice\" element={<EInvoice />} />\r\n              <Route path=\"/einvoice/manage\" element={<EInvoice />} />\r\n              <Route path=\"/einvoice/create\" element={<EInvoice />} />\r\n              <Route path=\"/einvoice/validate\" element={<EInvoice />} />\r\n              <Route path=\"/transactions\" element={<Transactions />} />\r\n              <Route path=\"/inventory\" element={<Inventory />} />\r\n              <Route path=\"/digital-shoebox\" element={<DigitalShoebox />} />\r\n              <Route path=\"/notifications\" element={<NotificationCenter />} />\r\n              <Route path=\"/users\" element={<UserManagement />} />\r\n              <Route path=\"/data\" element={<DataManagement />} />\r\n              <Route path=\"/security\" element={<SecurityDashboard />} />\r\n              <Route path=\"/security/2fa\" element={<TwoFactorAuth />} />\r\n              <Route path=\"/security/ip-control\" element={<IPAccessControl />} />\r\n              <Route path=\"/performance\" element={<PerformanceMonitoring />} />\r\n              <Route path=\"/reports\" element={<Reports />} />\r\n              <Route path=\"/reports/profit-loss\" element={<Reports />} />\r\n              <Route path=\"/reports/balance-sheet\" element={<Reports />} />\r\n              <Route path=\"/reports/cash-flow\" element={<Reports />} />\r\n              <Route path=\"/settings\" element={<Settings />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/dashboard\" replace />} />\r\n            </Routes>\r\n          </Suspense>\r\n        </Layout>\r\n        <Toaster position=\"top-right\" />\r\n      </Router>\r\n    </NotificationProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { StrictMode } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\n// Initialize Sentry for frontend error tracking if DSN provided\r\nif (import.meta.env.VITE_SENTRY_DSN) {\r\n  // Dynamic import to avoid requiring the package when not configured\r\n  import('@sentry/react').then(Sentry => {\r\n    import('@sentry/tracing').then(Tracing => {\r\n      Sentry.init({\r\n        dsn: import.meta.env.VITE_SENTRY_DSN,\r\n        environment: import.meta.env.MODE || 'development',\r\n        integrations: [new Tracing.BrowserTracing()],\r\n        tracesSampleRate: parseFloat(import.meta.env.VITE_SENTRY_TRACES_SAMPLE_RATE || '0.0')\r\n      });\r\n    });\r\n  }).catch(err => console.warn('Sentry not initialized:', err));\r\n}\r\n\r\nconst root = document.getElementById('root')\r\nif (root) {\r\n  createRoot(root).render(\r\n    <StrictMode>\r\n      <App />\r\n    </StrictMode>,\r\n  )\r\n} else {\r\n  console.error('Root element not found!')\r\n}\r\n"],"file":"assets/index-CjVp_w_-.js"}
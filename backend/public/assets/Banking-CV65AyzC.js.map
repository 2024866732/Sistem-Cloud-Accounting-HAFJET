{"version":3,"file":"Banking-CV65AyzC.js","names":["logoMap: Record<string, string>","bankNames: Record<string, string>","patterns: Record<string, RegExp>","Banking: React.FC<BankingProps>","transactionsData: BankTransaction[]"],"sources":["../../src/services/bankingService.ts","../../src/pages/Banking.tsx"],"sourcesContent":["import api from './api'\r\n\r\nexport interface MalaysianBank {\r\n  code: string\r\n  name: string\r\n  logo: string\r\n  isSupported: boolean\r\n  authType: 'oauth2' | 'credentials'\r\n  description?: string\r\n  features: string[]\r\n}\r\n\r\nexport interface BankAccount {\r\n  id: string\r\n  bankCode: string\r\n  bankName: string\r\n  accountNumber: string\r\n  accountType: 'savings' | 'current' | 'business' | 'islamic'\r\n  balance: number\r\n  currency: string\r\n  lastSyncDate: Date\r\n  isActive: boolean\r\n}\r\n\r\nexport interface BankTransaction {\r\n  id: string\r\n  accountId: string\r\n  date: Date\r\n  description: string\r\n  amount: number\r\n  type: 'debit' | 'credit'\r\n  balance: number\r\n  category?: string\r\n  reference?: string\r\n  malaysianMetadata?: {\r\n    isGovPayment?: boolean\r\n    sst?: number\r\n    paymentMethod?: string\r\n  }\r\n}\r\n\r\nexport interface CompanyTransaction {\r\n  id: string\r\n  date: Date\r\n  description: string\r\n  amount: number\r\n  type: 'income' | 'expense'\r\n  category: string\r\n  reference?: string\r\n}\r\n\r\nexport interface BankConnectionCredentials {\r\n  username?: string\r\n  password?: string\r\n  clientId?: string\r\n  clientSecret?: string\r\n  apiKey?: string\r\n}\r\n\r\nexport interface ReconciliationResult {\r\n  matched: Array<{\r\n    bankTransaction: BankTransaction\r\n    companyTransaction: CompanyTransaction\r\n    confidence: number\r\n  }>\r\n  unmatched: Array<{\r\n    transaction: BankTransaction | CompanyTransaction\r\n    source: 'bank' | 'company'\r\n  }>\r\n  suggestions: Array<{\r\n    bankTransaction: BankTransaction\r\n    possibleMatches: CompanyTransaction[]\r\n    reason: string\r\n  }>\r\n  summary: {\r\n    totalBankTransactions: number\r\n    totalCompanyTransactions: number\r\n    matchedCount: number\r\n    unmatchedCount: number\r\n    reconciliationRate: number\r\n  }\r\n}\r\n\r\nexport interface SyncHistoryItem {\r\n  id: string\r\n  accountId: string\r\n  syncDate: Date\r\n  transactionCount: number\r\n  status: 'success' | 'partial' | 'failed'\r\n  errorMessage?: string\r\n}\r\n\r\nexport interface TransactionCategory {\r\n  code: string\r\n  name: string\r\n  description: string\r\n}\r\n\r\nexport interface BankStatus {\r\n  bankCode: string\r\n  isConnected: boolean\r\n  lastSync: Date | null\r\n}\r\n\r\nexport interface ReconciliationReport {\r\n  accountId: string\r\n  reportPeriod: {\r\n    start: Date\r\n    end: Date\r\n  }\r\n  summary: {\r\n    totalBankTransactions: number\r\n    totalCompanyTransactions: number\r\n    matchedTransactions: number\r\n    unmatchedTransactions: number\r\n    reconciliationRate: number\r\n  }\r\n  issues: Array<{\r\n    type: string\r\n    description: string\r\n    amount: number\r\n    date: Date\r\n    suggestions: string[]\r\n  }>\r\n  recommendations: string[]\r\n}\r\n\r\nclass BankingService {\r\n  // Get supported Malaysian banks\r\n  async getSupportedBanks(): Promise<MalaysianBank[]> {\r\n    const response = await api.get('/banking/banks')\r\n    return response.data.data\r\n  }\r\n\r\n  // Connect to a Malaysian bank\r\n  async connectBank(bankCode: string, credentials: BankConnectionCredentials): Promise<BankAccount[]> {\r\n    const response = await api.post('/banking/connect', {\r\n      bankCode,\r\n      credentials\r\n    })\r\n    return response.data.data\r\n  }\r\n\r\n  // Get connected bank accounts\r\n  async getBankAccounts(): Promise<BankAccount[]> {\r\n    const response = await api.get('/banking/accounts')\r\n    return response.data.data\r\n  }\r\n\r\n  // Sync transactions from bank\r\n  async syncTransactions(\r\n    accountId: string,\r\n    fromDate?: Date,\r\n    toDate?: Date\r\n  ): Promise<BankTransaction[]> {\r\n    const response = await api.post(`/banking/sync/${accountId}`, {\r\n      fromDate: fromDate?.toISOString(),\r\n      toDate: toDate?.toISOString()\r\n    })\r\n    return response.data.data\r\n  }\r\n\r\n  // Perform bank reconciliation\r\n  async performReconciliation(\r\n    accountId: string,\r\n    companyTransactions: CompanyTransaction[]\r\n  ): Promise<ReconciliationResult> {\r\n    const response = await api.post(`/banking/reconcile/${accountId}`, {\r\n      companyTransactions\r\n    })\r\n    return response.data.data\r\n  }\r\n\r\n  // Get Malaysian transaction categories\r\n  async getTransactionCategories(): Promise<{\r\n    income: TransactionCategory[]\r\n    expenses: TransactionCategory[]\r\n  }> {\r\n    const response = await api.get('/banking/categories')\r\n    return response.data.data\r\n  }\r\n\r\n  // Get bank connection status\r\n  async getBankStatus(bankCode: string): Promise<BankStatus> {\r\n    const response = await api.get(`/banking/status/${bankCode}`)\r\n    return response.data.data\r\n  }\r\n\r\n  // Generate reconciliation report\r\n  async generateReconciliationReport(\r\n    accountId: string,\r\n    startDate?: Date,\r\n    endDate?: Date\r\n  ): Promise<ReconciliationReport> {\r\n    const params = new URLSearchParams()\r\n    if (startDate) params.append('startDate', startDate.toISOString())\r\n    if (endDate) params.append('endDate', endDate.toISOString())\r\n\r\n    const response = await api.get(`/banking/reconciliation-report/${accountId}?${params}`)\r\n    return response.data.data\r\n  }\r\n\r\n  // Disconnect bank\r\n  async disconnectBank(bankCode: string): Promise<void> {\r\n    await api.delete(`/banking/disconnect/${bankCode}`)\r\n  }\r\n\r\n  // Get transaction sync history\r\n  async getSyncHistory(accountId: string): Promise<SyncHistoryItem[]> {\r\n    const response = await api.get(`/banking/sync-history/${accountId}`)\r\n    return response.data.data\r\n  }\r\n\r\n  // Update transaction category\r\n  async updateTransactionCategory(\r\n    transactionId: string,\r\n    category: string\r\n  ): Promise<void> {\r\n    await api.patch(`/banking/transactions/${transactionId}/category`, {\r\n      category\r\n    })\r\n  }\r\n\r\n  // Get Malaysian banking statistics\r\n  async getBankingStatistics(): Promise<{\r\n    totalAccounts: number\r\n    totalBalance: number\r\n    monthlyTransactions: number\r\n    lastSyncDate: Date\r\n    bankDistribution: Array<{\r\n      bankCode: string\r\n      bankName: string\r\n      accountCount: number\r\n      totalBalance: number\r\n    }>\r\n  }> {\r\n    const response = await api.get('/banking/statistics')\r\n    return response.data.data\r\n  }\r\n\r\n  // Get account balance\r\n  async getAccountBalance(accountId: string): Promise<{\r\n    accountId: string\r\n    balance: number\r\n    currency: string\r\n    lastUpdated: Date\r\n    availableBalance: number\r\n    pendingTransactions: BankTransaction[]\r\n  }> {\r\n    const response = await api.get(`/banking/balance/${accountId}`)\r\n    return response.data.data\r\n  }\r\n\r\n  // Get transaction history with pagination\r\n  async getTransactionHistory(\r\n    accountId: string,\r\n    options?: {\r\n      page?: number\r\n      limit?: number\r\n      fromDate?: Date\r\n      toDate?: Date\r\n      category?: string\r\n    }\r\n  ): Promise<{\r\n    transactions: BankTransaction[]\r\n    pagination: {\r\n      page: number\r\n      limit: number\r\n      total: number\r\n      totalPages: number\r\n    }\r\n  }> {\r\n    const params = new URLSearchParams()\r\n    if (options?.page) params.append('page', options.page.toString())\r\n    if (options?.limit) params.append('limit', options.limit.toString())\r\n    if (options?.fromDate) params.append('fromDate', options.fromDate.toISOString())\r\n    if (options?.toDate) params.append('toDate', options.toDate.toISOString())\r\n    if (options?.category) params.append('category', options.category)\r\n\r\n    const response = await api.get(`/banking/transactions/${accountId}?${params}`)\r\n    return response.data.data\r\n  }\r\n\r\n  // Export transactions\r\n  async exportTransactions(\r\n    accountId: string,\r\n    format: 'csv' | 'excel' = 'csv',\r\n    fromDate?: Date,\r\n    toDate?: Date\r\n  ): Promise<{\r\n    filename: string\r\n    url: string\r\n    recordCount: number\r\n    generatedAt: Date\r\n  }> {\r\n    const params = new URLSearchParams()\r\n    params.append('format', format)\r\n    if (fromDate) params.append('fromDate', fromDate.toISOString())\r\n    if (toDate) params.append('toDate', toDate.toISOString())\r\n\r\n    const response = await api.get(`/banking/export/${accountId}?${params}`)\r\n    return response.data.data\r\n  }\r\n\r\n  // Malaysian bank utilities\r\n  formatCurrency(amount: number, currency: string = 'MYR'): string {\r\n    return new Intl.NumberFormat('ms-MY', {\r\n      style: 'currency',\r\n      currency: currency\r\n    }).format(amount)\r\n  }\r\n\r\n  getBankLogo(bankCode: string): string {\r\n    const logoMap: Record<string, string> = {\r\n      'MBB': 'üè¶',\r\n      'CIMB': 'üèõÔ∏è',\r\n      'PBB': 'üè™',\r\n      'RHB': 'üè¨',\r\n      'HLB': 'üè¢',\r\n      'BIMB': 'üïå',\r\n      'BSN': 'üèõÔ∏è',\r\n      'AMB': 'üíº',\r\n      'ABMB': 'üåü',\r\n      'UOB': 'üåè'\r\n    }\r\n    return logoMap[bankCode] || 'üè¶'\r\n  }\r\n\r\n  getBankDisplayName(bankCode: string): string {\r\n    const bankNames: Record<string, string> = {\r\n      'MBB': 'Maybank',\r\n      'CIMB': 'CIMB Bank',\r\n      'PBB': 'Public Bank',\r\n      'RHB': 'RHB Bank',\r\n      'HLB': 'Hong Leong Bank',\r\n      'BIMB': 'Bank Islam',\r\n      'BSN': 'BSN',\r\n      'AMB': 'AmBank',\r\n      'ABMB': 'Alliance Bank',\r\n      'UOB': 'UOB Malaysia'\r\n    }\r\n    return bankNames[bankCode] || bankCode\r\n  }\r\n\r\n  validateAccountNumber(bankCode: string, accountNumber: string): boolean {\r\n    // Basic validation for Malaysian bank account numbers\r\n    const patterns: Record<string, RegExp> = {\r\n      'MBB': /^[0-9]{12}$/,\r\n      'CIMB': /^[0-9]{10,14}$/,\r\n      'PBB': /^[0-9]{10,12}$/,\r\n      'RHB': /^[0-9]{12}$/,\r\n      'HLB': /^[0-9]{10,14}$/,\r\n      'BIMB': /^[0-9]{10,14}$/,\r\n      'BSN': /^[0-9]{10,12}$/,\r\n      'AMB': /^[0-9]{12}$/,\r\n      'ABMB': /^[0-9]{12}$/,\r\n      'UOB': /^[0-9]{10,14}$/\r\n    }\r\n\r\n    const pattern = patterns[bankCode]\r\n    return pattern ? pattern.test(accountNumber) : true\r\n  }\r\n}\r\n\r\nexport const bankingService = new BankingService()\r\nexport default bankingService","import React, { useState, useEffect, useCallback } from 'react'\r\nimport {\r\n  Building2,\r\n  CreditCard,\r\n  CheckCircle,\r\n  Plus,\r\n  RefreshCw,\r\n  Shield,\r\n  Download,\r\n  Search,\r\n  Wifi,\r\n  WifiOff,\r\n  DollarSign,\r\n  PieChart,\r\n  Activity,\r\n  BarChart3\r\n} from 'lucide-react'\r\nimport bankingService from '../services/bankingService'\r\nimport type { MalaysianBank, BankAccount, BankTransaction } from '../services/bankingService'\r\n\r\ninterface BankingProps {\r\n  className?: string\r\n}\r\n\r\n// Futuristic Bank Card Component\r\nconst BankCard = ({ \r\n  bank, \r\n  account, \r\n  onConnect, \r\n  onSync,\r\n  isConnected,\r\n  isSyncing \r\n}: {\r\n  bank: MalaysianBank\r\n  account?: BankAccount\r\n  onConnect: () => void\r\n  onSync: () => void\r\n  isConnected: boolean\r\n  isSyncing: boolean\r\n}) => {\r\n  return (\r\n    <div className=\"cyber-card group hover:scale-105 transition-all duration-300 rounded-2xl p-6 relative overflow-hidden\">\r\n      {/* Background Pattern */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div className=\"absolute top-0 right-0 w-32 h-32 rounded-full bg-gradient-to-br from-futuristic-neon-blue/30 to-transparent animate-float\" />\r\n      </div>\r\n      \r\n      <div className=\"relative\">\r\n        {/* Bank Header */}\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"w-12 h-12 rounded-xl bg-gradient-to-br from-futuristic-blue-500/20 to-futuristic-purple-500/20 flex items-center justify-center border border-futuristic-blue-400/30\">\r\n              <Building2 className=\"w-6 h-6 text-futuristic-blue-400\" />\r\n            </div>\r\n            <div>\r\n        <h3 className=\"text-white font-bold text-lg\">{bankingService.getBankDisplayName(bank.code)}</h3>\r\n              <p className=\"text-futuristic-gray-400 text-sm\">{bank.code}</p>\r\n            </div>\r\n          </div>\r\n          <div className={`\r\n            w-3 h-3 rounded-full animate-pulse\r\n            ${isConnected ? 'bg-futuristic-neon-green shadow-neon' : 'bg-futuristic-gray-500'}\r\n          `} />\r\n        </div>\r\n\r\n        {/* Account Info */}\r\n        {account && (\r\n          <div className=\"mb-4 p-4 rounded-xl bg-futuristic-gray-800/50 border border-futuristic-gray-700/50\">\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <span className=\"text-futuristic-gray-400 text-sm\">Baki Semasa</span>\r\n              <span className=\"text-2xl font-bold text-futuristic-neon-green\">\r\n                RM {account.balance?.toLocaleString() || '0.00'}\r\n              </span>\r\n            </div>\r\n            <div className=\"text-xs text-futuristic-gray-500\">\r\n              A/C: {account.accountNumber?.replace(/(.{4})/g, '$1 ') || 'N/A'}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"space-y-3\">\r\n          {isConnected ? (\r\n            <button\r\n              onClick={onSync}\r\n              disabled={isSyncing}\r\n              className={`\r\n                w-full btn-cyber flex items-center justify-center space-x-2\r\n                ${isSyncing ? 'opacity-50 cursor-not-allowed' : 'hover:shadow-neon-blue'}\r\n              `}\r\n            >\r\n              <RefreshCw className={`w-4 h-4 ${isSyncing ? 'animate-spin' : ''}`} />\r\n              <span>{isSyncing ? 'Menyelaras...' : 'Selaras Data'}</span>\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={onConnect}\r\n              className=\"w-full btn-futuristic flex items-center justify-center space-x-2\"\r\n            >\r\n              <Plus className=\"w-4 h-4\" />\r\n              <span>Sambung Bank</span>\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Connection Status */}\r\n        <div className=\"mt-4 flex items-center space-x-2\">\r\n          {isConnected ? (\r\n            <>\r\n              <Wifi className=\"w-4 h-4 text-futuristic-neon-green\" />\r\n              <span className=\"text-xs text-futuristic-neon-green\">Tersambung</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <WifiOff className=\"w-4 h-4 text-futuristic-gray-500\" />\r\n              <span className=\"text-xs text-futuristic-gray-500\">Tidak Tersambung</span>\r\n            </>\r\n          )}\r\n          {/* Placeholder: determine FPX support via feature list */}\r\n          {bank.features?.includes?.('fpx') && (\r\n            <div className=\"ml-auto\">\r\n              <span className=\"px-2 py-1 bg-futuristic-neon-blue/20 text-futuristic-neon-blue text-xs rounded-full border border-futuristic-neon-blue/30\">\r\n                FPX\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Transaction Row Component\r\nconst TransactionRow = ({ transaction }: { transaction: BankTransaction }) => {\r\n  const isCredit = transaction.type === 'credit'\r\n  \r\n  return (\r\n    <div className=\"flex items-center justify-between p-4 rounded-xl bg-futuristic-gray-800/30 border border-futuristic-gray-700/30 hover:border-futuristic-blue-500/30 transition-all duration-300\">\r\n      <div className=\"flex items-center space-x-4\">\r\n        <div className={`\r\n          w-10 h-10 rounded-full flex items-center justify-center\r\n          ${isCredit ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400'}\r\n        `}>\r\n          {isCredit ? '‚ÜóÔ∏è' : '‚ÜôÔ∏è'}\r\n        </div>\r\n        <div>\r\n          <p className=\"text-white font-medium\">{transaction.description}</p>\r\n          <div className=\"flex items-center space-x-2 text-xs text-futuristic-gray-400\">\r\n            <span>{new Date(transaction.date).toLocaleDateString('ms-MY')}</span>\r\n            <span>‚Ä¢</span>\r\n            <span>{transaction.reference || 'N/A'}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-right\">\r\n        <p className={`font-bold text-lg ${isCredit ? 'text-green-400' : 'text-red-400'}`}>\r\n          {isCredit ? '+' : '-'}RM {Math.abs(transaction.amount).toLocaleString()}\r\n        </p>\r\n        <p className=\"text-xs text-futuristic-gray-400\">Baki: RM {transaction.balance?.toLocaleString() ?? 'N/A'}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Main Banking Component\r\nconst Banking: React.FC<BankingProps> = ({ className = '' }) => {\r\n  const [banks, setBanks] = useState<MalaysianBank[]>([])\r\n  const [accounts, setAccounts] = useState<BankAccount[]>([])\r\n  const [transactions, setTransactions] = useState<BankTransaction[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [syncingAccount, setSyncingAccount] = useState<string | null>(null)\r\n  const [showConnectModal, setShowConnectModal] = useState(false)\r\n  const [selectedBank, setSelectedBank] = useState<MalaysianBank | null>(null)\r\n  // Placeholder for future credential form state (currently unused)\r\n  // const [credentials, setCredentials] = useState<BankConnectionCredentials>({})\r\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'accounts' | 'transactions' | 'analytics'>('dashboard')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n\r\n  // Load initial data\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const [banksData, accountsData] = await Promise.all([\r\n          bankingService.getSupportedBanks(),\r\n          bankingService.getBankAccounts()\r\n        ])\r\n        // For transactions we reuse first account if exists to get history\r\n        let transactionsData: BankTransaction[] = []\r\n        if (accountsData[0]) {\r\n          try {\r\n            const history = await bankingService.getTransactionHistory(accountsData[0].id, { limit: 50 })\r\n            transactionsData = history.transactions\r\n          } catch (err) {\r\n            console.warn('Unable to load transaction history:', err)\r\n          }\r\n        }\r\n        \r\n        setBanks(banksData)\r\n        setAccounts(accountsData)\r\n        setTransactions(transactionsData)\r\n      } catch (error) {\r\n        console.error('Failed to load banking data:', error)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    loadData()\r\n  }, [])\r\n\r\n  const handleConnectBank = useCallback(async (bank: MalaysianBank) => {\r\n    setSelectedBank(bank)\r\n    setShowConnectModal(true)\r\n  }, [])\r\n\r\n  const handleSyncAccount = useCallback(async (accountId: string) => {\r\n    try {\r\n      setSyncingAccount(accountId)\r\n      await bankingService.syncTransactions(accountId)\r\n      \r\n      // Refresh data after sync\r\n      const updatedAccounts = await bankingService.getBankAccounts()\r\n      setAccounts(updatedAccounts)\r\n      if (updatedAccounts[0]) {\r\n        try {\r\n          const history = await bankingService.getTransactionHistory(updatedAccounts[0].id, { limit: 50 })\r\n          setTransactions(history.transactions)\r\n        } catch (e) {\r\n          console.warn('Failed to refresh transaction history after sync', e)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to sync account:', error)\r\n    } finally {\r\n      setSyncingAccount(null)\r\n    }\r\n  }, [])\r\n\r\n  // Use isActive to represent active/connected accounts (service does not expose isConnected)\r\n  const connectedAccounts = accounts.filter(acc => acc.isActive)\r\n  const totalBalance = connectedAccounts.reduce((sum, acc) => sum + (acc.balance || 0), 0)\r\n  const recentTransactions = transactions.slice(0, 10)\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-futuristic-dark via-futuristic-gray-900 to-futuristic-darker flex items-center justify-center\">\r\n        <div className=\"text-center space-y-6\">\r\n          <div className=\"relative\">\r\n            <div className=\"w-20 h-20 border-4 border-futuristic-neon-blue/30 rounded-full animate-spin border-t-futuristic-neon-blue\"></div>\r\n            <div className=\"absolute inset-0 w-20 h-20 border-4 border-futuristic-neon-green/30 rounded-full animate-spin border-t-futuristic-neon-green animate-reverse\"></div>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <h2 className=\"text-2xl font-bold text-white animate-pulse\">Memuat Sistem Perbankan</h2>\r\n            <p className=\"text-futuristic-gray-400 animate-pulse\">Menghubung ke bank-bank Malaysia...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={`space-y-8 animate-fade-in-up ${className}`}>\r\n      {/* Header Section */}\r\n      <div className=\"relative overflow-hidden rounded-3xl bg-gradient-to-r from-futuristic-cyan-600/20 to-futuristic-blue-600/20 backdrop-blur-xl border border-futuristic-cyan-400/20 p-8\">\r\n        <div className=\"absolute inset-0 opacity-20\">\r\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-r from-transparent via-futuristic-neon-blue/10 to-transparent animate-data-flow\"></div>\r\n        </div>\r\n        \r\n        <div className=\"relative\">\r\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\r\n            <div>\r\n              <h1 className=\"text-3xl lg:text-4xl font-bold bg-gradient-to-r from-futuristic-neon-cyan via-futuristic-neon-blue to-futuristic-neon-green bg-clip-text text-transparent mb-2\">\r\n                Sistem Perbankan Malaysia\r\n              </h1>\r\n              <p className=\"text-futuristic-gray-400 text-lg\">\r\n                Pengurusan akaun bank dan transaksi secara real-time\r\n              </p>\r\n            </div>\r\n            <div className=\"flex flex-wrap gap-3\">\r\n              <span className=\"px-4 py-2 bg-green-500/20 text-green-400 rounded-full text-sm font-semibold border border-green-500/30 animate-glow-pulse\">\r\n                üè¶ {connectedAccounts.length} Bank Tersambung\r\n              </span>\r\n              <span className=\"px-4 py-2 bg-blue-500/20 text-blue-400 rounded-full text-sm font-semibold border border-blue-500/30 animate-glow-pulse\">\r\n                üí≥ FPX Ready\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Overview */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <div className=\"cyber-card rounded-2xl p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"w-12 h-12 rounded-xl bg-gradient-to-br from-futuristic-neon-green/20 to-green-500/20 flex items-center justify-center border border-futuristic-neon-green/30\">\r\n              <DollarSign className=\"w-6 h-6 text-futuristic-neon-green\" />\r\n            </div>\r\n            <span className=\"text-futuristic-neon-green text-sm animate-pulse\">Live</span>\r\n          </div>\r\n          <p className=\"text-futuristic-gray-400 text-sm mb-2\">Jumlah Baki</p>\r\n          <p className=\"text-3xl font-bold text-futuristic-neon-green text-glow\">\r\n            RM {totalBalance.toLocaleString()}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"cyber-card rounded-2xl p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"w-12 h-12 rounded-xl bg-gradient-to-br from-futuristic-blue-500/20 to-futuristic-blue-600/20 flex items-center justify-center border border-futuristic-blue-400/30\">\r\n              <Building2 className=\"w-6 h-6 text-futuristic-blue-400\" />\r\n            </div>\r\n          </div>\r\n          <p className=\"text-futuristic-gray-400 text-sm mb-2\">Akaun Aktif</p>\r\n          <p className=\"text-3xl font-bold text-futuristic-blue-400\">\r\n            {connectedAccounts.length}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"cyber-card rounded-2xl p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"w-12 h-12 rounded-xl bg-gradient-to-br from-futuristic-purple-500/20 to-futuristic-purple-600/20 flex items-center justify-center border border-futuristic-purple-400/30\">\r\n              <Activity className=\"w-6 h-6 text-futuristic-purple-400\" />\r\n            </div>\r\n          </div>\r\n          <p className=\"text-futuristic-gray-400 text-sm mb-2\">Transaksi Hari Ini</p>\r\n          <p className=\"text-3xl font-bold text-futuristic-purple-400\">\r\n            {transactions.filter(t => \r\n              new Date(t.date).toDateString() === new Date().toDateString()\r\n            ).length}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"cyber-card rounded-2xl p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"w-12 h-12 rounded-xl bg-gradient-to-br from-futuristic-cyan-500/20 to-futuristic-cyan-600/20 flex items-center justify-center border border-futuristic-cyan-400/30\">\r\n              <CheckCircle className=\"w-6 h-6 text-futuristic-cyan-400\" />\r\n            </div>\r\n          </div>\r\n          <p className=\"text-futuristic-gray-400 text-sm mb-2\">Status Sistem</p>\r\n          <p className=\"text-lg font-bold text-futuristic-neon-green\">\r\n            Operasi Normal\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Navigation Tabs */}\r\n      <div className=\"flex flex-wrap gap-2 p-2 bg-futuristic-gray-800/50 backdrop-blur-sm rounded-2xl border border-futuristic-gray-700/50\">\r\n        {([\r\n          { id: 'dashboard', label: 'üè† Dashboard', icon: Activity },\r\n          { id: 'accounts', label: 'üè¶ Akaun Bank', icon: Building2 },\r\n          { id: 'transactions', label: 'üí≥ Transaksi', icon: CreditCard },\r\n          { id: 'analytics', label: 'üìä Analisis', icon: BarChart3 }\r\n        ] as const).map((tab) => (\r\n          <button\r\n            key={tab.id}\r\n            onClick={() => setActiveTab(tab.id)}\r\n            className={`\r\n              flex items-center space-x-2 px-4 py-3 rounded-xl font-medium transition-all duration-300\r\n              ${activeTab === tab.id\r\n                ? 'bg-gradient-to-r from-futuristic-neon-blue/20 to-futuristic-neon-purple/20 text-futuristic-neon-blue border border-futuristic-neon-blue/30 shadow-glow'\r\n                : 'text-futuristic-gray-400 hover:text-white hover:bg-futuristic-gray-700/50'\r\n              }\r\n            `}\r\n          >\r\n            <tab.icon className=\"w-4 h-4\" />\r\n            <span className=\"hidden sm:inline\">{tab.label.split(' ').slice(1).join(' ')}</span>\r\n            <span className=\"sm:hidden\">{tab.label.split(' ')[0]}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Content based on active tab */}\r\n      {activeTab === 'dashboard' && (\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          {/* Recent Transactions */}\r\n          <div className=\"cyber-card rounded-2xl p-6\">\r\n            <h3 className=\"text-xl font-bold text-white mb-6 flex items-center\">\r\n              <Activity className=\"w-6 h-6 mr-3 text-futuristic-neon-blue\" />\r\n              Transaksi Terkini\r\n            </h3>\r\n            <div className=\"space-y-4 max-h-96 overflow-y-auto\">\r\n              {recentTransactions.map((transaction, index) => (\r\n                <div key={transaction.id} style={{ animationDelay: `${index * 100}ms` }}>\r\n                  <TransactionRow transaction={transaction} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Actions */}\r\n          <div className=\"cyber-card rounded-2xl p-6\">\r\n            <h3 className=\"text-xl font-bold text-white mb-6 flex items-center\">\r\n              <Shield className=\"w-6 h-6 mr-3 text-futuristic-neon-green\" />\r\n              Tindakan Pantas\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              <button className=\"w-full btn-futuristic flex items-center justify-center space-x-3\">\r\n                <Plus className=\"w-5 h-5\" />\r\n                <span>Sambung Bank Baharu</span>\r\n              </button>\r\n              <button className=\"w-full btn-cyber flex items-center justify-center space-x-3\">\r\n                <RefreshCw className=\"w-5 h-5\" />\r\n                <span>Selaras Semua Akaun</span>\r\n              </button>\r\n              <button className=\"w-full btn-cyber flex items-center justify-center space-x-3\">\r\n                <Download className=\"w-5 h-5\" />\r\n                <span>Muat Turun Laporan</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'accounts' && (\r\n        <div>\r\n          {/* Search Bar */}\r\n          <div className=\"mb-6\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-futuristic-gray-400 w-5 h-5\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Cari bank atau akaun...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full pl-12 pr-4 py-3 bg-futuristic-gray-800/50 border border-futuristic-gray-700/50 rounded-xl text-white placeholder-futuristic-gray-400 focus:border-futuristic-blue-500 focus:outline-none transition-colors\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Banks Grid */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {banks\r\n              .filter(bank => \r\n                bankingService.getBankDisplayName(bank.code).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                bank.code.toLowerCase().includes(searchTerm.toLowerCase())\r\n              )\r\n              .map((bank, index) => {\r\n                const account = accounts.find(acc => acc.bankCode === bank.code)\r\n                return (\r\n                  <div key={bank.code} style={{ animationDelay: `${index * 100}ms` }}>\r\n                    <BankCard\r\n                      bank={bank}\r\n                      account={account}\r\n                      onConnect={() => handleConnectBank(bank)}\r\n                      onSync={() => account && handleSyncAccount(account.id)}\r\n                      isConnected={!!account?.isActive}\r\n                      isSyncing={syncingAccount === account?.id}\r\n                    />\r\n                  </div>\r\n                )\r\n              })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'transactions' && (\r\n        <div className=\"cyber-card rounded-2xl p-6\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h3 className=\"text-xl font-bold text-white flex items-center\">\r\n              <CreditCard className=\"w-6 h-6 mr-3 text-futuristic-neon-purple\" />\r\n              Semua Transaksi\r\n            </h3>\r\n            <button className=\"btn-cyber\">\r\n              <Download className=\"w-4 h-4 mr-2\" />\r\n              Export\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4 max-h-96 overflow-y-auto\">\r\n            {transactions.map((transaction, index) => (\r\n              <div key={transaction.id} style={{ animationDelay: `${index * 50}ms` }}>\r\n                <TransactionRow transaction={transaction} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'analytics' && (\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          <div className=\"cyber-card rounded-2xl p-6\">\r\n            <h3 className=\"text-xl font-bold text-white mb-6 flex items-center\">\r\n              <PieChart className=\"w-6 h-6 mr-3 text-futuristic-neon-cyan\" />\r\n              Analisis Aliran Tunai\r\n            </h3>\r\n            <div className=\"h-64 bg-gradient-to-br from-futuristic-gray-800/50 to-futuristic-gray-700/50 rounded-xl flex items-center justify-center border border-futuristic-gray-600/50\">\r\n              <div className=\"text-center\">\r\n                <PieChart className=\"w-16 h-16 text-futuristic-gray-500 mx-auto mb-4\" />\r\n                <p className=\"text-futuristic-gray-400\">Carta analisis akan dipaparkan di sini</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"cyber-card rounded-2xl p-6\">\r\n            <h3 className=\"text-xl font-bold text-white mb-6 flex items-center\">\r\n              <BarChart3 className=\"w-6 h-6 mr-3 text-futuristic-neon-purple\" />\r\n              Trend Bulanan\r\n            </h3>\r\n            <div className=\"h-64 bg-gradient-to-br from-futuristic-gray-800/50 to-futuristic-gray-700/50 rounded-xl flex items-center justify-center border border-futuristic-gray-600/50\">\r\n              <div className=\"text-center\">\r\n                <BarChart3 className=\"w-16 h-16 text-futuristic-gray-500 mx-auto mb-4\" />\r\n                <p className=\"text-futuristic-gray-400\">Carta trend akan dipaparkan di sini</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Connect Bank Modal */}\r\n      {showConnectModal && selectedBank && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\r\n          <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm\" onClick={() => setShowConnectModal(false)} />\r\n          <div className=\"relative bg-gradient-to-br from-futuristic-gray-900/95 to-futuristic-dark/95 backdrop-blur-xl border border-futuristic-blue-400/20 rounded-2xl p-8 max-w-md w-full shadow-cyber\">\r\n            <h3 className=\"text-2xl font-bold text-white mb-6\">Sambung ke {bankingService.getBankDisplayName(selectedBank.code)}</h3>\r\n            \r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-futuristic-gray-400 text-sm mb-2\">ID Pengguna</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"w-full px-4 py-3 bg-futuristic-gray-800/50 border border-futuristic-gray-700/50 rounded-xl text-white focus:border-futuristic-blue-500 focus:outline-none\"\r\n                  placeholder=\"Masukkan ID pengguna bank\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-futuristic-gray-400 text-sm mb-2\">Kata Laluan</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"w-full px-4 py-3 bg-futuristic-gray-800/50 border border-futuristic-gray-700/50 rounded-xl text-white focus:border-futuristic-blue-500 focus:outline-none\"\r\n                  placeholder=\"Masukkan kata laluan\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex space-x-4 mt-8\">\r\n              <button\r\n                onClick={() => setShowConnectModal(false)}\r\n                className=\"flex-1 px-6 py-3 bg-futuristic-gray-700 text-white rounded-xl hover:bg-futuristic-gray-600 transition-colors\"\r\n              >\r\n                Batal\r\n              </button>\r\n              <button className=\"flex-1 btn-futuristic\">\r\n                Sambung\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Banking"],"mappings":"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"}
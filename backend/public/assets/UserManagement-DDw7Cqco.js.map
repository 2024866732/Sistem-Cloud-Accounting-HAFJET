{"version":3,"file":"UserManagement-DDw7Cqco.js","names":["TwoFactorModal: React.FC<Props>","UserManagement: React.FC","payloadUnknown: unknown"],"sources":["../../src/components/TwoFactorModal.tsx","../../src/pages/UserManagement.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ninterface Props {\r\n  open: boolean\r\n  onClose: () => void\r\n  qrDataUrl?: string\r\n  secret?: string\r\n  backupCodes?: string[]\r\n}\r\n\r\nconst TwoFactorModal: React.FC<Props> = ({ open, onClose, qrDataUrl, secret, backupCodes }) => {\r\n  if (!open) return null\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n      <div className=\"bg-white dark:bg-gray-900 rounded-2xl p-6 w-full max-w-lg\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Two-Factor Authentication</h3>\r\n          <button onClick={onClose} className=\"text-gray-500\">✕</button>\r\n        </div>\r\n\r\n        <div className=\"space-y-4 text-gray-800 dark:text-gray-200\">\r\n          {qrDataUrl ? (\r\n            <div className=\"flex items-center space-x-4\">\r\n              <img src={qrDataUrl} alt=\"2FA QR\" className=\"w-32 h-32 bg-white p-2 rounded-md\" />\r\n              <div>\r\n                <p className=\"text-sm\">Scan this QR with your authenticator app.</p>\r\n                {secret && (\r\n                  <div className=\"mt-2 text-sm\">\r\n                    <div className=\"font-mono bg-gray-100 dark:bg-gray-800 px-3 py-1 rounded-md inline-block\">{secret}</div>\r\n                    <button\r\n                      onClick={() => { navigator.clipboard?.writeText(secret) }}\r\n                      className=\"ml-2 text-xs text-blue-600\"\r\n                    >Copy</button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {backupCodes && backupCodes.length > 0 && (\r\n            <div>\r\n              <h4 className=\"font-medium\">Backup codes</h4>\r\n              <p className=\"text-sm mb-2\">Store these in a safe place. Each code can be used once.</p>\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                {backupCodes.map((c, i) => (\r\n                  <div key={i} className=\"p-2 bg-gray-100 dark:bg-gray-800 rounded-md font-mono text-sm flex justify-between items-center\">\r\n                    <span>{c}</span>\r\n                    <button onClick={() => navigator.clipboard?.writeText(c)} className=\"text-xs text-blue-600 ml-2\">Copy</button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"text-right\">\r\n            <button onClick={onClose} className=\"px-4 py-2 bg-blue-600 text-white rounded-lg\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TwoFactorModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport { \r\n  Users, Plus, Edit3, Trash2, Shield, Eye,\r\n  Search, Download, Upload, UserCheck, UserX,\r\n  Crown, Lock, Activity, Settings, Mail\r\n} from 'lucide-react'\r\nimport TwoFactorModal from '../components/TwoFactorModal'\r\nimport { settingsService, authService } from '../services/api'\r\n\r\ninterface User {\r\n  id: string\r\n  name: string\r\n  email: string\r\n  phone?: string\r\n  role: 'super_admin' | 'admin' | 'manager' | 'accountant' | 'staff' | 'viewer'\r\n  permissions: string[]\r\n  status: 'active' | 'inactive' | 'suspended'\r\n  lastLogin?: Date\r\n  createdAt: Date\r\n  department?: string\r\n  companyId?: string\r\n  avatar?: string\r\n  twoFactorEnabled: boolean\r\n}\r\n\r\ninterface Role {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  permissions: string[]\r\n  color: string\r\n}\r\n\r\ninterface AuditLog {\r\n  id: string\r\n  userId: string\r\n  userName: string\r\n  action: string\r\n  resource: string\r\n  timestamp: Date\r\n  ipAddress: string\r\n  userAgent: string\r\n  details?: object\r\n}\r\n\r\nconst UserManagement: React.FC = () => {\r\n  const [users, setUsers] = useState<User[]>([])\r\n  const [roles, setRoles] = useState<Role[]>([])\r\n  const [auditLogs, setAuditLogs] = useState<AuditLog[]>([])\r\n  const [activeTab, setActiveTab] = useState<'users' | 'roles' | 'audit' | 'settings'>('users')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [filterRole, setFilterRole] = useState<string>('all')\r\n  const [filterStatus, setFilterStatus] = useState<string>('all')\r\n  const [loading, setLoading] = useState(true)\r\n  const [currentUser, setCurrentUser] = useState<unknown | null>(null)\r\n  const [twoFaModalOpen, setTwoFaModalOpen] = useState(false)\r\n  const [qrData, setQrData] = useState<{ qr?: string; secret?: string } | null>(null)\r\n  const [backupCodes, setBackupCodes] = useState<string[] | undefined>(undefined)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n      \r\n      // Mock roles\r\n      setRoles([\r\n        {\r\n          id: '1',\r\n          name: 'Super Admin',\r\n          description: 'Full system access and control',\r\n          permissions: ['all'],\r\n          color: 'from-red-500 to-red-600'\r\n        },\r\n        {\r\n          id: '2',\r\n          name: 'Admin',\r\n          description: 'Administrative access to all modules',\r\n          permissions: ['users.manage', 'settings.manage', 'reports.view', 'transactions.manage'],\r\n          color: 'from-purple-500 to-purple-600'\r\n        },\r\n        {\r\n          id: '3',\r\n          name: 'Manager',\r\n          description: 'Management level access',\r\n          permissions: ['reports.view', 'transactions.view', 'invoices.manage', 'analytics.view'],\r\n          color: 'from-blue-500 to-blue-600'\r\n        },\r\n        {\r\n          id: '4',\r\n          name: 'Accountant',\r\n          description: 'Accounting and financial operations',\r\n          permissions: ['transactions.manage', 'invoices.manage', 'reports.view'],\r\n          color: 'from-green-500 to-green-600'\r\n        },\r\n        {\r\n          id: '5',\r\n          name: 'Staff',\r\n          description: 'Basic operational access',\r\n          permissions: ['transactions.create', 'invoices.create'],\r\n          color: 'from-yellow-500 to-yellow-600'\r\n        },\r\n        {\r\n          id: '6',\r\n          name: 'Viewer',\r\n          description: 'Read-only access',\r\n          permissions: ['reports.view', 'transactions.view'],\r\n          color: 'from-gray-500 to-gray-600'\r\n        }\r\n      ])\r\n\r\n      // Mock users\r\n      setUsers([\r\n        {\r\n          id: '1',\r\n          name: 'Ahmad Rahman',\r\n          email: 'ahmad.rahman@hafjet.com',\r\n          phone: '+601234567890',\r\n          role: 'super_admin',\r\n          permissions: ['all'],\r\n          status: 'active',\r\n          lastLogin: new Date(Date.now() - 30 * 60 * 1000),\r\n          createdAt: new Date(Date.now() - 365 * 24 * 60 * 60 * 1000),\r\n          department: 'IT Administration',\r\n          twoFactorEnabled: true\r\n        },\r\n        {\r\n          id: '2',\r\n          name: 'Siti Nurhaliza',\r\n          email: 'siti.nurhaliza@hafjet.com',\r\n          phone: '+601234567891',\r\n          role: 'admin',\r\n          permissions: ['users.manage', 'settings.manage', 'reports.view'],\r\n          status: 'active',\r\n          lastLogin: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n          createdAt: new Date(Date.now() - 200 * 24 * 60 * 60 * 1000),\r\n          department: 'Administration',\r\n          twoFactorEnabled: true\r\n        },\r\n        {\r\n          id: '3',\r\n          name: 'Lim Wei Ming',\r\n          email: 'lim.weiming@hafjet.com',\r\n          phone: '+601234567892',\r\n          role: 'manager',\r\n          permissions: ['reports.view', 'transactions.view', 'invoices.manage'],\r\n          status: 'active',\r\n          lastLogin: new Date(Date.now() - 4 * 60 * 60 * 1000),\r\n          createdAt: new Date(Date.now() - 150 * 24 * 60 * 60 * 1000),\r\n          department: 'Finance',\r\n          twoFactorEnabled: false\r\n        },\r\n        {\r\n          id: '4',\r\n          name: 'Kavitha Ramasamy',\r\n          email: 'kavitha.ramasamy@hafjet.com',\r\n          phone: '+601234567893',\r\n          role: 'accountant',\r\n          permissions: ['transactions.manage', 'invoices.manage', 'reports.view'],\r\n          status: 'active',\r\n          lastLogin: new Date(Date.now() - 6 * 60 * 60 * 1000),\r\n          createdAt: new Date(Date.now() - 100 * 24 * 60 * 60 * 1000),\r\n          department: 'Accounting',\r\n          twoFactorEnabled: true\r\n        },\r\n        {\r\n          id: '5',\r\n          name: 'David Tan',\r\n          email: 'david.tan@hafjet.com',\r\n          phone: '+601234567894',\r\n          role: 'staff',\r\n          permissions: ['transactions.create', 'invoices.create'],\r\n          status: 'inactive',\r\n          lastLogin: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),\r\n          createdAt: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000),\r\n          department: 'Operations',\r\n          twoFactorEnabled: false\r\n        }\r\n      ])\r\n\r\n      // Mock audit logs\r\n      setAuditLogs([\r\n        {\r\n          id: '1',\r\n          userId: '1',\r\n          userName: 'Ahmad Rahman',\r\n          action: 'User Login',\r\n          resource: 'Authentication',\r\n          timestamp: new Date(Date.now() - 30 * 60 * 1000),\r\n          ipAddress: '192.168.1.100',\r\n          userAgent: 'Mozilla/5.0 Chrome/118.0'\r\n        },\r\n        {\r\n          id: '2',\r\n          userId: '2',\r\n          userName: 'Siti Nurhaliza',\r\n          action: 'Created Invoice',\r\n          resource: 'INV-2025-001',\r\n          timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n          ipAddress: '192.168.1.101',\r\n          userAgent: 'Mozilla/5.0 Chrome/118.0'\r\n        },\r\n        {\r\n          id: '3',\r\n          userId: '3',\r\n          userName: 'Lim Wei Ming',\r\n          action: 'Generated Report',\r\n          resource: 'Profit & Loss Report',\r\n          timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000),\r\n          ipAddress: '192.168.1.102',\r\n          userAgent: 'Mozilla/5.0 Safari/605.1'\r\n        }\r\n      ])\r\n      \r\n      // also fetch current user from auth service if available\r\n      try {\r\n        const me = await authService.getCurrentUser()\r\n        setCurrentUser(me?.data || null)\r\n      } catch {\r\n        // keep mock users if auth not configured in dev\r\n        setCurrentUser(null)\r\n      }\r\n      setLoading(false)\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  const getTimeAgo = (date: Date) => {\r\n    const now = new Date()\r\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60))\r\n    \r\n    if (diffInMinutes < 60) {\r\n      return `${diffInMinutes} minutes ago`\r\n    } else if (diffInMinutes < 1440) {\r\n      return `${Math.floor(diffInMinutes / 60)} hours ago`\r\n    } else {\r\n      return `${Math.floor(diffInMinutes / 1440)} days ago`\r\n    }\r\n  }\r\n\r\n  const getRoleColor = (role: string) => {\r\n    const roleData = roles.find(r => r.name.toLowerCase().replace(' ', '_') === role)\r\n    return roleData?.color || 'from-gray-500 to-gray-600'\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'text-green-400 bg-green-500/10'\r\n      case 'inactive': return 'text-gray-400 bg-gray-500/10'\r\n      case 'suspended': return 'text-red-400 bg-red-500/10'\r\n      default: return 'text-blue-400 bg-blue-500/10'\r\n    }\r\n  }\r\n\r\n  const filteredUsers = users.filter(user => {\r\n    const matchesSearch = user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         user.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n    const matchesRole = filterRole === 'all' || user.role === filterRole\r\n    const matchesStatus = filterStatus === 'all' || user.status === filterStatus\r\n    return matchesSearch && matchesRole && matchesStatus\r\n  })\r\n\r\n  const toggleUserStatus = (userId: string) => {\r\n    setUsers(prev => prev.map(user => \r\n      user.id === userId \r\n        ? { ...user, status: user.status === 'active' ? 'inactive' : 'active' }\r\n        : user\r\n    ))\r\n  }\r\n\r\n  const toggle2FA = (userId: string) => {\r\n    setUsers(prev => prev.map(user => \r\n      user.id === userId \r\n        ? { ...user, twoFactorEnabled: !user.twoFactorEnabled }\r\n        : user\r\n    ))\r\n  }\r\n\r\n  const renderUserManagement = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Controls */}\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\r\n          <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/60 h-4 w-4\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search users...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 bg-white/10 border border-white/30 rounded-xl text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            \r\n            <select \r\n              value={filterRole}\r\n              onChange={(e) => setFilterRole(e.target.value)}\r\n              className=\"bg-white/10 border border-white/30 rounded-xl px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"all\" className=\"bg-gray-800\">All Roles</option>\r\n              {roles.map(role => (\r\n                <option key={role.id} value={role.name.toLowerCase().replace(' ', '_')} className=\"bg-gray-800\">\r\n                  {role.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <select \r\n              value={filterStatus}\r\n              onChange={(e) => setFilterStatus(e.target.value)}\r\n              className=\"bg-white/10 border border-white/30 rounded-xl px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"all\" className=\"bg-gray-800\">All Status</option>\r\n              <option value=\"active\" className=\"bg-gray-800\">Active</option>\r\n              <option value=\"inactive\" className=\"bg-gray-800\">Inactive</option>\r\n              <option value=\"suspended\" className=\"bg-gray-800\">Suspended</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3\">\r\n            <button className=\"bg-blue-600 text-white px-4 py-2 rounded-xl font-medium hover:bg-blue-700 transition-colors\">\r\n              <Upload className=\"inline h-4 w-4 mr-2\" />\r\n              Import\r\n            </button>\r\n            <button className=\"bg-green-600 text-white px-4 py-2 rounded-xl font-medium hover:bg-green-700 transition-colors\">\r\n              <Download className=\"inline h-4 w-4 mr-2\" />\r\n              Export\r\n            </button>\r\n            <button className=\"bg-gradient-to-r from-purple-600 to-blue-600 text-white px-4 py-2 rounded-xl font-medium hover:shadow-lg transition-all duration-300\">\r\n              <Plus className=\"inline h-4 w-4 mr-2\" />\r\n              Add User\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Users Grid */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {filteredUsers.map((user) => (\r\n          <div key={user.id} className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 hover:shadow-lg transition-all duration-300\">\r\n            <div className=\"flex items-start justify-between mb-4\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"h-12 w-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold text-lg\">\r\n                  {user.name.charAt(0)}\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-white font-semibold\">{user.name}</h3>\r\n                  <p className=\"text-white/60 text-sm\">{user.email}</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex space-x-2\">\r\n                <button className=\"p-2 text-white/60 hover:text-blue-400 hover:bg-blue-500/10 rounded-xl transition-colors\">\r\n                  <Edit3 className=\"h-4 w-4\" />\r\n                </button>\r\n                <button className=\"p-2 text-white/60 hover:text-red-400 hover:bg-red-500/10 rounded-xl transition-colors\">\r\n                  <Trash2 className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-3 mb-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-white/80 text-sm\">Role</span>\r\n                <span className={`px-3 py-1 rounded-full text-xs font-medium text-white bg-gradient-to-r ${getRoleColor(user.role)}`}>\r\n                  {user.role.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-white/80 text-sm\">Status</span>\r\n                <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(user.status)}`}>\r\n                  {user.status.charAt(0).toUpperCase() + user.status.slice(1)}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-white/80 text-sm\">2FA</span>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  {user.twoFactorEnabled ? (\r\n                    <Shield className=\"h-4 w-4 text-green-400\" />\r\n                  ) : (\r\n                    <Lock className=\"h-4 w-4 text-red-400\" />\r\n                  )}\r\n                  <button\r\n                    onClick={() => toggle2FA(user.id)}\r\n                    className=\"text-blue-400 hover:text-blue-300 text-xs\"\r\n                  >\r\n                    {user.twoFactorEnabled ? 'Disable' : 'Enable'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              \r\n              {user.lastLogin && (\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-white/80 text-sm\">Last Login</span>\r\n                  <span className=\"text-white/60 text-xs\">{getTimeAgo(user.lastLogin)}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex space-x-3\">\r\n              <button\r\n                onClick={() => toggleUserStatus(user.id)}\r\n                className={`flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-colors ${\r\n                  user.status === 'active'\r\n                    ? 'bg-red-600 text-white hover:bg-red-700'\r\n                    : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                {user.status === 'active' ? (\r\n                  <>\r\n                    <UserX className=\"inline h-4 w-4 mr-2\" />\r\n                    Deactivate\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <UserCheck className=\"inline h-4 w-4 mr-2\" />\r\n                    Activate\r\n                  </>\r\n                )}\r\n              </button>\r\n              \r\n              <button className=\"py-2 px-4 bg-blue-600 text-white rounded-xl text-sm font-medium hover:bg-blue-700 transition-colors\">\r\n                <Mail className=\"inline h-4 w-4 mr-2\" />\r\n                Email\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {filteredUsers.length === 0 && (\r\n        <div className=\"text-center py-12\">\r\n          <Users className=\"h-16 w-16 text-white/40 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-semibold text-white/80 mb-2\">No users found</h3>\r\n          <p className=\"text-white/60\">Try adjusting your search criteria.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  const renderRoleManagement = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-xl font-bold text-white\">User Roles & Permissions</h3>\r\n          <button className=\"bg-gradient-to-r from-purple-600 to-blue-600 text-white px-4 py-2 rounded-xl font-medium hover:shadow-lg transition-all duration-300\">\r\n            <Plus className=\"inline h-4 w-4 mr-2\" />\r\n            Create Role\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {roles.map((role) => (\r\n            <div key={role.id} className=\"bg-white/10 rounded-2xl p-6 border border-white/20\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <div className={`p-3 rounded-xl bg-gradient-to-r ${role.color} text-white`}>\r\n                  <Crown className=\"h-6 w-6\" />\r\n                </div>\r\n                <button className=\"p-2 text-white/60 hover:text-blue-400 hover:bg-blue-500/10 rounded-xl transition-colors\">\r\n                  <Edit3 className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n              \r\n              <h4 className=\"text-white font-semibold mb-2\">{role.name}</h4>\r\n              <p className=\"text-white/70 text-sm mb-4\">{role.description}</p>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <h5 className=\"text-white/80 text-sm font-medium\">Permissions</h5>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {role.permissions.slice(0, 3).map((permission, index) => (\r\n                    <span key={index} className=\"px-2 py-1 bg-white/20 text-white/80 text-xs rounded-lg\">\r\n                      {permission}\r\n                    </span>\r\n                  ))}\r\n                  {role.permissions.length > 3 && (\r\n                    <span className=\"px-2 py-1 bg-white/20 text-white/80 text-xs rounded-lg\">\r\n                      +{role.permissions.length - 3} more\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"mt-4 pt-4 border-t border-white/20\">\r\n                <div className=\"flex justify-between text-sm\">\r\n                  <span className=\"text-white/60\">Users with this role</span>\r\n                  <span className=\"text-white font-medium\">\r\n                    {users.filter(u => u.role === role.name.toLowerCase().replace(' ', '_')).length}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const renderAuditLogs = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n        <h3 className=\"text-xl font-bold text-white mb-6\">User Activity Audit Trail</h3>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {auditLogs.map((log) => (\r\n            <div key={log.id} className=\"bg-white/10 rounded-xl p-4 border border-white/20\">\r\n              <div className=\"flex items-start justify-between\">\r\n                <div className=\"flex items-start space-x-4\">\r\n                  <div className=\"bg-blue-500/20 p-2 rounded-xl\">\r\n                    <Activity className=\"h-5 w-5 text-blue-400\" />\r\n                  </div>\r\n                  \r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center space-x-2 mb-2\">\r\n                      <h4 className=\"text-white font-semibold\">{log.action}</h4>\r\n                      <span className=\"px-2 py-1 bg-blue-500/20 text-blue-400 text-xs rounded-lg\">\r\n                        {log.resource}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n                      <div>\r\n                        <span className=\"text-white/60\">User: </span>\r\n                        <span className=\"text-white\">{log.userName}</span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-white/60\">IP Address: </span>\r\n                        <span className=\"text-white\">{log.ipAddress}</span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-white/60\">Time: </span>\r\n                        <span className=\"text-white\">{getTimeAgo(log.timestamp)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <button className=\"p-2 text-white/60 hover:text-blue-400 hover:bg-blue-500/10 rounded-xl transition-colors\">\r\n                  <Eye className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 to-purple-900 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-white mb-2\">\r\n            👥 User Management\r\n          </h1>\r\n          <p className=\"text-white/80 text-lg\">\r\n            🔐 Comprehensive user management with role-based permissions and audit trails\r\n          </p>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30 mb-8\">\r\n          <div className=\"flex space-x-2\">\r\n            {[\r\n              { id: 'users', label: 'Users', icon: Users, count: users.length },\r\n              { id: 'roles', label: 'Roles & Permissions', icon: Shield, count: roles.length },\r\n              { id: 'audit', label: 'Audit Logs', icon: Activity, count: auditLogs.length },\r\n              { id: 'settings', label: 'Security Settings', icon: Settings, count: 0 }\r\n            ].map(tab => {\r\n              const Icon = tab.icon\r\n              return (\r\n                <button\r\n                  key={tab.id}\r\n                  onClick={() => setActiveTab(tab.id as 'users' | 'roles' | 'audit' | 'settings')}\r\n                  className={`flex items-center space-x-2 px-4 py-3 rounded-xl transition-all duration-300 ${\r\n                    activeTab === tab.id\r\n                      ? 'bg-white/30 text-white font-semibold shadow-lg'\r\n                      : 'text-white/70 hover:bg-white/20'\r\n                  }`}\r\n                >\r\n                  <Icon className=\"h-5 w-5\" />\r\n                  <span>{tab.label}</span>\r\n                  {tab.count > 0 && (\r\n                    <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\r\n                      {tab.count}\r\n                    </span>\r\n                  )}\r\n                </button>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"mb-8\">\r\n          {loading ? (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n              <div className=\"animate-spin h-12 w-12 border-4 border-white/30 border-t-white rounded-full\"></div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {activeTab === 'users' && renderUserManagement()}\r\n              {activeTab === 'roles' && renderRoleManagement()}\r\n              {activeTab === 'audit' && renderAuditLogs()}\r\n              {activeTab === 'settings' && (\r\n                <div className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30\">\r\n                  <div className=\"text-center\">\r\n                    <Settings className=\"h-16 w-16 text-white/40 mx-auto mb-4\" />\r\n                    <h3 className=\"text-xl font-semibold text-white/80 mb-2\">Security Settings</h3>\r\n                    <p className=\"text-white/60 mb-4\">Manage two-factor authentication for your account.</p>\r\n                  </div>\r\n\r\n                  {/* 2FA Panel */}\r\n                  <div className=\"max-w-xl mx-auto mt-6 space-y-4 text-left\">\r\n                    <div className=\"bg-white/10 rounded-2xl p-6 border border-white/20\">\r\n                      <h4 className=\"text-white font-semibold mb-2\">Two-Factor Authentication (2FA)</h4>\r\n                      <p className=\"text-white/70 text-sm mb-4\">Add an extra layer of security using authenticator apps (e.g., Google Authenticator, Authy).</p>\r\n\r\n                      {/* Show current user 2FA status from mock users */}\r\n                      {(() => {\r\n                        const currentUserId = (currentUser && typeof currentUser === 'object' && 'id' in (currentUser as Record<string, unknown>)) ? String((currentUser as Record<string, unknown>)['id']) : '1'\r\n                        const me = users.find(u => u.id === currentUserId)\r\n                        if (!me) return <p className=\"text-white/60\">User not found</p>\r\n                        return (\r\n                          <div className=\"space-y-3\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                              <span className=\"text-white/80\">2FA Status</span>\r\n                              <span className={`px-3 py-1 rounded-full text-xs font-medium ${me.twoFactorEnabled ? 'bg-green-600 text-white' : 'bg-red-600 text-white'}`}>\r\n                                {me.twoFactorEnabled ? 'Enabled' : 'Disabled'}\r\n                              </span>\r\n                            </div>\r\n\r\n                            {!me.twoFactorEnabled ? (\r\n                              <div className=\"space-y-2\">\r\n                                <button\r\n                                  onClick={async () => {\r\n                                    try {\r\n                                      const res = await settingsService.setup2FA()\r\n                                      const payloadUnknown: unknown = (res as unknown as { data?: unknown })?.data ?? res\r\n                                      const payload = typeof payloadUnknown === 'object' && payloadUnknown !== null ? payloadUnknown as Record<string, unknown> : {}\r\n                                      function getString(obj: unknown, key: string): string | undefined {\r\n                                        if (typeof obj === 'object' && obj !== null && key in (obj as Record<string, unknown>)) {\r\n                                          const v = (obj as Record<string, unknown>)[key]\r\n                                          return typeof v === 'string' ? v : undefined\r\n                                        }\r\n                                        return undefined\r\n                                      }\r\n                                      const qr = getString(payload, 'qr') ?? getString((payload as Record<string, unknown>)['data'], 'qr') ?? getString(payload, 'otpauth_url')\r\n                                      const secret = getString(payload, 'secret') ?? getString((payload as Record<string, unknown>)['data'], 'secret')\r\n                                      setQrData({ qr, secret })\r\n                                      // open modal to show QR\r\n                                      setTwoFaModalOpen(true)\r\n                                    } catch (error) {\r\n                                      console.error(error)\r\n                                      alert('Failed to start 2FA setup')\r\n                                    }\r\n                                  }}\r\n                                  className=\"bg-blue-600 text-white px-4 py-2 rounded-xl\"\r\n                                >\r\n                                  Setup 2FA\r\n                                </button>\r\n\r\n                                <div className=\"pt-2\">\r\n                                  <label className=\"block text-white/80 text-sm mb-1\">Enter code from your authenticator</label>\r\n                                  <div className=\"flex space-x-2\">\r\n                                    <input id=\"tfacode\" className=\"flex-1 px-3 py-2 rounded-xl bg-white/5 text-white border border-white/20\" placeholder=\"123456\" />\r\n                                    <button\r\n                                      onClick={async () => {\r\n                                        const tokenInput = (document.getElementById('tfacode') as HTMLInputElement)\r\n                                        const token = tokenInput?.value || ''\r\n                                        try {\r\n                                          const res = await settingsService.verify2FA({ token })\r\n                                          const payloadUnknown: unknown = (res as unknown as { data?: unknown })?.data ?? res\r\n                                          function hasBackupCodes(obj: unknown): obj is { backupCodes: string[] } {\r\n                                            return typeof obj === 'object' && obj !== null && 'backupCodes' in (obj as Record<string, unknown>)\r\n                                          }\r\n                                          const codes = hasBackupCodes(payloadUnknown) ? (payloadUnknown as { backupCodes: string[] }).backupCodes : (Array.isArray(payloadUnknown) ? payloadUnknown : [])\r\n                                          setBackupCodes(codes as string[])\r\n                                          setUsers(prev => prev.map(u => u.id === '1' ? { ...u, twoFactorEnabled: true } : u))\r\n                                          // keep the modal open so user can copy backup codes after verification\r\n                                          setTwoFaModalOpen(true)\r\n                                          // optionally notify the user (kept for parity with UI flow)\r\n                                          if (typeof window !== 'undefined' && typeof window.alert === 'function') {\r\n                                            window.alert('2FA enabled')\r\n                                          }\r\n                                        } catch (err) {\r\n                                          console.error(err)\r\n                                          alert('Invalid token or verification failed')\r\n                                        }\r\n                                      }}\r\n                                      className=\"bg-green-600 text-white px-4 py-2 rounded-xl\"\r\n                                    >\r\n                                      Verify & Enable\r\n                                    </button>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"space-y-2\">\r\n                                <p className=\"text-white/70 text-sm\">2FA is currently enabled for your account. You can disable it below.</p>\r\n                                <button\r\n                                  onClick={async () => {\r\n                                    try {\r\n                                      await settingsService.disable2FA()\r\n                                      setUsers(prev => prev.map(u => u.id === '1' ? { ...u, twoFactorEnabled: false } : u))\r\n                                      alert('2FA disabled')\r\n                                    } catch (err) {\r\n                                      console.error(err)\r\n                                      alert('Failed to disable 2FA')\r\n                                    }\r\n                                  }}\r\n                                  className=\"bg-red-600 text-white px-4 py-2 rounded-xl\"\r\n                                >\r\n                                  Disable 2FA\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )\r\n                      })()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <TwoFactorModal\r\n          open={twoFaModalOpen}\r\n          onClose={() => setTwoFaModalOpen(false)}\r\n          qrDataUrl={qrData?.qr}\r\n          secret={qrData?.secret}\r\n          backupCodes={backupCodes}\r\n        />\r\n\r\n        {/* Footer */}\r\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/30 text-center\">\r\n          <p className=\"text-white/60 text-sm\">\r\n            👥 {users.length} total users | \r\n            🔐 {users.filter(u => u.twoFactorEnabled).length} with 2FA enabled | \r\n            📊 {auditLogs.length} recent activities logged\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserManagement"],"mappings":"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"}
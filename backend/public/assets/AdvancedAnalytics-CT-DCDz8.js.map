{"version":3,"file":"AdvancedAnalytics-CT-DCDz8.js","names":["FinancialHealthCard: React.FC<FinancialHealthProps>","PredictiveAnalytics: React.FC<PredictiveAnalyticsProps>","KPIMonitoring: React.FC<KPIMonitoringProps>","AdvancedAnalytics: React.FC","mockAnalyticsData: AnalyticsData"],"sources":["../../src/components/analytics/FinancialHealthCard.tsx","../../src/components/analytics/PredictiveAnalytics.tsx","../../src/components/analytics/KPIMonitoring.tsx","../../src/pages/AdvancedAnalytics.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ninterface FinancialHealthProps {\r\n  healthScore: number\r\n  totalRevenue: number\r\n  totalExpenses: number\r\n  profitMargin: number\r\n  cashFlow: number\r\n  quickRatio: number\r\n}\r\n\r\nconst FinancialHealthCard: React.FC<FinancialHealthProps> = ({\r\n  healthScore,\r\n  totalRevenue,\r\n  totalExpenses,\r\n  profitMargin,\r\n  cashFlow,\r\n  quickRatio\r\n}) => {\r\n  const getHealthColor = (score: number) => {\r\n    if (score >= 80) return 'text-green-600 bg-green-100'\r\n    if (score >= 60) return 'text-yellow-600 bg-yellow-100'\r\n    return 'text-red-600 bg-red-100'\r\n  }\r\n\r\n  const getHealthStatus = (score: number) => {\r\n    if (score >= 80) return { status: 'Excellent', icon: '🟢' }\r\n    if (score >= 60) return { status: 'Good', icon: '🟡' }\r\n    return { status: 'Needs Attention', icon: '🔴' }\r\n  }\r\n\r\n  const health = getHealthStatus(healthScore)\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg border border-gray-200 p-6\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900\">💊 Financial Health Score</h3>\r\n        <div className={`px-3 py-1 rounded-full text-sm font-medium ${getHealthColor(healthScore)}`}>\r\n          {health.icon} {health.status}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Health Score Circle */}\r\n      <div className=\"flex items-center justify-center mb-6\">\r\n        <div className=\"relative w-32 h-32\">\r\n          <svg className=\"w-32 h-32 transform -rotate-90\" viewBox=\"0 0 36 36\">\r\n            {/* Background circle */}\r\n            <path\r\n              d=\"M18 2.0845\r\n                a 15.9155 15.9155 0 0 1 0 31.831\r\n                a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n              fill=\"none\"\r\n              stroke=\"#e5e7eb\"\r\n              strokeWidth=\"2\"\r\n            />\r\n            {/* Progress circle */}\r\n            <path\r\n              d=\"M18 2.0845\r\n                a 15.9155 15.9155 0 0 1 0 31.831\r\n                a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n              fill=\"none\"\r\n              stroke={healthScore >= 80 ? '#10b981' : healthScore >= 60 ? '#f59e0b' : '#ef4444'}\r\n              strokeWidth=\"2\"\r\n              strokeDasharray={`${healthScore}, 100`}\r\n              strokeLinecap=\"round\"\r\n            />\r\n          </svg>\r\n          <div className=\"absolute inset-0 flex items-center justify-center\">\r\n            <span className=\"text-2xl font-bold text-gray-900\">{healthScore}%</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div className=\"bg-gray-50 rounded-lg p-3\">\r\n          <div className=\"text-sm text-gray-600\">Revenue</div>\r\n          <div className=\"text-lg font-semibold text-green-600\">\r\n            RM {totalRevenue.toLocaleString()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 rounded-lg p-3\">\r\n          <div className=\"text-sm text-gray-600\">Expenses</div>\r\n          <div className=\"text-lg font-semibold text-red-600\">\r\n            RM {totalExpenses.toLocaleString()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 rounded-lg p-3\">\r\n          <div className=\"text-sm text-gray-600\">Profit Margin</div>\r\n          <div className={`text-lg font-semibold ${profitMargin >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n            {profitMargin.toFixed(1)}%\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 rounded-lg p-3\">\r\n          <div className=\"text-sm text-gray-600\">Cash Flow</div>\r\n          <div className={`text-lg font-semibold ${cashFlow >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n            RM {cashFlow.toLocaleString()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 rounded-lg p-3 col-span-2\">\r\n          <div className=\"text-sm text-gray-600\">Quick Ratio</div>\r\n          <div className={`text-lg font-semibold ${quickRatio >= 1 ? 'text-green-600' : 'text-yellow-600'}`}>\r\n            {quickRatio.toFixed(2)}\r\n          </div>\r\n          <div className=\"text-xs text-gray-500\">\r\n            {quickRatio >= 1 ? 'Good liquidity' : 'Monitor liquidity'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Health Recommendations */}\r\n      <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\r\n        <h4 className=\"text-sm font-medium text-blue-900 mb-2\">💡 Recommendations</h4>\r\n        <ul className=\"text-sm text-blue-800 space-y-1\">\r\n          {profitMargin < 10 && (\r\n            <li>• Consider reducing operational costs to improve profit margin</li>\r\n          )}\r\n          {quickRatio < 1 && (\r\n            <li>• Improve cash position by collecting receivables faster</li>\r\n          )}\r\n          {cashFlow < 0 && (\r\n            <li>• Focus on cash flow management and payment terms</li>\r\n          )}\r\n          {healthScore >= 80 && (\r\n            <li>• Excellent financial health! Consider expansion opportunities</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinancialHealthCard","import React from 'react'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area\r\n} from 'recharts'\r\n\r\ninterface PredictiveAnalyticsProps {\r\n  historicalData: Array<{\r\n    month: string\r\n    revenue: number\r\n    expenses: number\r\n    profit: number\r\n  }>\r\n  forecastData: Array<{\r\n    month: string\r\n    predictedRevenue: number\r\n    predictedExpenses: number\r\n    predictedProfit: number\r\n    confidence: number\r\n  }>\r\n}\r\n\r\nconst PredictiveAnalytics: React.FC<PredictiveAnalyticsProps> = ({\r\n  historicalData,\r\n  forecastData\r\n}) => {\r\n  // Combine historical and forecast data\r\n  const combinedData = [\r\n    ...historicalData.map(item => ({\r\n      ...item,\r\n      isHistorical: true,\r\n      predictedRevenue: null,\r\n      predictedExpenses: null,\r\n      predictedProfit: null\r\n    })),\r\n    ...forecastData.map(item => ({\r\n      month: item.month,\r\n      revenue: null,\r\n      expenses: null,\r\n      profit: null,\r\n      isHistorical: false,\r\n      predictedRevenue: item.predictedRevenue,\r\n      predictedExpenses: item.predictedExpenses,\r\n      predictedProfit: item.predictedProfit,\r\n      confidence: item.confidence\r\n    }))\r\n  ]\r\n\r\n  const CustomTooltip = ({ active, payload, label }: {\r\n    active?: boolean\r\n    payload?: Array<{\r\n      payload: {\r\n        month: string\r\n        revenue?: number\r\n        expenses?: number\r\n        profit?: number\r\n        predictedRevenue?: number\r\n        predictedExpenses?: number\r\n        predictedProfit?: number\r\n        confidence?: number\r\n        isHistorical: boolean\r\n      }\r\n    }>\r\n    label?: string\r\n  }) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload\r\n      return (\r\n        <div className=\"bg-white p-3 border border-gray-200 rounded-lg shadow-lg\">\r\n          <p className=\"font-medium text-gray-900\">{label}</p>\r\n          {data.isHistorical ? (\r\n            <>\r\n              <p className=\"text-green-600\">Revenue: RM {data.revenue?.toLocaleString()}</p>\r\n              <p className=\"text-red-600\">Expenses: RM {data.expenses?.toLocaleString()}</p>\r\n              <p className=\"text-blue-600\">Profit: RM {data.profit?.toLocaleString()}</p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p className=\"text-green-400\">Predicted Revenue: RM {data.predictedRevenue?.toLocaleString()}</p>\r\n              <p className=\"text-red-400\">Predicted Expenses: RM {data.predictedExpenses?.toLocaleString()}</p>\r\n              <p className=\"text-blue-400\">Predicted Profit: RM {data.predictedProfit?.toLocaleString()}</p>\r\n              <p className=\"text-gray-500\">Confidence: {data.confidence}%</p>\r\n            </>\r\n          )}\r\n        </div>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg border border-gray-200 p-6\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900\">🔮 Predictive Analytics</h3>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"w-3 h-3 bg-blue-600 rounded mr-2\"></div>\r\n            <span className=\"text-sm text-gray-600\">Historical</span>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <div className=\"w-3 h-3 bg-blue-300 rounded mr-2 border-2 border-blue-600\"></div>\r\n            <span className=\"text-sm text-gray-600\">Predicted</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Revenue Forecast Chart */}\r\n      <div className=\"mb-8\">\r\n        <h4 className=\"text-md font-medium text-gray-800 mb-4\">📈 Revenue Forecast</h4>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <AreaChart data={combinedData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis \r\n              dataKey=\"month\" \r\n              tick={{ fontSize: 12 }}\r\n              interval={0}\r\n              angle={-45}\r\n              textAnchor=\"end\"\r\n              height={60}\r\n            />\r\n            <YAxis \r\n              tick={{ fontSize: 12 }}\r\n              tickFormatter={(value) => `RM ${(value / 1000).toFixed(0)}k`}\r\n            />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"revenue\"\r\n              stackId=\"1\"\r\n              stroke=\"#10b981\"\r\n              fill=\"#10b981\"\r\n              fillOpacity={0.6}\r\n              connectNulls={false}\r\n            />\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"predictedRevenue\"\r\n              stackId=\"2\"\r\n              stroke=\"#10b981\"\r\n              fill=\"#10b981\"\r\n              fillOpacity={0.3}\r\n              strokeDasharray=\"5 5\"\r\n              connectNulls={false}\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Profit Trend Chart */}\r\n      <div className=\"mb-6\">\r\n        <h4 className=\"text-md font-medium text-gray-800 mb-4\">💰 Profit Trend Analysis</h4>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={combinedData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis \r\n              dataKey=\"month\" \r\n              tick={{ fontSize: 12 }}\r\n              interval={0}\r\n              angle={-45}\r\n              textAnchor=\"end\"\r\n              height={60}\r\n            />\r\n            <YAxis \r\n              tick={{ fontSize: 12 }}\r\n              tickFormatter={(value) => `RM ${(value / 1000).toFixed(0)}k`}\r\n            />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Legend />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"profit\"\r\n              stroke=\"#3b82f6\"\r\n              strokeWidth={3}\r\n              dot={{ r: 4 }}\r\n              connectNulls={false}\r\n              name=\"Historical Profit\"\r\n            />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"predictedProfit\"\r\n              stroke=\"#3b82f6\"\r\n              strokeWidth={2}\r\n              strokeDasharray=\"5 5\"\r\n              dot={{ r: 3 }}\r\n              connectNulls={false}\r\n              name=\"Predicted Profit\"\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Key Predictions */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <div className=\"bg-green-50 rounded-lg p-4\">\r\n          <div className=\"text-sm text-green-700 font-medium\">Next Month Revenue</div>\r\n          <div className=\"text-2xl font-bold text-green-800\">\r\n            RM {forecastData[0]?.predictedRevenue.toLocaleString() || '0'}\r\n          </div>\r\n          <div className=\"text-xs text-green-600\">\r\n            {forecastData[0]?.confidence}% confidence\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-blue-50 rounded-lg p-4\">\r\n          <div className=\"text-sm text-blue-700 font-medium\">Next Month Profit</div>\r\n          <div className=\"text-2xl font-bold text-blue-800\">\r\n            RM {forecastData[0]?.predictedProfit.toLocaleString() || '0'}\r\n          </div>\r\n          <div className=\"text-xs text-blue-600\">\r\n            {forecastData[0]?.confidence}% confidence\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-purple-50 rounded-lg p-4\">\r\n          <div className=\"text-sm text-purple-700 font-medium\">Growth Trend</div>\r\n          <div className=\"text-2xl font-bold text-purple-800\">\r\n            {(() => {\r\n              const lastHistorical = historicalData[historicalData.length - 1]?.revenue || 0\r\n              const nextPredicted = forecastData[0]?.predictedRevenue || 0\r\n              const growth = ((nextPredicted - lastHistorical) / lastHistorical * 100)\r\n              return `${growth >= 0 ? '+' : ''}${growth.toFixed(1)}%`\r\n            })()}\r\n          </div>\r\n          <div className=\"text-xs text-purple-600\">\r\n            Month-over-month\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* AI Insights */}\r\n      <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 mb-3\">🤖 AI Insights</h4>\r\n        <div className=\"space-y-2 text-sm text-gray-700\">\r\n          <div className=\"flex items-start\">\r\n            <span className=\"text-green-500 mr-2\">•</span>\r\n            <span>Revenue trend shows {(() => {\r\n              const growth = forecastData[0]?.predictedRevenue > historicalData[historicalData.length - 1]?.revenue\r\n              return growth ? 'positive growth' : 'declining pattern'\r\n            })()} for next quarter</span>\r\n          </div>\r\n          <div className=\"flex items-start\">\r\n            <span className=\"text-blue-500 mr-2\">•</span>\r\n            <span>Seasonal patterns indicate peak performance in {(() => {\r\n              // Simple seasonal analysis\r\n              const revenues = historicalData.map(d => d.revenue)\r\n              const maxIndex = revenues.indexOf(Math.max(...revenues))\r\n              return historicalData[maxIndex]?.month || 'Q4'\r\n            })()}</span>\r\n          </div>\r\n          <div className=\"flex items-start\">\r\n            <span className=\"text-purple-500 mr-2\">•</span>\r\n            <span>Predictive model confidence is {forecastData[0]?.confidence}% based on 12 months of data</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PredictiveAnalytics","import React from 'react'\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Legend\r\n} from 'recharts'\r\n\r\ninterface KPIData {\r\n  totalRevenue: number\r\n  totalExpenses: number\r\n  netProfit: number\r\n  grossMargin: number\r\n  operatingMargin: number\r\n  currentRatio: number\r\n  debtToEquity: number\r\n  returnOnAssets: number\r\n  customerAcquisitionCost: number\r\n  customerLifetimeValue: number\r\n  monthlyRecurringRevenue: number\r\n  churnRate: number\r\n}\r\n\r\ninterface MonthlyData {\r\n  month: string\r\n  revenue: number\r\n  expenses: number\r\n  profit: number\r\n  customers: number\r\n}\r\n\r\ninterface KPIMonitoringProps {\r\n  kpiData: KPIData\r\n  monthlyData: MonthlyData[]\r\n  comparisonData: {\r\n    industry: KPIData\r\n    previousPeriod: KPIData\r\n  }\r\n}\r\n\r\nconst KPIMonitoring: React.FC<KPIMonitoringProps> = ({\r\n  kpiData,\r\n  monthlyData,\r\n  comparisonData\r\n}) => {\r\n  const pieData = [\r\n    { name: 'Operating Expenses', value: kpiData.totalExpenses * 0.7, color: '#ef4444' },\r\n    { name: 'Marketing', value: kpiData.totalExpenses * 0.15, color: '#f59e0b' },\r\n    { name: 'Admin', value: kpiData.totalExpenses * 0.10, color: '#8b5cf6' },\r\n    { name: 'Other', value: kpiData.totalExpenses * 0.05, color: '#6b7280' }\r\n  ]\r\n\r\n  const getKPITrend = (current: number, previous: number, metricType?: string): {\r\n    value: string\r\n    isGood: boolean\r\n    icon: string\r\n    color: string\r\n  } => {\r\n    const change = ((current - previous) / previous) * 100\r\n    const isPositive = change > 0\r\n    \r\n    // Determine if positive change is good based on metric type\r\n    const isGoodChange = metricType === 'expense' || metricType === 'debt' || metricType === 'churn' \r\n      ? !isPositive  // For expenses, debt, churn: decrease is good\r\n      : isPositive   // For revenue, profit, margins: increase is good\r\n\r\n    return {\r\n      value: Math.abs(change).toFixed(1),\r\n      isGood: isGoodChange,\r\n      icon: isPositive ? '↗️' : '↘️',\r\n      color: isGoodChange ? 'text-green-600' : 'text-red-600'\r\n    }\r\n  }\r\n\r\n  const KPICard = ({ \r\n    title, \r\n    value, \r\n    format = 'currency',\r\n    current, \r\n    previous, \r\n    icon,\r\n    description,\r\n    metricType\r\n  }: {\r\n    title: string\r\n    value: number\r\n    format?: 'currency' | 'percentage' | 'number' | 'ratio'\r\n    current: number\r\n    previous: number\r\n    icon: string\r\n    description: string\r\n    metricType?: string\r\n  }) => {\r\n    const trend = getKPITrend(current, previous, metricType)\r\n    \r\n    const formatValue = (val: number, fmt: string) => {\r\n      switch (fmt) {\r\n        case 'currency':\r\n          return `RM ${val.toLocaleString()}`\r\n        case 'percentage':\r\n          return `${val.toFixed(1)}%`\r\n        case 'ratio':\r\n          return val.toFixed(2)\r\n        default:\r\n          return val.toLocaleString()\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md border border-gray-200 p-4\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div className=\"flex items-center\">\r\n            <span className=\"text-2xl mr-2\">{icon}</span>\r\n            <h4 className=\"text-sm font-medium text-gray-600\">{title}</h4>\r\n          </div>\r\n          <div className={`flex items-center text-sm ${trend.color}`}>\r\n            <span className=\"mr-1\">{trend.icon}</span>\r\n            <span>{trend.value}%</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mb-2\">\r\n          <span className=\"text-2xl font-bold text-gray-900\">\r\n            {formatValue(value, format)}\r\n          </span>\r\n        </div>\r\n        \r\n        <p className=\"text-xs text-gray-500\">{description}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"bg-white rounded-lg shadow-lg border border-gray-200 p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">📊 Key Performance Indicators</h3>\r\n        <p className=\"text-gray-600\">Real-time monitoring of critical business metrics</p>\r\n      </div>\r\n\r\n      {/* Financial KPIs Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <KPICard\r\n          title=\"Total Revenue\"\r\n          value={kpiData.totalRevenue}\r\n          current={kpiData.totalRevenue}\r\n          previous={comparisonData.previousPeriod.totalRevenue}\r\n          icon=\"💰\"\r\n          description=\"Monthly recurring revenue\"\r\n          format=\"currency\"\r\n        />\r\n        \r\n        <KPICard\r\n          title=\"Net Profit\"\r\n          value={kpiData.netProfit}\r\n          current={kpiData.netProfit}\r\n          previous={comparisonData.previousPeriod.netProfit}\r\n          icon=\"🎯\"\r\n          description=\"After all expenses\"\r\n          format=\"currency\"\r\n        />\r\n        \r\n        <KPICard\r\n          title=\"Gross Margin\"\r\n          value={kpiData.grossMargin}\r\n          current={kpiData.grossMargin}\r\n          previous={comparisonData.previousPeriod.grossMargin}\r\n          icon=\"📈\"\r\n          description=\"Revenue minus COGS\"\r\n          format=\"percentage\"\r\n        />\r\n        \r\n        <KPICard\r\n          title=\"Operating Margin\"\r\n          value={kpiData.operatingMargin}\r\n          current={kpiData.operatingMargin}\r\n          previous={comparisonData.previousPeriod.operatingMargin}\r\n          icon=\"⚙️\"\r\n          description=\"Operating efficiency\"\r\n          format=\"percentage\"\r\n        />\r\n      </div>\r\n\r\n      {/* Financial Ratios */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <KPICard\r\n          title=\"Current Ratio\"\r\n          value={kpiData.currentRatio}\r\n          current={kpiData.currentRatio}\r\n          previous={comparisonData.previousPeriod.currentRatio}\r\n          icon=\"⚖️\"\r\n          description=\"Short-term liquidity\"\r\n          format=\"ratio\"\r\n        />\r\n        \r\n        <KPICard\r\n          title=\"Debt to Equity\"\r\n          value={kpiData.debtToEquity}\r\n          current={kpiData.debtToEquity}\r\n          previous={comparisonData.previousPeriod.debtToEquity}\r\n          icon=\"🏦\"\r\n          description=\"Financial leverage\"\r\n          format=\"ratio\"\r\n        />\r\n        \r\n        <KPICard\r\n          title=\"Return on Assets\"\r\n          value={kpiData.returnOnAssets}\r\n          current={kpiData.returnOnAssets}\r\n          previous={comparisonData.previousPeriod.returnOnAssets}\r\n          icon=\"🎲\"\r\n          description=\"Asset efficiency\"\r\n          format=\"percentage\"\r\n        />\r\n        \r\n        <KPICard\r\n          title=\"Churn Rate\"\r\n          value={kpiData.churnRate}\r\n          current={kpiData.churnRate}\r\n          previous={comparisonData.previousPeriod.churnRate}\r\n          icon=\"🚪\"\r\n          description=\"Customer retention\"\r\n          format=\"percentage\"\r\n        />\r\n      </div>\r\n\r\n      {/* Customer Metrics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        <KPICard\r\n          title=\"Customer Acquisition Cost\"\r\n          value={kpiData.customerAcquisitionCost}\r\n          current={kpiData.customerAcquisitionCost}\r\n          previous={comparisonData.previousPeriod.customerAcquisitionCost}\r\n          icon=\"🎯\"\r\n          description=\"Cost to acquire new customer\"\r\n          format=\"currency\"\r\n        />\r\n        \r\n        <KPICard\r\n          title=\"Customer Lifetime Value\"\r\n          value={kpiData.customerLifetimeValue}\r\n          current={kpiData.customerLifetimeValue}\r\n          previous={comparisonData.previousPeriod.customerLifetimeValue}\r\n          icon=\"💎\"\r\n          description=\"Total customer value\"\r\n          format=\"currency\"\r\n        />\r\n        \r\n        <KPICard\r\n          title=\"Monthly Recurring Revenue\"\r\n          value={kpiData.monthlyRecurringRevenue}\r\n          current={kpiData.monthlyRecurringRevenue}\r\n          previous={comparisonData.previousPeriod.monthlyRecurringRevenue}\r\n          icon=\"🔄\"\r\n          description=\"Predictable revenue stream\"\r\n          format=\"currency\"\r\n        />\r\n      </div>\r\n\r\n      {/* Charts Section */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Monthly Performance Chart */}\r\n        <div className=\"bg-white rounded-lg shadow-lg border border-gray-200 p-6\">\r\n          <h4 className=\"text-md font-semibold text-gray-900 mb-4\">📊 Monthly Performance</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={monthlyData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis \r\n                dataKey=\"month\" \r\n                tick={{ fontSize: 12 }}\r\n                interval={0}\r\n                angle={-45}\r\n                textAnchor=\"end\"\r\n                height={60}\r\n              />\r\n              <YAxis \r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\r\n              />\r\n              <Tooltip \r\n                formatter={(value: number, name: string) => [\r\n                  `RM ${value.toLocaleString()}`,\r\n                  name.charAt(0).toUpperCase() + name.slice(1)\r\n                ]}\r\n              />\r\n              <Legend />\r\n              <Bar dataKey=\"revenue\" fill=\"#10b981\" name=\"Revenue\" />\r\n              <Bar dataKey=\"expenses\" fill=\"#ef4444\" name=\"Expenses\" />\r\n              <Bar dataKey=\"profit\" fill=\"#3b82f6\" name=\"Profit\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        {/* Expense Breakdown */}\r\n        <div className=\"bg-white rounded-lg shadow-lg border border-gray-200 p-6\">\r\n          <h4 className=\"text-md font-semibold text-gray-900 mb-4\">🥧 Expense Breakdown</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie\r\n                data={pieData}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                outerRadius={80}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n                label={false}\r\n                labelLine={false}\r\n              >\r\n                {pieData.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={entry.color} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip \r\n                formatter={(value: number) => [`RM ${value.toLocaleString()}`, 'Amount']}\r\n              />\r\n              <Legend />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Industry Comparison */}\r\n      <div className=\"bg-white rounded-lg shadow-lg border border-gray-200 p-6\">\r\n        <h4 className=\"text-md font-semibold text-gray-900 mb-4\">🏭 Industry Comparison</h4>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-2xl font-bold text-blue-600\">\r\n              {kpiData.grossMargin.toFixed(1)}%\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">Your Gross Margin</div>\r\n          </div>\r\n          \r\n          <div className=\"text-center\">\r\n            <div className=\"text-2xl font-bold text-gray-400\">\r\n              {comparisonData.industry.grossMargin.toFixed(1)}%\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">Industry Average</div>\r\n          </div>\r\n          \r\n          <div className=\"text-center\">\r\n            <div className={`text-2xl font-bold ${\r\n              kpiData.grossMargin > comparisonData.industry.grossMargin ? 'text-green-600' : 'text-red-600'\r\n            }`}>\r\n              {kpiData.grossMargin > comparisonData.industry.grossMargin ? '👍' : '👎'}\r\n              {Math.abs(kpiData.grossMargin - comparisonData.industry.grossMargin).toFixed(1)}%\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">\r\n              {kpiData.grossMargin > comparisonData.industry.grossMargin ? 'Above' : 'Below'} Industry\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default KPIMonitoring","import React, { useState, useEffect } from 'react'\r\nimport FinancialHealthCard from '../components/analytics/FinancialHealthCard'\r\nimport PredictiveAnalytics from '../components/analytics/PredictiveAnalytics'\r\nimport KPIMonitoring from '../components/analytics/KPIMonitoring'\r\n\r\ninterface AnalyticsData {\r\n  financialHealth: {\r\n    healthScore: number\r\n    totalRevenue: number\r\n    totalExpenses: number\r\n    profitMargin: number\r\n    cashFlow: number\r\n    quickRatio: number\r\n  }\r\n  historicalData: Array<{\r\n    month: string\r\n    revenue: number\r\n    expenses: number\r\n    profit: number\r\n  }>\r\n  forecastData: Array<{\r\n    month: string\r\n    predictedRevenue: number\r\n    predictedExpenses: number\r\n    predictedProfit: number\r\n    confidence: number\r\n  }>\r\n  kpiData: {\r\n    totalRevenue: number\r\n    totalExpenses: number\r\n    netProfit: number\r\n    grossMargin: number\r\n    operatingMargin: number\r\n    currentRatio: number\r\n    debtToEquity: number\r\n    returnOnAssets: number\r\n    customerAcquisitionCost: number\r\n    customerLifetimeValue: number\r\n    monthlyRecurringRevenue: number\r\n    churnRate: number\r\n  }\r\n  monthlyData: Array<{\r\n    month: string\r\n    revenue: number\r\n    expenses: number\r\n    profit: number\r\n    customers: number\r\n  }>\r\n  comparisonData: {\r\n    industry: {\r\n      totalRevenue: number\r\n      totalExpenses: number\r\n      netProfit: number\r\n      grossMargin: number\r\n      operatingMargin: number\r\n      currentRatio: number\r\n      debtToEquity: number\r\n      returnOnAssets: number\r\n      customerAcquisitionCost: number\r\n      customerLifetimeValue: number\r\n      monthlyRecurringRevenue: number\r\n      churnRate: number\r\n    }\r\n    previousPeriod: {\r\n      totalRevenue: number\r\n      totalExpenses: number\r\n      netProfit: number\r\n      grossMargin: number\r\n      operatingMargin: number\r\n      currentRatio: number\r\n      debtToEquity: number\r\n      returnOnAssets: number\r\n      customerAcquisitionCost: number\r\n      customerLifetimeValue: number\r\n      monthlyRecurringRevenue: number\r\n      churnRate: number\r\n    }\r\n  }\r\n}\r\n\r\nconst AdvancedAnalytics: React.FC = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(null)\r\n\r\n  useEffect(() => {\r\n    // Mock data - in real app, this would come from API\r\n    const mockAnalyticsData: AnalyticsData = {\r\n      financialHealth: {\r\n        healthScore: 78,\r\n        totalRevenue: 125000,\r\n        totalExpenses: 89000,\r\n        profitMargin: 28.8,\r\n        cashFlow: 36000,\r\n        quickRatio: 1.45\r\n      },\r\n      \r\n      historicalData: [\r\n        { month: 'Jan 2024', revenue: 95000, expenses: 68000, profit: 27000 },\r\n        { month: 'Feb 2024', revenue: 102000, expenses: 71000, profit: 31000 },\r\n        { month: 'Mar 2024', revenue: 108000, expenses: 75000, profit: 33000 },\r\n        { month: 'Apr 2024', revenue: 115000, expenses: 79000, profit: 36000 },\r\n        { month: 'May 2024', revenue: 118000, expenses: 82000, profit: 36000 },\r\n        { month: 'Jun 2024', revenue: 125000, expenses: 89000, profit: 36000 },\r\n      ],\r\n      \r\n      forecastData: [\r\n        { month: 'Jul 2024', predictedRevenue: 132000, predictedExpenses: 92000, predictedProfit: 40000, confidence: 85 },\r\n        { month: 'Aug 2024', predictedRevenue: 138000, predictedExpenses: 95000, predictedProfit: 43000, confidence: 82 },\r\n        { month: 'Sep 2024', predictedRevenue: 145000, predictedExpenses: 98000, predictedProfit: 47000, confidence: 78 },\r\n        { month: 'Oct 2024', predictedRevenue: 152000, predictedExpenses: 102000, predictedProfit: 50000, confidence: 75 },\r\n      ],\r\n\r\n      kpiData: {\r\n        totalRevenue: 125000,\r\n        totalExpenses: 89000,\r\n        netProfit: 36000,\r\n        grossMargin: 65.2,\r\n        operatingMargin: 28.8,\r\n        currentRatio: 2.1,\r\n        debtToEquity: 0.35,\r\n        returnOnAssets: 12.5,\r\n        customerAcquisitionCost: 250,\r\n        customerLifetimeValue: 2800,\r\n        monthlyRecurringRevenue: 85000,\r\n        churnRate: 2.5\r\n      },\r\n\r\n      monthlyData: [\r\n        { month: 'Jan', revenue: 95000, expenses: 68000, profit: 27000, customers: 145 },\r\n        { month: 'Feb', revenue: 102000, expenses: 71000, profit: 31000, customers: 152 },\r\n        { month: 'Mar', revenue: 108000, expenses: 75000, profit: 33000, customers: 158 },\r\n        { month: 'Apr', revenue: 115000, expenses: 79000, profit: 36000, customers: 165 },\r\n        { month: 'May', revenue: 118000, expenses: 82000, profit: 36000, customers: 172 },\r\n        { month: 'Jun', revenue: 125000, expenses: 89000, profit: 36000, customers: 178 },\r\n      ],\r\n\r\n      comparisonData: {\r\n        industry: {\r\n          totalRevenue: 120000,\r\n          totalExpenses: 92000,\r\n          netProfit: 28000,\r\n          grossMargin: 58.5,\r\n          operatingMargin: 23.3,\r\n          currentRatio: 1.8,\r\n          debtToEquity: 0.45,\r\n          returnOnAssets: 9.2,\r\n          customerAcquisitionCost: 320,\r\n          customerLifetimeValue: 2200,\r\n          monthlyRecurringRevenue: 75000,\r\n          churnRate: 4.1\r\n        },\r\n        previousPeriod: {\r\n          totalRevenue: 118000,\r\n          totalExpenses: 82000,\r\n          netProfit: 36000,\r\n          grossMargin: 62.1,\r\n          operatingMargin: 30.5,\r\n          currentRatio: 1.9,\r\n          debtToEquity: 0.38,\r\n          returnOnAssets: 11.8,\r\n          customerAcquisitionCost: 280,\r\n          customerLifetimeValue: 2600,\r\n          monthlyRecurringRevenue: 82000,\r\n          churnRate: 2.8\r\n        }\r\n      }\r\n    }\r\n\r\n    // Simulate API call\r\n    const fetchAnalyticsData = async () => {\r\n      try {\r\n        // In real app: const response = await fetch('/api/analytics')\r\n        setTimeout(() => {\r\n          setAnalyticsData(mockAnalyticsData)\r\n          setLoading(false)\r\n        }, 1500)\r\n      } catch (error) {\r\n        console.error('Analytics fetch error:', error)\r\n        setAnalyticsData(mockAnalyticsData)\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchAnalyticsData()\r\n  }, [])\r\n\r\n  if (loading || !analyticsData) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n            <p className=\"mt-4 text-gray-600\">Loading advanced analytics...</p>\r\n            <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n              {[1, 2, 3].map((i) => (\r\n                <div key={i} className=\"bg-white rounded-lg shadow-md p-6 animate-pulse\">\r\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-4\"></div>\r\n                  <div className=\"h-8 bg-gray-200 rounded w-1/2 mb-2\"></div>\r\n                  <div className=\"h-3 bg-gray-200 rounded w-full\"></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6\">\r\n      <div className=\"max-w-7xl mx-auto space-y-8\">\r\n        {/* Header */}\r\n        <div className=\"bg-white rounded-lg shadow-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n                🚀 Advanced Business Analytics\r\n              </h1>\r\n              <p className=\"text-gray-600\">\r\n                AI-powered insights and predictive analytics for your business\r\n              </p>\r\n            </div>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"text-right\">\r\n                <div className=\"text-sm text-gray-500\">Last Updated</div>\r\n                <div className=\"text-sm font-medium text-gray-900\">\r\n                  {new Date().toLocaleString()}\r\n                </div>\r\n              </div>\r\n              <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n                📊 Export Report\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Financial Health Overview */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          <div className=\"lg:col-span-1\">\r\n            <FinancialHealthCard {...analyticsData.financialHealth} />\r\n          </div>\r\n          \r\n          <div className=\"lg:col-span-2\">\r\n            <PredictiveAnalytics\r\n              historicalData={analyticsData.historicalData}\r\n              forecastData={analyticsData.forecastData}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* KPI Monitoring */}\r\n        <KPIMonitoring\r\n          kpiData={analyticsData.kpiData}\r\n          monthlyData={analyticsData.monthlyData}\r\n          comparisonData={analyticsData.comparisonData}\r\n        />\r\n\r\n        {/* Quick Actions */}\r\n        <div className=\"bg-white rounded-lg shadow-lg border border-gray-200 p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">⚡ Quick Actions</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n            <button className=\"p-4 bg-green-50 hover:bg-green-100 rounded-lg text-left transition-colors\">\r\n              <div className=\"text-2xl mb-2\">📈</div>\r\n              <div className=\"font-medium text-green-900\">View Detailed Reports</div>\r\n              <div className=\"text-sm text-green-700\">Generate comprehensive analytics</div>\r\n            </button>\r\n            \r\n            <button className=\"p-4 bg-blue-50 hover:bg-blue-100 rounded-lg text-left transition-colors\">\r\n              <div className=\"text-2xl mb-2\">🎯</div>\r\n              <div className=\"font-medium text-blue-900\">Set Business Goals</div>\r\n              <div className=\"text-sm text-blue-700\">Configure targets and KPIs</div>\r\n            </button>\r\n            \r\n            <button className=\"p-4 bg-purple-50 hover:bg-purple-100 rounded-lg text-left transition-colors\">\r\n              <div className=\"text-2xl mb-2\">🤖</div>\r\n              <div className=\"font-medium text-purple-900\">AI Recommendations</div>\r\n              <div className=\"text-sm text-purple-700\">Get smart business insights</div>\r\n            </button>\r\n            \r\n            <button className=\"p-4 bg-orange-50 hover:bg-orange-100 rounded-lg text-left transition-colors\">\r\n              <div className=\"text-2xl mb-2\">📧</div>\r\n              <div className=\"font-medium text-orange-900\">Schedule Reports</div>\r\n              <div className=\"text-sm text-orange-700\">Automated report delivery</div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* AI Insights Panel */}\r\n        <div className=\"bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg shadow-lg text-white p-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">🧠 AI Business Insights</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <h4 className=\"font-medium mb-2\">🎯 Key Opportunities</h4>\r\n              <ul className=\"space-y-2 text-sm text-purple-100\">\r\n                <li>• Revenue growth trending 12% above industry average</li>\r\n                <li>• Customer acquisition cost improved by 11% this quarter</li>\r\n                <li>• Optimal time for expansion based on cash flow projections</li>\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <h4 className=\"font-medium mb-2\">⚠️ Areas for Attention</h4>\r\n              <ul className=\"space-y-2 text-sm text-purple-100\">\r\n                <li>• Operating expenses increasing faster than revenue</li>\r\n                <li>• Seasonal dip expected in Q3 - prepare cash reserves</li>\r\n                <li>• Consider diversifying revenue streams for stability</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdvancedAnalytics"],"mappings":"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"}
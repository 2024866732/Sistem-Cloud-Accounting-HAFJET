# Prometheus Alert Rules for HAFJET Cloud Accounting

groups:
  - name: hafjet_application
    interval: 30s
    rules:
      # High CPU Usage
      - alert: HighCPUUsage
        expr: (100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)) > 80
        for: 5m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 80% for more than 5 minutes on {{ $labels.instance }}"
          
      # High Memory Usage
      - alert: HighMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
        for: 5m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 85% on {{ $labels.instance }}"
          
      # Low Disk Space
      - alert: LowDiskSpace
        expr: (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes) * 100 < 15
        for: 5m
        labels:
          severity: critical
          component: system
        annotations:
          summary: "Low disk space"
          description: "Disk space is below 15% on {{ $labels.instance }} ({{ $labels.mountpoint }})"
          
  - name: hafjet_mongodb
    interval: 30s
    rules:
      # MongoDB Down
      - alert: MongoDBDown
        expr: up{job="mongodb"} == 0
        for: 1m
        labels:
          severity: critical
          component: database
        annotations:
          summary: "MongoDB is down"
          description: "MongoDB instance {{ $labels.instance }} has been down for more than 1 minute"
          
      # MongoDB High Connections
      - alert: MongoDBHighConnections
        expr: mongodb_connections{state="current"} > 100
        for: 5m
        labels:
          severity: warning
          component: database
        annotations:
          summary: "MongoDB high connection count"
          description: "MongoDB has {{ $value }} active connections (threshold: 100)"
          
      # MongoDB Replication Lag
      - alert: MongoDBReplicationLag
        expr: mongodb_replset_member_replication_lag > 10
        for: 5m
        labels:
          severity: warning
          component: database
        annotations:
          summary: "MongoDB replication lag detected"
          description: "MongoDB replication lag is {{ $value }} seconds"
          
  - name: hafjet_redis
    interval: 30s
    rules:
      # Redis Down
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          component: cache
        annotations:
          summary: "Redis is down"
          description: "Redis instance {{ $labels.instance }} has been down for more than 1 minute"
          
      # Redis High Memory Usage
      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90
        for: 5m
        labels:
          severity: warning
          component: cache
        annotations:
          summary: "Redis memory usage is high"
          description: "Redis memory usage is {{ $value }}%"
          
      # Redis Connection Issues
      - alert: RedisRejectedConnections
        expr: increase(redis_rejected_connections_total[1m]) > 0
        for: 1m
        labels:
          severity: warning
          component: cache
        annotations:
          summary: "Redis is rejecting connections"
          description: "Redis rejected {{ $value }} connections in the last minute"
          
  - name: hafjet_backend
    interval: 30s
    rules:
      # Backend Down
      - alert: BackendDown
        expr: up{job="backend"} == 0
        for: 2m
        labels:
          severity: critical
          component: application
        annotations:
          summary: "Backend API is down"
          description: "Backend API has been down for more than 2 minutes"
          
      # High Error Rate
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
          component: application
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} (threshold: 5%)"
          
      # Slow Response Time
      - alert: SlowResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
          component: application
        annotations:
          summary: "Slow response time"
          description: "95th percentile response time is {{ $value }}s (threshold: 2s)"
          
      # High Request Rate
      - alert: HighRequestRate
        expr: rate(http_requests_total[1m]) > 1000
        for: 5m
        labels:
          severity: warning
          component: application
        annotations:
          summary: "High request rate"
          description: "Request rate is {{ $value }} req/s (possible DDoS)"
          
  - name: hafjet_frontend
    interval: 30s
    rules:
      # Frontend Down
      - alert: FrontendDown
        expr: up{job="frontend"} == 0
        for: 2m
        labels:
          severity: critical
          component: frontend
        annotations:
          summary: "Frontend is down"
          description: "Frontend has been down for more than 2 minutes"
          
  - name: hafjet_business
    interval: 1m
    rules:
      # E-Invoice API Failures
      - alert: EInvoiceAPIFailures
        expr: rate(einvoice_api_errors_total[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          component: integration
        annotations:
          summary: "E-Invoice API failures detected"
          description: "E-Invoice API failure rate is {{ $value | humanizePercentage }}"
          
      # Failed Invoice Generation
      - alert: FailedInvoiceGeneration
        expr: increase(invoice_generation_failures_total[10m]) > 5
        for: 5m
        labels:
          severity: warning
          component: business
        annotations:
          summary: "Multiple invoice generation failures"
          description: "{{ $value }} invoices failed to generate in the last 10 minutes"
          
      # Backup Failures
      - alert: BackupFailure
        expr: time() - last_successful_backup_timestamp > 86400
        for: 5m
        labels:
          severity: critical
          component: backup
        annotations:
          summary: "Backup not completed in 24 hours"
          description: "Last successful backup was {{ $value | humanizeDuration }} ago"

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  prechecks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check optional secrets
        id: secretcheck
        run: |
          echo "Checking optional secrets..."
          if [ -n "${{ secrets.GHCRPAT }}" ]; then
            echo "ghcrpat=true" >> $GITHUB_OUTPUT
            echo "✓ GHCRPAT secret available"
          else
            echo "ghcrpat=false" >> $GITHUB_OUTPUT
            echo "⚠ GHCRPAT secret not set (optional)"
          fi
          if [ -n "${{ secrets.KUBECONFIG }}" ]; then
            echo "kubeconfig=true" >> $GITHUB_OUTPUT
            echo "✓ KUBECONFIG secret available"
          else
            echo "kubeconfig=false" >> $GITHUB_OUTPUT
            echo "⚠ KUBECONFIG secret not set (optional)"
          fi

      - name: Verify backend lockfile
        run: |
          cd backend
          bash ../scripts/verify-lockfile.sh

      - name: Verify frontend lockfile
        continue-on-error: true
        run: |
          cd frontend
          bash ../scripts/verify-lockfile.sh || echo "Frontend lockfile verification failed (non-fatal)"

      - name: Validate required environment (non-fatal in CI)
        continue-on-error: true
        run: |
          bash ./scripts/validate-env.sh || echo "Environment validation returned non-zero (CI may not have production env vars)"

  build-frontend:
    runs-on: ubuntu-latest
    needs: prechecks
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci --ignore-scripts --legacy-peer-deps
      - name: Build frontend
        working-directory: frontend
        run: npm run build

  test-backend:
    runs-on: ubuntu-latest
    needs: prechecks
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install backend deps
        working-directory: backend
        run: npm ci --ignore-scripts --legacy-peer-deps
      - name: Run backend tests (if exist)
        working-directory: backend
        run: |
          if [ -f package.json ] && jq -e '.scripts.test' package.json >/dev/null 2>&1; then
            npm test || true
          else
            echo "No tests defined"
          fi

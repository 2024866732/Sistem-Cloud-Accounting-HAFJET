---
name: Auto Update Railway URLs (safe)

on:
  workflow_dispatch:
  # Optionally run after a successful deployment workflow (uncomment when ready)
  # workflow_run:
  #   workflows: ["Deploy to Railway"]
  #   types: [completed]


jobs:
  check-secrets:
    runs-on: ubuntu-latest
    outputs:
      has_secrets: ${{ steps.check.outputs.has_secrets }}
    steps:
      - name: Check required secrets
        id: check
        run: |
          echo "Checking repository secrets..."
          # Fail early if secrets are missing - make failure explicit so CI owner can fix
          if [ -z "${{ secrets.REPO_WRITE_TOKEN }}" ]; then
            echo "❌ Error: REPO_WRITE_TOKEN not set"; exit 1
          fi
          if [ -z "${{ secrets.RAILWAY_TOKEN }}" ]; then
            echo "❌ Error: RAILWAY_TOKEN not set"; exit 1
          fi
          echo "has_secrets=true" >> $GITHUB_OUTPUT

  update-railway-urls:
    needs: check-secrets
    if: needs.check-secrets.outputs.has_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install GH CLI
        run: |
          sudo apt-get update && sudo apt-get install -y gh

      - name: Fetch Railway domain(s)
        id: fetch
        runs-on: ubuntu-latest
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          echo "(placeholder) Query Railway API to list domains/services"
          # Example: use Railway CLI or API to discover deployed domain for backend
          # For now output a placeholder domain which will be used downstream
          DOMAIN=example-backend.railway.app
          echo "domain=$DOMAIN" >> $GITHUB_OUTPUT

      - name: Set repository secret RAILWAY_BACKEND_URL with Octokit
        uses: actions/github-script@v7
        env:
          DOMAIN: ${{ steps.fetch.outputs.domain }}
          MY_PAT: ${{ secrets.REPO_WRITE_TOKEN }}
        with:
          script: |
            const sodium = require('libsodium-wrappers');
            await sodium.ready;
            const backend_url = `https://${process.env.DOMAIN}`;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            // Get public key for the repository
            const { data: { key, key_id } } = await github.request('GET /repos/{owner}/{repo}/actions/secrets/public-key', {
              owner,
              repo,
              headers: { authorization: `token ${process.env.MY_PAT}` }
            });
            // Encrypt secret using libsodium
            const binkey = sodium.from_base64(key, sodium.base64_variants.ORIGINAL);
            const binsec = sodium.from_string(backend_url);
            const encsec = sodium.crypto_box_seal(binsec, binkey);
            const encrypted_value = sodium.to_base64(encsec, sodium.base64_variants.ORIGINAL);
            // PUT the encrypted secret
            await github.request('PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}', {
              owner,
              repo,
              secret_name: 'RAILWAY_BACKEND_URL',
              encrypted_value,
              key_id,
              headers: { authorization: `token ${process.env.MY_PAT}` }
            });
            console.log('RAILWAY_BACKEND_URL secret updated via Octokit');

      - name: Report
        run: |
          echo "Auto-update completed. If this ran, repo secrets were updated."



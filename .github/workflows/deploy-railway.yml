name: Deploy to Railway

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-railway-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      BACKEND_PATH: backend
      FRONTEND_PATH: frontend
      IMAGE_OWNER: ${{ github.repository_owner }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build backend (install & build)
        working-directory: ${{ env.BACKEND_PATH }}
        run: |
          npm ci --ignore-scripts --legacy-peer-deps
          npm run build || echo "Backend build script not found, skipping..."

      - name: Build frontend (install & build)
        working-directory: ${{ env.FRONTEND_PATH }}
        run: |
          npm ci --legacy-peer-deps
          npm run build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check GHCR_PAT availability
        id: check-ghcr
        run: |
          if [ -n "${{ secrets.GHCR_PAT }}" ]; then
            echo "available=true" >> $GITHUB_OUTPUT
          else
            echo "available=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to GHCR
        if: steps.check-ghcr.outputs.available == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER }}/hafjet-bukku-backend:latest
            ghcr.io/${{ env.IMAGE_OWNER }}/hafjet-bukku-backend:${{ env.IMAGE_TAG }}
          push: ${{ steps.check-ghcr.outputs.available == 'true' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Build & push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER }}/hafjet-bukku-frontend:latest
            ghcr.io/${{ env.IMAGE_OWNER }}/hafjet-bukku-frontend:${{ env.IMAGE_TAG }}
          push: ${{ steps.check-ghcr.outputs.available == 'true' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache || true

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Check Railway token
        id: check-railway
        run: |
          if [ -n "${{ secrets.RAILWAY_TOKEN }}" ]; then
            echo "available=true" >> $GITHUB_OUTPUT
          else
            echo "available=false" >> $GITHUB_OUTPUT
            echo "⚠️ RAILWAY_TOKEN not configured. Skipping Railway deployment."
          fi

      - name: Deploy to Railway
        if: steps.check-railway.outputs.available == 'true'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          # Deploy backend
          if [ -n "${{ secrets.RAILWAY_PROJECT }}" ]; then
            echo "Deploying to project: ${{ secrets.RAILWAY_PROJECT }}"
            railway up --service backend --detach || railway deploy --service backend --detach || echo "Backend deploy failed"
            railway up --service frontend --detach || railway deploy --service frontend --detach || echo "Frontend deploy failed"
          else
            echo "Deploying to linked project..."
            railway up --detach || railway deploy --detach || echo "Deploy failed - ensure project is linked"
          fi

      - name: Wait for services to be ready
        if: steps.check-railway.outputs.available == 'true'
        run: |
          echo "Waiting 30s for Railway services to start..."
          sleep 30

      - name: Run DB migrations
        if: steps.check-railway.outputs.available == 'true'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          echo "Running database migrations..."
          railway run --service backend "npx migrate-mongo up" || echo "⚠️ Migration failed or not configured"

      - name: Health check
        if: steps.check-railway.outputs.available == 'true' && secrets.RAILWAY_BACKEND_URL != ''
        env:
          BACKEND_URL: ${{ secrets.RAILWAY_BACKEND_URL }}
        run: |
          echo "Health check: $BACKEND_URL/api/health"
          for i in {1..20}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" "${BACKEND_URL}/api/health" 2>/dev/null || echo "000")
            if [ "$status" = "200" ]; then
              echo "✅ Health check passed (attempt $i)"
              exit 0
            fi
            echo "⏳ Attempt $i: status=$status. Retrying in 6s..."
            sleep 6
          done
          echo "⚠️ Health check failed after 20 attempts"
          echo "This may be normal if backend is still starting up"
          exit 0

      - name: Deployment summary
        if: always()
        run: |
          echo "📊 Deployment Summary:"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "✅ Build completed"
          if [ "${{ steps.check-ghcr.outputs.available }}" = "true" ]; then
            echo "✅ Images pushed to GHCR"
          else
            echo "⚠️  GHCR push skipped (no GHCR_PAT)"
          fi
          if [ "${{ steps.check-railway.outputs.available }}" = "true" ]; then
            echo "✅ Railway deployment triggered"
            echo ""
            echo "📋 Next steps:"
            echo "1. Check Railway dashboard: https://railway.app"
            echo "2. Monitor logs: railway logs --service backend"
            echo "3. Check health: curl ${{ secrets.RAILWAY_BACKEND_URL }}/api/health"
          else
            echo "⚠️  Railway deployment skipped (no RAILWAY_TOKEN)"
            echo ""
            echo "To enable Railway deployment:"
            echo "1. Create service token at Railway dashboard"
            echo "2. Add RAILWAY_TOKEN secret in GitHub repo settings"
          fi
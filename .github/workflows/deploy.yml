# CI/CD Deploy ke Railway App
# Perbezaan: LocalStack untuk dev/test local, Railway App untuk deploy cloud/live.

name: CI/CD Deploy

on:
  push:
    branches:
      - main # Hanya run bila ada push ke branch main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # Semua secrets diambil dari GitHub Actions Secret
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      RAILWAY_PROJECT: ${{ secrets.RAILWAY_PROJECT }} # Nama projek Railway anda
      # Tambah env lain jika perlu, contoh API_KEY, DB_URL, dsb.

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4
        # Komen: Ambil semua kod dari repo

      # 2. Setup Node.js runtime (Railway CLI perlukan Node.js)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
        # Komen: Node.js versi 18, tukar ikut keperluan projek

      # 3. Install Railway CLI secara global
      - name: Install Railway CLI
        run: npm install -g railway
        # Komen: Railway CLI untuk deploy ke Railway cloud

      # 4. Login Railway CLI dengan token dari secrets
      - name: Railway login
        run: railway login --token $RAILWAY_TOKEN
        # Komen: Autentikasi Railway CLI guna token rahsia

      # 5. Deploy app ke Railway
      - name: Deploy to Railway
        run: railway up --project $RAILWAY_PROJECT
        # Komen: Deploy kod/app ke Railway project

      # 6. Verify deployment (uji endpoint API selepas deploy)
      - name: Verify deployment
        run: |
          # Tunggu app ready (boleh adjust masa jika perlu)
          sleep 15
          # Uji endpoint API, tukar URL ikut app anda
          curl -sSf https://sistem-cloud-accounting-hafjet-production.up.railway.app/api/health || echo "Health check skipped or failed"
        # Komen: Uji endpoint /api/health, pastikan app running

      # 7. Inform success/failure
      - name: Deployment status
        if: ${{ success() }}
        run: echo "✅ Railway deployment successful!"
      - name: Deployment failed
        if: ${{ failure() }}
        run: echo "❌ Railway deployment failed!"
        # Komen: Workflow akan fail jika mana-mana step gagal

    # Untuk production AWS deploy, tukar step deploy:
    # - name: Setup AWS CLI
    #   uses: aws-actions/configure-aws-credentials@v2
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
    # - name: Deploy to AWS (contoh S3)
    #   run: aws s3 cp build/ s3://your-prod-bucket/ --recursive

# Contoh secrets yang perlu ada di GitHub Actions:
# - RAILWAY_TOKEN: Token Railway anda (dapatkan dari Railway dashboard)
# - RAILWAY_PROJECT: Nama projek Railway (186782e9-5c00-473e-8434-a5fdd3951711)
# - (Tambahan untuk production AWS: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION)

# Cara tambah secrets:
# 1. Pergi ke Settings > Secrets and variables > Actions
# 2. Klik "New repository secret"
# 3. Masukkan nama dan value (contoh: RAILWAY_TOKEN, RAILWAY_PROJECT)

# Perbezaan Railway vs LocalStack:
# - Railway deploy ke cloud sebenar, sesuai untuk production/staging.
# - LocalStack hanya untuk local development, mock AWS services.
# - Railway CLI automasi deploy, scaling, dan env management.
# - LocalStack perlukan endpoint-url, Railway tidak.

# Workflow ini robust dan beginner-friendly untuk CI/CD cloud live ke Railway App!
